{
  "name": "mbpp_100_next_smallest_palindrome",
  "language": "ts",
  "prompt": "//Write a function to find the next smallest palindrome of a specified integer, returned as an integer.\nfunction next_smallest_palindrome(num: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_100_next_smallest_palindrome.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_smallest_palindrome;\n  assert.deepEqual(candidate(99),101);\n  assert.deepEqual(candidate(1221),1331);\n  assert.deepEqual(candidate(120),121);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let increment = Math.pow(10, Math.floor(num_len / 2));\n    if (middle_int < 9) {\n        middle_int++;\n    } else {\n        middle_int = 0;\n        left_half_int += 1;\n    }\n    left_half = left_half_int.toString();\n    middle = middle_int.toString();\n    right_half = left_half.split('').reverse().join('');\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = Math.ceil(len / 2);\n    let left_str = num_str.slice(0, left);\n    let right_str = num_str.slice(right);\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    if (left_num < right_num) {\n        left_str = (left_num + 1).toString();\n        left = left_str.length;\n        right = len - left;\n        right_str = left_str.slice(0, right);\n    } else if (left_num > right_num) {\n        right_str = (right_num + 1).toString();\n        right = right_str.length;\n        left = len - right;\n        left_str = right_str.slice(0, left);\n    } else {\n        left_str = (left_num + 1).toString();\n        left = left_str.length;\n        right = len - left;\n        right_str = left_str.slice(0, right);\n    }\n    return parseInt(left_str + right_str);\n}\n",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let num_str_half_len = Math.floor(num_str_len / 2);\n    let num_str_half_len_ceil = Math.ceil(num_str_len / 2);\n    let num_str_half_len_floor = Math.floor(num_str_len / 2);\n    let num_str_half_len_ceil_pow = Math.pow(10, num_str_half_len_ceil);\n    let num_str_half_len_floor_pow = Math.pow(10, num_str_half_len_floor);\n    let num_str_half_len_ceil_pow_minus_one = num_str_half_len_ceil_pow - 1;\n    let num_str_half_len_floor_pow_minus_one = num_str_half_len_floor_pow - 1;\n    let num_str_half_len_ceil_pow_minus_one_str = num_str_half_len_ceil_pow_minus_one.toString();\n    let num_str_half_len_floor_pow_minus_one_str = num_str_half_len_floor_pow_minus_one.toString();\n    let num_str_half_len_ceil_pow_minus_one_str_rev = num_str_half_len_ceil_pow_minus_one_str.split('').reverse().join('');\n    let num_str_half_len_floor_pow_minus_one_str_rev = num_str_half_len_floor_pow_minus_one_str.split('').reverse().join('');\n    let num_str_half_len_ceil_pow_minus_one_str_rev_num = parseInt(num_str_half_len_ceil_pow_minus_one_str_rev);\n    let num_str_half_len_floor_pow_minus_one_str_rev_",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substr(0, mid);\n  let right = str.substr(mid + len % 2, mid);\n  let left_rev = left.split('').reverse().join('');\n  if (left < right) {\n    return parseInt(left + (len % 2 ? str[mid] : '') + left_rev);\n  }\n  let left_num = parseInt(left);\n  left_num++;\n  left = left_num.toString();\n  left_rev = left.split('').reverse().join('');\n  return parseInt(left + (len % 2 ? str[mid] : '') + left_rev);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = 1;\n    while (left >= 0 && num_str[left] === num_str[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || num_str[left] < num_str[right]) {\n        left = Math.floor(len / 2);\n        right = len % 2 === 0 ? left : left + 1;\n        while (left >= 0) {\n            let sum = parseInt(num_str[left]) + increment;\n            if (sum > 9) {\n                increment = 1;\n                sum = 0;\n            } else {\n                increment = 0;\n            }\n            num_str = num_str.substring(0, left) + sum + num_str.substring(right + 1);\n            left--;\n            right++;\n        }\n    }\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n        num_str = num_str.substring(0, left) + num_str[right] + num_str.substring(left + 1);\n        left--;\n        right++;\n    }\n    return parseInt(num_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substr(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let inc_left_half = (left_half_int + 1).toString();\n    let inc_middle = middle_int === 9 ? '0' : (middle_int + 1).toString();\n    let inc_palindrome = inc_left_half + inc_middle + inc_left_half.split('').reverse().join('');\n    return parseInt(inc_palindrome);\n}\n",
    "  let num_str = num.toString();\n  let num_str_len = num_str.length;\n  let num_str_len_half = Math.floor(num_str_len / 2);\n  let num_str_len_half_ceil = Math.ceil(num_str_len / 2);\n  let num_str_len_half_ceil_minus_one = num_str_len_half_ceil - 1;\n  let num_str_len_half_ceil_minus_two = num_str_len_half_ceil - 2;\n  let num_str_len_half_ceil_minus_three = num_str_len_half_ceil - 3;\n  let num_str_len_half_ceil_minus_four = num_str_len_half_ceil - 4;\n  let num_str_len_half_ceil_minus_five = num_str_len_half_ceil - 5;\n  let num_str_len_half_ceil_minus_six = num_str_len_half_ceil - 6;\n  let num_str_len_half_ceil_minus_seven = num_str_len_half_ceil - 7;\n  let num_str_len_half_ceil_minus_eight = num_str_len_half_ceil - 8;\n  let num_str_len_half_ceil_minus_nine = num_str_len_half_ceil - 9;\n  let num_str_len_half_ceil_minus_ten = num_str_len_half_ceil - 10;\n  let num_str_len_half_ceil_minus_eleven = num_str_len_half_ceil - 11;\n  let num_str_len_half_ceil_minus_twelve = num_str_len_half_ceil - 12;\n  let num_str_len_half_ceil_minus_thirteen = num_str_len_half_ceil - 13;\n  let num_str_len_half_ceil_minus_fourteen = num_str_len_half_ceil",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, (num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str.substring(num_len / 2, num_len / 2 + 1) : \"\";\n  let right_half = num_str.substring(num_len / 2 + middle.length);\n  let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  let next_palindrome = parseInt(left_half + middle + right_half_rev);\n  if (next_palindrome > num) {\n    return next_palindrome;\n  }\n  if (middle) {\n    middle = (parseInt(middle) + 1).toString();\n  } else {\n    left_half = (parseInt(left_half) + 1).toString();\n  }\n  right_half = left_half.split(\"\").reverse().join(\"\");\n  return parseInt(left_half + middle + right_half);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, len);\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n    if (left_rev > right) {\n        return parseInt(left + str[mid] + left_rev);\n    } else {\n        let left_num = parseInt(left);\n        left_num++;\n        left = left_num.toString();\n        left_rev = left.split('').reverse().join('');\n        return parseInt(left + str[mid] + left_rev);\n    }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next_palindrome = parseInt(left + (len % 2 ? str[mid] : '') + right.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (len % 2 && str[mid] < '9') {\n        return parseInt(left + (parseInt(str[mid]) + 1) + right.split('').reverse().join(''));\n    }\n    if (len % 2) {\n        left = (parseInt(left) + 1).toString();\n        right = left.split('').reverse().join('');\n        return parseInt(left + right);\n    }\n    left = (parseInt(left) + 1).toString();\n    right = left.split('').reverse().join('');\n    return parseInt(left + str[mid] + right);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + 1);\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    let left_rev_num = parseInt(left_rev);\n    let right_rev_num = parseInt(right_rev);\n    let left_num_plus_one = left_num + 1;\n    let left_num_plus_one_str = left_num_plus_one.toString();\n    let left_num_plus_one_str_rev = left_num_plus_one_str.split('').reverse().join('');\n    let left_num_plus_one_str_rev_num = parseInt(left_num_plus_one_str_rev);\n    let left_num_plus_one_str_rev_num_plus_one = left_num_plus_one_str_rev_num + 1;\n    let left_num_plus_one_str_rev_num_plus_one_str = left_num_plus_one_str_rev_num_plus_one.toString();\n    let left_num_plus_one_str_rev_num_plus_one_str_rev = left_num_plus_one_str_rev_num_plus_one_str.split('').reverse().join('');\n    let left_num_plus_one_str_rev_num_plus_one_str_rev_num = parseInt(left_num_plus_one_str_rev_num_plus_one_str_rev);\n    let left_num_plus_one_str_rev_num_plus_one_str_rev_num_plus_one = left_num_plus_one_str_rev_num_plus_one_str_rev_num + 1;\n    let left_",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_smaller = false;\n    let i = mid - 1;\n    let j = len % 2 === 0 ? mid : mid + 1;\n    while (i >= 0 && num_str[i] === num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str = replace_char(num_str, j, num_str[i]);\n        num_str = replace_char(num_str, i, num_str[j]);\n        i--;\n        j++;\n    }\n    if (left_smaller) {\n        let carry = 1;\n        i = mid - 1;\n        if (len % 2 === 1) {\n            num_str = replace_char(num_str, mid, (parseInt(num_str[mid]) + carry).toString());\n            carry = parseInt(num_str[mid]) / 10;\n            num_str = replace_char(num_str, mid, (parseInt(num_str[mid]) % 10).toString());\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            num_str = replace_char(num_str, i, (parseInt(num_str[i]) + carry).toString());\n            carry = parseInt(num_str[i]) / 10;\n            num_str = replace_char(num_str, i, (parseInt(num_str[i]) % 10).toString());\n            num_str = replace_char(num_str, j, num_str[i]);\n            i--;\n            j++;\n        }\n    }\n    return parseInt(num_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let is_even = num_len % 2 === 0;\n    let half_len = Math.floor(num_len / 2);\n    let left_half = num_str.slice(0, half_len);\n    let right_half = num_str.slice(half_len + (is_even ? 0 : 1));\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let left_half_str = left_half_int.toString();\n    let right_half_str = right_half_int.toString();\n    let left_half_str_rev = left_half_str.split(\"\").reverse().join(\"\");\n    let right_half_str_rev = right_half_str.split(\"\").reverse().join(\"\");\n    let left_half_rev_int = parseInt(left_half_str_rev);\n    let right_half_rev_int = parseInt(right_half_str_rev);\n    let left_half_rev_str = left_half_rev_int.toString();\n    let right_half_rev_str = right_half_rev_int.toString();\n    let left_half_rev_str_len = left_half_rev_str.length;\n    let right_half_rev_str_len = right_half_rev_str.length;\n    let left_half_rev_str_pad = left_half_rev_str_len < half_len ? \"0\".repeat(half_len - left_half_rev_str_len) + left_half_rev_str : left_half_rev_str;\n    let right_half_rev_str_pad = right_half_rev_str_len < half_len ? \"0\".repeat(half_len - right_half_rev_str_len) + right_half_rev_str : right_half_rev_str;\n    let left_half_rev_str_pad_int = parseInt(left_half_rev_str_pad);\n    let right",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, mid);\n    let right_half = num_str.substring(mid + num_len % 2);\n    let next_palindrome = parseInt(left_half + (num_len % 2 == 1 ? num_str[mid] : \"\") + left_half.split(\"\").reverse().join(\"\"));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    } else {\n        if (num_len % 2 == 1) {\n            if (num_str[mid] < \"9\") {\n                return parseInt(left_half + (parseInt(num_str[mid]) + 1) + left_half.split(\"\").reverse().join(\"\"));\n            } else {\n                return parseInt(left_half + \"0\" + left_half.split(\"\").reverse().join(\"\"));\n            }\n        } else {\n            if (left_half < right_half) {\n                return parseInt(left_half + left_half.split(\"\").reverse().join(\"\"));\n            } else {\n                let carry = 1;\n                let new_left_half = \"\";\n                for (let i = left_half.length - 1; i >= 0; i--) {\n                    let sum = parseInt(left_half[i]) + carry;\n                    new_left_half = (sum % 10).toString() + new_left_half;\n                    carry = Math.floor(sum / 10);\n                }\n                if (carry == 1) {\n                    new_left_half = \"1\" + new_left_half;\n                }\n                return parseInt(new_left_half + new_left_half.split(\"\").reverse().join(\"\"));\n            }\n        }\n    }\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substring(0, mid);\n  let right = str.substring(mid + 1);\n  let left_rev = left.split('').reverse().join('');\n  let right_rev = right.split('').reverse().join('');\n  let left_int = parseInt(left);\n  let right_int = parseInt(right);\n  let left_rev_int = parseInt(left_rev);\n  let right_rev_int = parseInt(right_rev);\n  let left_rev_str = left_rev_int.toString();\n  let right_rev_str = right_rev_int.toString();\n  let left_rev_len = left_rev_str.length;\n  let right_rev_len = right_rev_str.length;\n  let left_len = left.length;\n  let right_len = right.length;\n  let left_rev_mid = Math.floor(left_rev_len / 2);\n  let right_rev_mid = Math.floor(right_rev_len / 2);\n  let left_mid = Math.floor(left_len / 2);\n  let right_mid = Math.floor(right_len / 2);\n  let left_rev_mid_int = parseInt(left_rev_str.substring(left_rev_mid));\n  let right_rev_mid_int = parseInt(right_rev_str.substring(right_rev_mid));\n  let left_mid_int = parseInt(left.substring(left_mid));\n  let right_mid_int = parseInt(right.substring(right_mid));\n  let left_rev_mid_int_str = left_rev_mid_int.toString();\n  let right_rev_mid_int_str = right_rev_mid_int.toString();\n  let left_mid_int_str = left_mid_int.toString();\n  let right_mid_int_str = right_mid_int.toString();\n ",
    "  let next_palindrome = num;\n  let is_palindrome = false;\n  while (!is_palindrome) {\n    next_palindrome++;\n    if (is_palindrome_num(next_palindrome)) {\n      is_palindrome = true;\n    }\n  }\n  return next_palindrome;\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2);\n    let right_rev = right.split('').reverse().join('');\n\n    if (left < right_rev) {\n        return parseInt(left + (len % 2 ? str[mid] : '') + right_rev);\n    }\n\n    left = (parseInt(left) + 1).toString();\n    right_rev = left.split('').reverse().join('');\n\n    return parseInt(left + (len % 2 ? str[mid] : '') + right_rev);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half_len = Math.floor(num_len / 2);\n    let num_half_str = num_str.substr(0, num_half_len);\n    let num_half_str_rev = num_half_str.split('').reverse().join('');\n    let num_half_str_rev_num = parseInt(num_half_str_rev);\n    let num_half_str_num = parseInt(num_half_str);\n    let num_half_str_rev_num_str = num_half_str_rev_num.toString();\n    let num_half_str_num_str = num_half_str_num.toString();\n    let num_half_str_rev_num_str_len = num_half_str_rev_num_str.length;\n    let num_half_str_num_str_len = num_half_str_num_str.length;\n    let num_half_str_rev_num_str_len_diff = num_half_len - num_half_str_rev_num_str_len;\n    let num_half_str_num_str_len_diff = num_half_len - num_half_str_num_str_len;\n    let num_half_str_rev_num_str_len_diff_str = '';\n    let num_half_str_num_str_len_diff_str = '';\n    let num_half_str_rev_num_str_len_diff_str_num = 0;\n    let num_half_str_num_str_len_diff_str_num = 0;\n    let num_half_str_rev_num_str_len_diff_str_num_str = '';\n    let num_half_str_num_str_len_diff_str_num_str = '';\n    let num_half_str_rev_num_str_len_diff_str_num_str_len = 0;\n    let num_half_str_num_str_len_diff",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_mid = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, num_mid);\n    let right_half = num_str.substring(num_mid + num_len % 2, num_len);\n    let left_half_num = parseInt(left_half);\n    let right_half_num = parseInt(right_half);\n    let left_half_num_rev = parseInt(left_half.split('').reverse().join(''));\n    let right_half_num_rev = parseInt(right_half.split('').reverse().join(''));\n    if (left_half_num_rev > right_half_num) {\n        return parseInt(left_half + left_half_num_rev.toString().substring(num_len % 2, num_len));\n    }\n    else {\n        let next_left_half_num = left_half_num + 1;\n        let next_left_half_num_rev = parseInt(next_left_half_num.toString().split('').reverse().join(''));\n        if (next_left_half_num_rev < next_left_half_num) {\n            return parseInt(next_left_half_num.toString() + next_left_half_num_rev.toString().substring(num_len % 2, num_len));\n        }\n        else {\n            return parseInt(next_left_half_num.toString() + next_left_half_num_rev.toString().substring(num_len % 2, num_len));\n        }\n    }\n}\n",
    "    if (num < 0) {\n        return -1;\n    }\n    if (num < 10) {\n        return num;\n    }\n    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_half = num_str.substring(0, mid);\n    let right_half = num_str.substring(mid + len % 2, len);\n    if (left_half < right_half) {\n        return parseInt(left_half + (len % 2 == 1 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n    }\n    let left_half_int = parseInt(left_half);\n    let carry = 1;\n    let new_left_half = '';\n    for (let i = mid - 1; i >= 0; i--) {\n        let sum = parseInt(left_half[i]) + carry;\n        if (sum > 9) {\n            carry = 1;\n            sum -= 10;\n        } else {\n            carry = 0;\n        }\n        new_left_half = sum.toString() + new_left_half;\n    }\n    if (carry == 1) {\n        new_left_half = '1' + new_left_half;\n    }\n    return parseInt(new_left_half + (len % 2 == 1 ? num_str[mid] : '') + new_left_half.split('').reverse().join(''));\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num_str) {\n    return parseInt(palindrome);\n  } else {\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let new_left_half_int = middle_int === 9 ? left_half_int + 1 : left_half_int;\n    let new_middle_int = middle_int === 9 ? 0 : middle_int + 1;\n    let new_left_half = new_left_half_int.toString();\n    let new_middle = new_middle_int.toString();\n    let new_right_half = new_left_half.split(\"\").reverse().join(\"\");\n    return parseInt(new_left_half + new_middle + new_right_half);\n  }\n}\n",
    "  // your code here\n  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substring(0, mid);\n  let right = str.substring(mid + len % 2, len);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  let next_palindrome = parseInt(left + str[mid] + right_rev);\n  if (next_palindrome > num) {\n    return next_palindrome;\n  } else {\n    if (len % 2 === 0) {\n      left = (parseInt(left) + 1).toString();\n      right = left.split(\"\").reverse().join(\"\");\n      return parseInt(left + right);\n    } else {\n      let mid_num = parseInt(str[mid]);\n      if (mid_num < 9) {\n        return parseInt(left + (mid_num + 1) + right_rev);\n      } else {\n        left = (parseInt(left) + 1).toString();\n        right = left.split(\"\").reverse().join(\"\");\n        return parseInt(left + \"0\" + right);\n      }\n    }\n  }\n}\n\nconsole.log(next_smallest_palindrome(123));\nconsole.log(next_smallest_palindrome(2));\nconsole.log(next_smallest_palindrome(180));\nconsole.log(next_smallest_palindrome(181));\nconsole.log(next_smallest_palindrome(999));\nconsole.log(next_smallest_palindrome(1000));\nconsole.log(next_smallest_palindrome(1001));\nconsole.log(next_smallest_palindrome(10001));\nconsole.log(next_smallest_palindrome(10010));\nconsole.log(next_smallest_palindrome(10011));\nconsole.log(next_smallest_palindrome(100000));\nconsole.log(next_smallest_palindrome(100001));\nconsole.log(next_smallest_palindrome(100010",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + len % 2);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substring(1);\n    return parseInt(next_palindrome + right.split('').reverse().join(''));\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + len % 2, len);\n    if (left === right) {\n        let new_left = (parseInt(left) + 1).toString();\n        let new_right = new_left.substring(0, mid);\n        return parseInt(new_left + new_right.split(\"\").reverse().join(\"\"));\n    } else {\n        let new_left = (parseInt(left) + 1).toString();\n        let new_right = new_left.substring(0, mid);\n        return parseInt(new_left + new_right.split(\"\").reverse().join(\"\"));\n    }\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let num_half_len = Math.floor(num_len / 2);\n  let num_left = num_str.slice(0, num_half_len);\n  let num_right = num_str.slice(num_len - num_half_len);\n  let num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  if (num_left < num_left_rev) {\n    num_left = (parseInt(num_left) + 1).toString();\n    num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  }\n  let num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  if (num_right < num_right_rev) {\n    num_right = (parseInt(num_right) + 1).toString();\n    num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  }\n  return parseInt(num_left + num_right_rev);\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n  let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length);\n  let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  let new_num_str = left_half + middle + right_half_rev;\n  let new_num = parseInt(new_num_str);\n  if (new_num > num) {\n    return new_num;\n  }\n  if (middle === \"9\") {\n    middle = \"0\";\n    let left_half_num = parseInt(left_half) + 1;\n    left_half = left_half_num.toString();\n    let left_half_len = left_half.length;\n    if (left_half_len > Math.floor(num_len / 2)) {\n      left_half = left_half.substring(left_half_len - Math.floor(num_len / 2));\n    }\n  } else {\n    middle = (parseInt(middle) + 1).toString();\n  }\n  right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  new_num_str = left_half + middle + right_half_rev;\n  new_num = parseInt(new_num_str);\n  return new_num;\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num_str) {\n        return parseInt(palindrome);\n    }\n    if (middle === \"9\") {\n        middle = \"0\";\n        let carry = 1;\n        let left_half_arr = left_half.split(\"\");\n        for (let i = left_half_arr.length - 1; i >= 0; i--) {\n            let sum = parseInt(left_half_arr[i]) + carry;\n            if (sum > 9) {\n                carry = 1;\n                left_half_arr[i] = \"0\";\n            } else {\n                carry = 0;\n                left_half_arr[i] = sum.toString();\n                break;\n            }\n        }\n        if (carry === 1) {\n            left_half_arr.unshift(\"1\");\n        }\n        left_half = left_half_arr.join(\"\");\n        right_half = left_half.split(\"\").reverse().join(\"\");\n        palindrome = left_half + middle + right_half;\n        return parseInt(palindrome);\n    }\n    middle = (parseInt(middle) + 1).toString();\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num_str) {\n        return parseInt(palindrome);\n    }\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let right_half_int = parseInt(right_half);\n    let increment = Math.pow(10, Math.floor(num_len / 2));\n    let new_left_half_int = 0;\n    let new_middle_int = 0;\n    if (middle_int < 9) {\n        new_middle_int = middle_int + 1;\n        new_left_half_int = left_half_int;\n    } else {\n        new_middle_int = 0;\n        new_left_half_int = left_half_int + 1;\n    }\n    let new_left_half = new_left_half_int.toString();\n    let new_middle = new_middle_int.toString();\n    let new_right_half = new_left_half.split('').reverse().join('');\n    return parseInt(new_left_half + new_middle + new_right_half);\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substring(0, mid);\n  let right = str.substring(mid + 1);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  let left_rev = left.split(\"\").reverse().join(\"\");\n  let left_int = parseInt(left);\n  let right_int = parseInt(right);\n  let right_rev_int = parseInt(right_rev);\n  let left_rev_int = parseInt(left_rev);\n  if (left_int === right_rev_int) {\n    if (left_int === right_int) {\n      let left_int_plus_one = left_int + 1;\n      let left_int_plus_one_str = left_int_plus_one.toString();\n      let left_int_plus_one_str_rev = left_int_plus_one_str\n        .split(\"\")\n        .reverse()\n        .join(\"\");\n      let left_int_plus_one_str_rev_int = parseInt(left_int_plus_one_str_rev);\n      if (left_int_plus_one_str_rev_int < right_int) {\n        return parseInt(left_int_plus_one_str + left_int_plus_one_str_rev);\n      } else {\n        return parseInt(left_int_plus_one_str + left_int_plus_one_str_rev);\n      }\n    } else {\n      return parseInt(left + right_rev);\n    }\n  } else {\n    if (left_rev_int < right_int) {\n      return parseInt(left_rev + right_rev);\n    } else {\n      let left_int_plus_one = left_int + 1;\n      let left_int_plus_one_str = left_int_plus_one.toString();\n      let left_int_plus_one_str_rev = left_int_plus_one_str\n        .split(\"\")\n        .",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + (len % 2 ? str[mid] : '') + right_rev);\n    } else {\n        let left_int = parseInt(left);\n        let left_int_plus = left_int + 1;\n        let left_plus = left_int_plus.toString();\n        let left_plus_len = left_plus.length;\n        let left_plus_mid = Math.floor(left_plus_len / 2);\n        let left_plus_left = left_plus.substr(0, left_plus_mid);\n        let left_plus_right = left_plus.substr(left_plus_mid + left_plus_len % 2, left_plus_mid);\n        let left_plus_right_rev = left_plus_right.split('').reverse().join('');\n        return parseInt(left_plus_left + (left_plus_len % 2 ? left_plus[left_plus_mid] : '') + left_plus_right_rev);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid_idx = Math.floor(num_len / 2);\n    let left_str = num_str.substring(0, mid_idx);\n    let right_str = num_str.substring(mid_idx + num_len % 2);\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    let left_num_rev = parseInt(left_str.split('').reverse().join(''));\n    if (left_num_rev < right_num) {\n        left_num++;\n        left_num_rev = parseInt(left_str.split('').reverse().join(''));\n    }\n    return parseInt(left_num.toString() + left_num_rev.toString());\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left = num_str.substring(0, Math.floor(num_len / 2));\n    let right = num_str.substring(Math.ceil(num_len / 2));\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    let left_num_str = \"\";\n    let right_num_str = \"\";\n    let result_str = \"\";\n    if (num_len % 2 === 0) {\n        left_num_str = (left_num + 1).toString();\n        right_num_str = left_num_str.substring(0, left_num_str.length - 1).split(\"\").reverse().join(\"\");\n        result_str = left_num_str + right_num_str;\n    } else {\n        left_num_str = (left_num + 1).toString();\n        right_num_str = left_num_str.substring(0, left_num_str.length).split(\"\").reverse().join(\"\");\n        result_str = left_num_str + right_num_str;\n    }\n    return parseInt(result_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, mid);\n    let middle = num_len % 2 === 1 ? num_str.substring(mid, mid + 1) : '';\n    let right_half = num_str.substring(mid + middle.length);\n    let right_half_rev = right_half.split('').reverse().join('');\n    let new_num = parseInt(left_half + middle + right_half_rev);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    else {\n        left_half = (parseInt(left_half) + 1).toString();\n    }\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length);\n    let right_half_reversed = right_half.split(\"\").reverse().join(\"\");\n    let new_num_str = left_half + middle + right_half_reversed;\n    let new_num = parseInt(new_num_str);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (middle !== \"\") {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    let left_half_int = parseInt(left_half);\n    left_half_int++;\n    left_half = left_half_int.toString();\n    if (left_half.length < left_half.length) {\n        left_half = \"0\".repeat(left_half.length - left_half.length) + left_half;\n    }\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    new_num_str = left_half + middle + right_half;\n    new_num = parseInt(new_num_str);\n    return new_num;\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid = Math.floor(num_len / 2);\n  let left_half = num_str.substr(0, mid);\n  let right_half = num_str.substr(mid + num_len % 2, mid);\n  let left_half_num = parseInt(left_half);\n  let right_half_num = parseInt(right_half);\n  let next_palindrome = 0;\n  if (left_half_num > right_half_num) {\n    next_palindrome = parseInt(left_half + left_half.split('').reverse().join(''));\n  } else {\n    let next_left_half = (left_half_num + 1).toString();\n    next_palindrome = parseInt(next_left_half + next_left_half.split('').reverse().join(''));\n  }\n  return next_palindrome;\n}\n\nconsole.log(next_smallest_palindrome(1));\nconsole.log(next_smallest_palindrome(9));\nconsole.log(next_smallest_palindrome(10));\nconsole.log(next_smallest_palindrome(11));\nconsole.log(next_smallest_palindrome(12));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(100));\nconsole.log(next_smallest_palindrome(101));\nconsole.log(next_smallest_palindrome(111));\nconsole.log(next_smallest_palindrome(121));\nconsole.log(next_smallest_palindrome(999));\nconsole.log(next_smallest_palindrome(1000));\nconsole.log(next_smallest_palindrome(1001));\nconsole.log(next_smallest_palindrome(1111));\nconsole.log(next_smallest_palindrome(1221));\nconsole.log(next_smallest_palindrome(9999));\nconsole.log(next_smallest_",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let mid = Math.floor(len / 2);\n  let left_side = num_str.substring(0, mid);\n  let right_side = num_str.substring(mid + len % 2, len);\n  let next_palindrome = Number(left_side + right_side.split(\"\").reverse().join(\"\"));\n  if (next_palindrome > num) {\n    return next_palindrome;\n  }\n  if (len % 2 === 1) {\n    if (num_str[mid] !== \"9\") {\n      return Number(left_side + (Number(num_str[mid]) + 1).toString() + right_side.split(\"\").reverse().join(\"\"));\n    }\n    left_side = (Number(left_side) + 1).toString();\n    right_side = right_side.split(\"\").reverse().join(\"\");\n    return Number(left_side + \"0\" + right_side);\n  }\n  left_side = (Number(left_side) + 1).toString();\n  right_side = right_side.split(\"\").reverse().join(\"\");\n  return Number(left_side + right_side);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    let left_rev_num = parseInt(left_rev);\n    let right_rev_num = parseInt(right_rev);\n    if (left_num === left_rev_num && right_num === right_rev_num) {\n        if (left_num === right_num) {\n            return parseInt(left + '0' + right);\n        } else {\n            return parseInt(left + right);\n        }\n    } else {\n        if (left_num > left_rev_num) {\n            return parseInt(left + right_rev);\n        } else {\n            return parseInt(left_rev + right);\n        }\n    }\n}\n",
    "    if (num < 0) {\n        return -1;\n    }\n    if (num < 10) {\n        return num;\n    }\n    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    left_half = (parseInt(left_half) + 1).toString();\n    right_half = left_half.split('').reverse().join('');\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let num_str_half_len = Math.floor(num_str_len / 2);\n    let num_str_half_len_ceil = Math.ceil(num_str_len / 2);\n    let num_str_half_len_ceil_minus_one = num_str_half_len_ceil - 1;\n    let num_str_half_len_ceil_plus_one = num_str_half_len_ceil + 1;\n    let num_str_half_len_ceil_plus_two = num_str_half_len_ceil + 2;\n    let num_str_half_len_ceil_plus_three = num_str_half_len_ceil + 3;\n    let num_str_half_len_ceil_minus_two = num_str_half_len_ceil - 2;\n    let num_str_half_len_ceil_minus_three = num_str_half_len_ceil - 3;\n    let num_str_half_len_ceil_minus_four = num_str_half_len_ceil - 4;\n    let num_str_half_len_ceil_plus_four = num_str_half_len_ceil + 4;\n    let num_str_half_len_ceil_plus_five = num_str_half_len_ceil + 5;\n    let num_str_half_len_ceil_plus_six = num_str_half_len_ceil + 6;\n    let num_str_half_len_ceil_plus_seven = num_str_half_len_ceil + 7;\n    let num_str_half_len_ceil_plus_eight = num_str_half_len_ceil + 8;\n    let num_str_half_len_ceil_plus_nine = num_str_half_len_ceil + 9;\n    let num_str_half_len_ceil_plus_ten = num_str_half_len_ceil + 10;\n",
    "  let palindrome = num;\n  let isPalindrome = false;\n  while (!isPalindrome) {\n    palindrome++;\n    isPalindrome = palindrome.toString() === palindrome.toString().split(\"\").reverse().join(\"\");\n  }\n  return palindrome;\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + 1);\n    let right_rev = right.split('').reverse().join('');\n    let left_rev = left.split('').reverse().join('');\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    let right_rev_num = parseInt(right_rev);\n    let left_rev_num = parseInt(left_rev);\n    if (left_num < right_rev_num) {\n        let new_left = (left_num + 1).toString();\n        let new_right = new_left.split('').reverse().join('');\n        return parseInt(new_left + str[mid] + new_right);\n    } else if (left_num > right_rev_num) {\n        let new_left = left;\n        let new_right = new_left.split('').reverse().join('');\n        return parseInt(new_left + str[mid] + new_right);\n    } else {\n        if (left_num < right_num) {\n            let new_left = (left_num + 1).toString();\n            let new_right = new_left.split('').reverse().join('');\n            return parseInt(new_left + str[mid] + new_right);\n        } else if (left_num > right_num) {\n            let new_left = left;\n            let new_right = new_left.split('').reverse().join('');\n            return parseInt(new_left + str[mid] + new_right);\n        } else {\n            if (left_rev_num < right_num) {\n                let new_left = (left_rev_num + 1).toString();\n                let new_right = new_left.split('').reverse().join('');\n                return parseInt(new_left + str[mid] + new_right);\n           ",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (num_str === palindrome) {\n        return num;\n    } else {\n        let left_half_int = parseInt(left_half);\n        let palindrome_int = parseInt(palindrome);\n        if (palindrome_int > num) {\n            return palindrome_int;\n        } else {\n            let next_left_half = (left_half_int + 1).toString();\n            let next_palindrome = next_left_half + middle + next_left_half.split(\"\").reverse().join(\"\");\n            return parseInt(next_palindrome);\n        }\n    }\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = (num_len % 2 === 1) ? num_str.charAt(Math.floor(num_len / 2)) : '';\n  let right_half = left_half.split('').reverse().join('');\n  let next_palindrome = parseInt(left_half + middle + right_half);\n  if (next_palindrome > num) {\n    return next_palindrome;\n  }\n  if (middle === '') {\n    left_half = (parseInt(left_half) + 1).toString();\n    middle = '0';\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n  }\n  if (middle !== '9') {\n    middle = (parseInt(middle) + 1).toString();\n    return parseInt(left_half + middle + right_half);\n  }\n  middle = '0';\n  left_half = (parseInt(left_half) + 1).toString();\n  right_half = left_half.split('').reverse().join('');\n  return parseInt(left_half + middle + right_half);\n}\n",
    "    let num_str = num.toString();\n    let is_odd = num_str.length % 2 !== 0;\n    let left_half = num_str.substr(0, num_str.length / 2);\n    let right_half = num_str.substr(num_str.length / 2 + (is_odd ? 1 : 0));\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let left_half_int_next = left_half_int + 1;\n    let left_half_next = left_half_int_next.toString();\n    let right_half_next = left_half_next.split('').reverse().join('');\n    let next_palindrome = left_half_next + (is_odd ? num_str[num_str.length / 2] : '') + right_half_next;\n    return parseInt(next_palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = (num_len % 2 === 1) ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    } else {\n        let left_half_int = parseInt(left_half);\n        let middle_int = parseInt(middle);\n        let new_left_half = (middle_int === 9) ? (left_half_int + 1).toString() : left_half;\n        middle = (middle_int === 9) ? \"0\" : (middle_int + 1).toString();\n        right_half = new_left_half.split(\"\").reverse().join(\"\");\n        return parseInt(new_left_half + middle + right_half);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left = Math.floor(num_len / 2);\n    let right = num_len % 2 === 0 ? left : left + 1;\n    let left_part = num_str.substring(0, left);\n    let right_part = num_str.substring(right);\n    let left_part_rev = left_part.split('').reverse().join('');\n    let new_num_str = left_part + left_part_rev;\n    let new_num = parseInt(new_num_str);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (left_part[left_part.length - 1] !== '9') {\n        left_part = (parseInt(left_part) + 1).toString();\n        left_part_rev = left_part.split('').reverse().join('');\n        new_num_str = left_part + left_part_rev;\n        return parseInt(new_num_str);\n    }\n    let carry = 1;\n    let i = left_part.length - 1;\n    while (i >= 0 && carry === 1) {\n        let digit = parseInt(left_part[i]);\n        if (digit === 9) {\n            left_part = left_part.substring(0, i) + '0' + left_part.substring(i + 1);\n            i--;\n        } else {\n            left_part = left_part.substring(0, i) + (digit + 1).toString() + left_part.substring(i + 1);\n            carry = 0;\n        }\n    }\n    if (carry === 1) {\n        left_part = '1' + left_part;\n    }\n    left_part_rev = left_part.split('').reverse().join('');\n    new_num_str = left_part + left_part_rev;\n    return parseInt(new_num_str);\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num_str) {\n    return parseInt(palindrome);\n  }\n  let left_half_int = parseInt(left_half);\n  let middle_int = parseInt(middle);\n  let left_half_int_plus_one = left_half_int + 1;\n  let left_half_int_plus_one_str = left_half_int_plus_one.toString();\n  let left_half_int_plus_one_str_len = left_half_int_plus_one_str.length;\n  let left_half_int_plus_one_str_len_diff =\n    left_half_int_plus_one_str_len - left_half.length;\n  if (left_half_int_plus_one_str_len_diff > 0) {\n    middle = \"\";\n  } else if (left_half_int_plus_one_str_len_diff === 0) {\n    middle = middle_int === 9 ? \"0\" : (middle_int + 1).toString();\n  }\n  left_half = left_half_int_plus_one_str;\n  right_half = left_half.split(\"\").reverse().join(\"\");\n  palindrome = left_half + middle + right_half;\n  return parseInt(palindrome);\n}\n\nconsole.log(next_smallest_palindrome(123)); // 131\nconsole.log(next_smallest_palindrome(1234)); // 1331\nconsole.log(next_smallest_palindrome(12345)); // 12421\nconsole.log(next_smallest_palindrome(12345",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + str[mid] + right_rev);\n    }\n    let carry = 1;\n    left = (parseInt(left) + carry).toString();\n    carry = parseInt(left.slice(0, -mid)) > 0 ? 1 : 0;\n    left = left.slice(-mid);\n    right_rev = (parseInt(right_rev) + carry).toString();\n    right_rev = right_rev.slice(-mid);\n    return parseInt(left + str[mid] + right_rev);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : '';\n    let right_half = num_str.substring(Math.ceil(num_len / 2));\n    let right_half_rev = right_half.split('').reverse().join('');\n    let next_palindrome = left_half + middle + right_half_rev;\n    if (next_palindrome > num_str) {\n        return parseInt(next_palindrome);\n    }\n    if (middle === '') {\n        let left_half_int = parseInt(left_half);\n        let left_half_int_plus_1 = left_half_int + 1;\n        let left_half_int_plus_1_str = left_half_int_plus_1.toString();\n        let left_half_int_plus_1_str_len = left_half_int_plus_1_str.length;\n        if (left_half_int_plus_1_str_len > left_half.length) {\n            middle = '0';\n            left_half = left_half_int_plus_1_str.substring(0, left_half_int_plus_1_str_len - 1);\n        } else {\n            left_half = left_half_int_plus_1_str;\n        }\n    } else {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    right_half_rev = left_half.split('').reverse().join('');\n    next_palindrome = left_half + middle + right_half_rev;\n    return parseInt(next_palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let is_odd = num_len % 2 !== 0;\n    let mid_index = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, mid_index);\n    let right_half = num_str.substring(mid_index + (is_odd ? 1 : 0));\n    let left_half_reversed = left_half.split('').reverse().join('');\n\n    if (left_half_reversed < right_half) {\n        let next_left_half = (parseInt(left_half) + 1).toString();\n        let next_left_half_reversed = next_left_half.split('').reverse().join('');\n        return parseInt(next_left_half + (is_odd ? next_left_half_reversed.substring(1) : next_left_half_reversed));\n    } else {\n        return parseInt(left_half + (is_odd ? left_half_reversed.substring(1) : left_half_reversed));\n    }\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_side = num_str.substr(0, mid);\n    let right_side = num_str.substr(mid + len % 2, mid);\n    let next_palindrome = parseInt(left_side + (len % 2 ? num_str[mid] : '') + left_side.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (len % 2 && parseInt(num_str[mid]) < 9) {\n        return next_smallest_palindrome(parseInt(left_side + (parseInt(num_str[mid]) + 1) + left_side.split('').reverse().join('')));\n    }\n    if (parseInt(left_side) < parseInt(right_side)) {\n        return next_smallest_palindrome(parseInt(left_side + (len % 2 ? num_str[mid] : '') + (parseInt(right_side) + 1).toString().split('').reverse().join('')));\n    }\n    let carry = 1;\n    let left_side_arr = left_side.split('');\n    for (let i = mid - 1; i >= 0; i--) {\n        let sum = parseInt(left_side_arr[i]) + carry;\n        if (sum > 9) {\n            carry = 1;\n            left_side_arr[i] = '0';\n        } else {\n            left_side_arr[i] = sum.toString();\n            break;\n        }\n    }\n    if (carry > 0) {\n        left_side_arr.unshift('1');\n        mid++;\n    }\n    left_side = left_side_arr.join('');\n    return parseInt(left_side + (len % 2 ? num_str[mid] : '') + left_side.split('').reverse().join(''));\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.slice(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let next_palindrome = parseInt(left_half + middle + right_half);\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    left_half = (parseInt(left_half) + 1).toString();\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 == 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length);\n    let right_half_reversed = right_half.split(\"\").reverse().join(\"\");\n    let new_num_str = left_half + middle + right_half_reversed;\n    let new_num = parseInt(new_num_str);\n    if (new_num > num) {\n        return new_num;\n    } else {\n        if (middle == \"\") {\n            let left_half_num = parseInt(left_half);\n            left_half_num += 1;\n            left_half = left_half_num.toString();\n            middle = \"\";\n        } else {\n            middle = (parseInt(middle) + 1).toString();\n        }\n        right_half = left_half.split(\"\").reverse().join(\"\");\n        new_num_str = left_half + middle + right_half;\n        new_num = parseInt(new_num_str);\n        return new_num;\n    }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + len % 2, len);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + str.substring(mid, mid + len % 2) + right_rev);\n    }\n    let next_left = (parseInt(left) + 1).toString();\n    let next_right = next_left.substring(0, mid).split('').reverse().join('');\n    return parseInt(next_left + str.substring(mid, mid + len % 2) + next_right);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        let new_left = (parseInt(left) + 1).toString();\n        let new_right = new_left.split('').reverse().join('');\n        return parseInt(new_left + new_right);\n    } else {\n        let new_left = left.split('').reverse().join('');\n        return parseInt(left + new_left);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let is_odd = num_len % 2 === 1;\n    let left_side = num_str.substring(0, Math.floor(num_len / 2));\n    let right_side = num_str.substring(Math.ceil(num_len / 2));\n    let left_side_num = Number(left_side);\n    let right_side_num = Number(right_side);\n    let left_side_num_next = left_side_num + 1;\n    let left_side_num_next_str = left_side_num_next.toString();\n    let left_side_num_next_str_len = left_side_num_next_str.length;\n    let left_side_num_next_str_len_diff = left_side_num_next_str_len - left_side.length;\n    let left_side_num_next_str_len_diff_half = Math.floor(left_side_num_next_str_len_diff / 2);\n    let left_side_num_next_str_len_diff_half_ceil = Math.ceil(left_side_num_next_str_len_diff / 2);\n    let left_side_num_next_str_len_diff_half_ceil_str = left_side_num_next_str_len_diff_half_ceil.toString();\n    let left_side_num_next_str_len_diff_half_ceil_str_len = left_side_num_next_str_len_diff_half_ceil_str.length;\n    let left_side_num_next_str_len_diff_half_ceil_str_len_diff = left_side_num_next_str_len_diff_half_ceil_str_len - left_side_num_next_str_len_diff_half_ceil_str_len;\n    let left_side_num_next_str_len_diff_half_ceil_str_len_diff_half = Math.floor(left",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let half_len = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, half_len);\n    let middle = num_len % 2 === 1 ? num_str[half_len] : \"\";\n    let right_half = num_str.substring(half_len + middle.length);\n    let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n    let next_palindrome = left_half + middle + right_half_rev;\n    if (next_palindrome <= num_str) {\n        left_half = (parseInt(left_half) + 1).toString();\n        right_half_rev = left_half.split(\"\").reverse().join(\"\");\n        next_palindrome = left_half + middle + right_half_rev;\n    }\n    return parseInt(next_palindrome);\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(len / 2));\n  let mid = len % 2 === 1 ? num_str.substring(Math.floor(len / 2), Math.floor(len / 2) + 1) : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + mid + right_half;\n  if (palindrome > num_str) {\n    return parseInt(palindrome);\n  }\n  let left_half_int = parseInt(left_half);\n  let new_left_half_int = left_half_int + 1;\n  let new_left_half = new_left_half_int.toString();\n  if (new_left_half.length > left_half.length) {\n    mid = \"0\";\n    new_left_half = \"1\";\n  }\n  return parseInt(new_left_half + mid + new_left_half.split(\"\").reverse().join(\"\"));\n}\n\nconsole.log(next_smallest_palindrome(123));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1233));\nconsole.log(next_smallest_palindrome(1221));\nconsole.log(next_smallest_palindrome(1231));\nconsole.log(next_smallest_palindrome(12345));\nconsole.log(next_smallest_palindrome(12321));\nconsole.log(next_smallest_palindrome(12331));\nconsole.log(next_smallest_palindrome(12341));\nconsole.log(next_smallest_palindrome(123454321));\nconsole.log(next_smallest_palindrome(123454331));\nconsole.log(next_smallest_palindrome(123454431));\nconsole.log(next_smallest_palindrome(123454531));\nconsole.log(next_smallest",
    "    let str = num.toString();\n    let len = str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = false;\n    while (left >= 0) {\n        if (str[left] < str[right]) {\n            str = str.substring(0, left) + str[right] + str.substring(left + 1);\n            increment = true;\n            break;\n        } else if (str[left] > str[right]) {\n            str = str.substring(0, left) + str[right] + str.substring(left + 1);\n            break;\n        }\n        left--;\n        right++;\n    }\n    if (!increment) {\n        let mid = Math.floor(len / 2);\n        let carry = 1;\n        let i = mid - 1;\n        if (len % 2 === 1) {\n            str = str.substring(0, mid) + (parseInt(str[mid]) + carry).toString() + str.substring(mid + 1);\n            carry = parseInt(str[mid]) / 10;\n            str = str.substring(0, mid) + (parseInt(str[mid]) % 10).toString() + str.substring(mid + 1);\n            i = mid - 2;\n        }\n        while (i >= 0 && carry > 0) {\n            str = str.substring(0, i) + (parseInt(str[i]) + carry).toString() + str.substring(i + 1);\n            carry = parseInt(str[i]) / 10;\n            str = str.substring(0, i) + (parseInt(str[i]) % 10).toString() + str.substring(i + 1);\n            i--;\n        }\n        if (carry > 0) {\n            str = '1' + str;\n        }\n    }\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n        str = str.substring(0",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + 1, len - 1);\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    let left_rev_num = parseInt(left_rev);\n    let right_rev_num = parseInt(right_rev);\n    let left_num_next = left_num + 1;\n    let left_num_next_str = left_num_next.toString();\n    let left_num_next_rev_str = left_num_next_str.split('').reverse().join('');\n    let left_num_next_rev_num = parseInt(left_num_next_rev_str);\n    let left_num_next_rev_num_str = left_num_next_rev_num.toString();\n    let left_num_next_rev_num_str_len = left_num_next_rev_num_str.length;\n    let left_num_next_rev_num_str_mid = Math.floor(left_num_next_rev_num_str_len / 2);\n    let left_num_next_rev_num_str_left = left_num_next_rev_num_str.substr(0, left_num_next_rev_num_str_mid);\n    let left_num_next_rev_num_str_right = left_num_next_rev_num_str.substr(left_num_next_rev_num_str_mid + 1, left_num_next_rev_num_str_len - 1);\n    let left_num_next_rev_num_str_left_num = parseInt(left_num_next_rev_num_str_left);\n    let left_num_next_rev_num_str_right_num",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, num_half);\n    let right_half = num_str.substring(num_len - num_half, num_len);\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let left_half_int_plus_one = left_half_int + 1;\n    let left_half_int_plus_one_str = left_half_int_plus_one.toString();\n    let left_half_int_plus_one_str_len = left_half_int_plus_one_str.length;\n    let left_half_int_plus_one_str_half = Math.floor(left_half_int_plus_one_str_len / 2);\n    let left_half_int_plus_one_str_left_half = left_half_int_plus_one_str.substring(0, left_half_int_plus_one_str_half);\n    let left_half_int_plus_one_str_right_half = left_half_int_plus_one_str.substring(left_half_int_plus_one_str_len - left_half_int_plus_one_str_half, left_half_int_plus_one_str_len);\n    let left_half_int_plus_one_str_right_half_reversed = left_half_int_plus_one_str_right_half.split(\"\").reverse().join(\"\");\n    let left_half_int_plus_one_str_right_half_reversed_int = parseInt(left_half_int_plus_one_str_right_half_reversed);\n    let left_half_int_plus_one_str_right_half_reversed_int_plus_one = left_half_int_plus_one_str_right_half_reversed_int + 1;\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let half_len = Math.floor(num_len / 2);\n  let left_half = num_str.substring(0, half_len);\n  let right_half = num_str.substring(num_len - half_len, num_len);\n  let left_half_int = parseInt(left_half);\n  let right_half_int = parseInt(right_half);\n  let left_half_int_plus_1 = left_half_int + 1;\n  let left_half_int_plus_1_str = left_half_int_plus_1.toString();\n  let left_half_int_plus_1_str_len = left_half_int_plus_1_str.length;\n  let left_half_int_plus_1_str_len_diff = half_len - left_half_int_plus_1_str_len;\n  let left_half_int_plus_1_str_len_diff_str = \"\";\n  for (let i = 0; i < left_half_int_plus_1_str_len_diff; i++) {\n    left_half_int_plus_1_str_len_diff_str += \"0\";\n  }\n  let left_half_int_plus_1_str_len_diff_str_plus_left_half_int_plus_1_str =\n    left_half_int_plus_1_str_len_diff_str + left_half_int_plus_1_str;\n  let left_half_int_plus_1_str_len_diff_str_plus_left_half_int_plus_1_str_reversed =\n    left_half_int_plus_1_str_len_diff_str_plus_left_half_int_plus_1_str\n      .split(\"\")\n      .reverse()\n      .join(\"\");\n  let left_half_int_plus_1_str_len_diff_str_plus_left_half_int_plus_1_str_reversed_int",
    "    let palindrome = num;\n    while (!is_palindrome(palindrome)) {\n        palindrome++;\n    }\n    return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = 1;\n    while (left >= 0 && num_str[left] === num_str[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || num_str[left] < num_str[right]) {\n        left = Math.floor(len / 2);\n        right = len % 2 === 0 ? left : left + 1;\n        while (left >= 0) {\n            if (num_str[left] === '9') {\n                num_str = num_str.substring(0, left) + '0' + num_str.substring(left + 1);\n                left--;\n                right++;\n            } else {\n                num_str = num_str.substring(0, left) + (parseInt(num_str[left]) + 1).toString() + num_str.substring(left + 1);\n                break;\n            }\n        }\n        if (left < 0) {\n            num_str = '1' + '0'.repeat(len - 1) + '1';\n        }\n    }\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n        num_str = num_str.substring(0, right) + num_str[left] + num_str.substring(right + 1);\n        left--;\n        right++;\n    }\n    return parseInt(num_str);\n}\n",
    "    let num_str = num.toString();\n    let str_len = num_str.length;\n    let left_half = num_str.substring(0, str_len / 2);\n    let middle = str_len % 2 === 1 ? num_str.substring(str_len / 2, str_len / 2 + 1) : '';\n    let right_half = num_str.substring(str_len / 2 + middle.length);\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let left_half_int_plus_one = left_half_int + 1;\n    let left_half_plus_one = left_half_int_plus_one.toString();\n    let right_half_plus_one = left_half_plus_one.split('').reverse().join('');\n    let left_half_plus_one_int = parseInt(left_half_plus_one);\n    let right_half_plus_one_int = parseInt(right_half_plus_one);\n    let left_half_plus_one_int_str = left_half_plus_one_int.toString();\n    let right_half_plus_one_int_str = right_half_plus_one_int.toString();\n    let left_half_plus_one_int_str_len = left_half_plus_one_int_str.length;\n    let right_half_plus_one_int_str_len = right_half_plus_one_int_str.length;\n    let left_half_plus_one_int_str_len_diff = left_half_plus_one_int_str_len - right_half_plus_one_int_str_len;\n    let left_half_plus_one_int_str_len_diff_abs = Math.abs(left_half_plus_one_int_str_len_diff);\n    let left_half_plus_one_int_str_len_diff_abs_str = left_half_plus_one_int_str_len_diff_abs.toString();",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substr(0, mid);\n  let right = str.substr(mid + len % 2, mid);\n  let next = (parseInt(left) + 1).toString();\n  let next_palindrome = next + next.split(\"\").reverse().join(\"\");\n  return parseInt(next_palindrome);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n    if (left_rev > right) {\n        return Number(left + str[mid] + left_rev);\n    } else {\n        let left_num = Number(left) + 1;\n        let left_str = left_num.toString();\n        let left_rev_str = left_str.split('').reverse().join('');\n        return Number(left_str + str[mid] + left_rev_str);\n    }\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let half_len = Math.floor(num_len / 2);\n  let left_half = num_str.substr(0, half_len);\n  let right_half = num_str.substr(num_len - half_len);\n  let left_half_int = parseInt(left_half);\n  let right_half_int = parseInt(right_half);\n  let is_palindrome = false;\n  let is_even = num_len % 2 === 0;\n\n  while (!is_palindrome) {\n    if (left_half_int > right_half_int) {\n      is_palindrome = true;\n    } else if (left_half_int < right_half_int) {\n      left_half_int++;\n      right_half_int = left_half_int;\n    } else {\n      left_half_int++;\n      right_half_int = left_half_int;\n    }\n  }\n\n  if (is_even) {\n    return parseInt(left_half_int.toString() + right_half_int.toString());\n  } else {\n    return parseInt(\n      left_half_int.toString() +\n        num_str[half_len] +\n        right_half_int.toString()\n    );\n  }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    let palindrome_num = parseInt(palindrome);\n    if (palindrome_num > num) {\n        return palindrome_num;\n    }\n    if (middle === '') {\n        left_half = (parseInt(left_half) + 1).toString();\n        middle = '';\n    } else {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    right_half = left_half.split('').reverse().join('');\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_side = num_str.substring(0, mid);\n    let right_side = num_str.substring(mid + len % 2, len);\n    let right_side_rev = right_side.split('').reverse().join('');\n    if (left_side >= right_side_rev) {\n        let new_num = (parseInt(left_side) + 1).toString();\n        let new_right_side = new_num.substring(0, mid);\n        let new_right_side_rev = new_right_side.split('').reverse().join('');\n        return parseInt(new_num + new_right_side_rev);\n    } else {\n        return parseInt(left_side + right_side_rev);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_length = num_str.length;\n    let left_str = num_str.slice(0, Math.floor(num_length / 2));\n    let right_str = num_str.slice(Math.ceil(num_length / 2));\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    let is_odd = num_length % 2 === 1;\n    let left_num_next = left_num + 1;\n    let left_num_next_str = left_num_next.toString();\n    let left_num_next_str_length = left_num_next_str.length;\n    let left_num_next_str_length_diff = left_num_next_str_length - left_str.length;\n    let left_num_next_str_length_diff_str = left_num_next_str_length_diff > 0 ? left_num_next_str.slice(0, left_num_next_str_length_diff) : '';\n    let left_num_next_str_length_diff_str_reversed = left_num_next_str_length_diff_str.split('').reverse().join('');\n    let right_num_str = right_num.toString();\n    let right_num_str_length = right_num_str.length;\n    let right_num_str_length_diff = right_num_str_length - left_num_next_str_length_diff_str_reversed.length;\n    let right_num_str_length_diff_str = right_num_str_length_diff > 0 ? right_num_str.slice(right_num_str_length_diff) : '';\n    let next_palindrome_str = left_num_next_str_length_diff_str + right_num_str_length_diff_str + left_num_next_str_length_diff_str_reversed;\n    return parseInt(next_palindrome_str);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_smaller = false;\n    let i = mid - 1;\n    let j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && num_str[i] === num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str = num_str.substr(0, i) + num_str[j] + num_str.substr(i + 1);\n        i--;\n        j++;\n    }\n    if (left_smaller) {\n        let carry = 1;\n        i = mid - 1;\n        if (len % 2) {\n            num_str = num_str.substr(0, mid) + (parseInt(num_str[mid]) + carry).toString() + num_str.substr(mid + 1);\n            carry = parseInt(num_str[mid]) / 10;\n            num_str = num_str.substr(0, mid) + (parseInt(num_str[mid]) % 10).toString() + num_str.substr(mid + 1);\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            num_str = num_str.substr(0, i) + (parseInt(num_str[i]) + carry).toString() + num_str.substr(i + 1);\n            carry = parseInt(num_str[i]) / 10;\n            num_str = num_str.substr(0, i) + (parseInt(num_str[i]) % 10).toString() + num_str.substr(i + 1);\n            i--;\n            j++;\n        }\n    }\n    return parseInt(num_str);\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substring(0, mid);\n  let right = str.substring(mid + len % 2, len);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  if (left < right_rev) {\n    return parseInt(left + str[mid] + right_rev);\n  } else {\n    let left_int = parseInt(left);\n    let left_int_plus_one = left_int + 1;\n    let left_plus_one = left_int_plus_one.toString();\n    let left_plus_one_rev = left_plus_one\n      .split(\"\")\n      .reverse()\n      .join(\"\");\n    return parseInt(left_plus_one + str[mid] + left_plus_one_rev);\n  }\n}\n",
    "    let palindrome = num;\n    let is_palindrome = false;\n    while (!is_palindrome) {\n        palindrome++;\n        is_palindrome = is_palindrome_num(palindrome);\n    }\n    return palindrome;\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let mid = Math.floor(len / 2);\n  let left_half = num_str.slice(0, mid);\n  let right_half = num_str.slice(mid + len % 2, len);\n  let right_half_rev = right_half.split('').reverse().join('');\n  if (left_half < right_half_rev) {\n    return Number(left_half + right_half_rev);\n  } else {\n    let new_left_half = (Number(left_half) + 1).toString();\n    let new_right_half = new_left_half.slice(0, mid).split('').reverse().join('');\n    return Number(new_left_half + new_right_half);\n  }\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = (num_len % 2) ? num_str[Math.floor(num_len / 2)] : '';\n  let right_half = left_half.split('').reverse().join('');\n  let new_num = parseInt(left_half + middle + right_half);\n  if (new_num > num) {\n    return new_num;\n  }\n  if (middle) {\n    middle = (parseInt(middle) + 1).toString();\n  }\n  left_half = (parseInt(left_half) + 1).toString();\n  right_half = left_half.split('').reverse().join('');\n  return parseInt(left_half + middle + right_half);\n}\n",
    "    let palindrome: number = num;\n    let isPalindrome: boolean = false;\n    while (!isPalindrome) {\n        palindrome++;\n        isPalindrome = is_palindrome(palindrome);\n    }\n    return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let half_len = Math.floor(len / 2);\n    let left_half = num_str.substr(0, half_len);\n    let right_half = num_str.substr(len % 2 === 0 ? half_len : half_len + 1);\n    let next_palindrome = parseInt(left_half + (len % 2 === 0 ? '' : num_str[half_len]) + left_half.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (half_len === 0) {\n        return 11;\n    }\n    let mid = parseInt(left_half) + 1;\n    let mid_str = mid.toString();\n    let mid_len = mid_str.length;\n    let left_half_new = mid_str.substr(0, half_len);\n    let right_half_new = mid_str.substr(mid_len % 2 === 0 ? half_len : half_len + 1);\n    return parseInt(left_half_new + (mid_len % 2 === 0 ? '' : mid_str[half_len]) + left_half_new.split('').reverse().join(''));\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left = Math.floor(num_len / 2);\n    let right = num_len % 2 === 0 ? left : left + 1;\n    let left_str = num_str.slice(0, left);\n    let right_str = num_str.slice(right);\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    if (left_num === right_num) {\n        if (left_num === 0) {\n            return num + 2;\n        } else {\n            return num + 1;\n        }\n    } else {\n        let next_left_num = left_num + 1;\n        let next_left_str = next_left_num.toString();\n        let next_right_str = next_left_str.split('').reverse().join('');\n        let next_num_str = next_left_str + next_right_str;\n        return parseInt(next_num_str);\n    }\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let left = Math.floor(len / 2);\n  let right = len % 2 === 0 ? left : left + 1;\n  while (left >= 0 && num_str[left] === num_str[right]) {\n    left--;\n    right++;\n  }\n  if (left < 0 || num_str[left] < num_str[right]) {\n    let carry = 1;\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n      let sum = Number(num_str[left]) + carry;\n      if (sum > 9) {\n        carry = 1;\n        sum -= 10;\n      } else {\n        carry = 0;\n      }\n      num_str = num_str.substring(0, left) + sum + num_str.substring(right + 1);\n      left--;\n      right++;\n    }\n  }\n  left = Math.floor(len / 2);\n  right = len % 2 === 0 ? left : left + 1;\n  while (left >= 0) {\n    num_str = num_str.substring(0, left) + num_str[right] + num_str.substring(right + 1);\n    left--;\n    right++;\n  }\n  return Number(num_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let half_len = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, half_len);\n    let right_half = num_str.substring(num_len - half_len, num_len);\n    let left_half_num = parseInt(left_half);\n    let right_half_num = parseInt(right_half);\n    let left_half_num_next = left_half_num + 1;\n    let left_half_num_next_str = left_half_num_next.toString();\n    let left_half_num_next_str_len = left_half_num_next_str.length;\n    let left_half_num_next_str_len_diff = half_len - left_half_num_next_str_len;\n    let left_half_num_next_str_len_diff_str = '';\n    for (let i = 0; i < left_half_num_next_str_len_diff; i++) {\n        left_half_num_next_str_len_diff_str += '0';\n    }\n    let left_half_num_next_str_len_diff_str_rev = left_half_num_next_str_len_diff_str.split('').reverse().join('');\n    let left_half_num_next_str_len_diff_str_rev_str = left_half_num_next_str_len_diff_str_rev.toString();\n    let left_half_num_next_str_len_diff_str_rev_str_num = parseInt(left_half_num_next_str_len_diff_str_rev_str);\n    let left_half_num_next_str_len_diff_str_rev_str_num_next = left_half_num_next_str_len_diff_str_rev_str_num + 1;\n    let left_half_num_next_str_len_diff_str_rev_str_num_next",
    "    let n = num;\n    let digits = [];\n    while (n > 0) {\n        digits.push(n % 10);\n        n = Math.floor(n / 10);\n    }\n    let i = 0;\n    let j = digits.length - 1;\n    while (i < j) {\n        if (digits[i] > digits[j]) {\n            digits[j] = digits[i];\n        } else if (digits[i] < digits[j]) {\n            digits[j] = digits[i];\n            let k = j - 1;\n            while (k >= 0 && digits[k] === 9) {\n                digits[k] = 0;\n                k--;\n            }\n            if (k < 0) {\n                digits.unshift(1);\n            } else {\n                digits[k]++;\n            }\n        }\n        i++;\n        j--;\n    }\n    let result = 0;\n    for (let i = 0; i < digits.length; i++) {\n        result = result * 10 + digits[i];\n    }\n    return result;\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_half = num_str.substr(0, mid);\n    let right_half = num_str.substr(mid + len % 2, mid);\n    let next_palindrome = parseInt(left_half + (len % 2 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (len % 2) {\n        if (num_str[mid] < '9') {\n            return parseInt(left_half + (parseInt(num_str[mid]) + 1) + left_half.split('').reverse().join(''));\n        }\n        left_half = (parseInt(left_half) + 1).toString();\n        return parseInt(left_half + '0' + left_half.split('').reverse().join(''));\n    } else {\n        if (right_half >= left_half) {\n            left_half = (parseInt(left_half) + 1).toString();\n            return parseInt(left_half + left_half.split('').reverse().join(''));\n        }\n        return parseInt(left_half + left_half.split('').reverse().join(''));\n    }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let i = Math.floor(len / 2);\n    let j = len % 2 === 0 ? i : i + 1;\n    let left = str.substring(0, i);\n    let right = str.substring(j);\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    if (left_num === right_num) {\n        let left_str = (left_num + 1).toString();\n        let right_str = left_str.split(\"\").reverse().join(\"\");\n        return parseInt(left_str + right_str);\n    } else {\n        let left_str = left_num.toString();\n        let right_str = left_str.split(\"\").reverse().join(\"\");\n        return parseInt(left_str + right_str);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = (num_len % 2) ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let next_palindrome = parseInt(left_half + middle + right_half);\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    else {\n        left_half = (parseInt(left_half) + 1).toString();\n        middle = '1';\n    }\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substr(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 ? num_str[Math.floor(num_len / 2)] : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let next_palindrome = parseInt(left_half + middle + right_half);\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    left_half = (parseInt(left_half) + 1).toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    next_palindrome = parseInt(left_half + middle + right_half);\n    return next_palindrome;\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let half_len = Math.floor(len / 2);\n    let left_half = num_str.substring(0, half_len);\n    let right_half = num_str.substring(half_len + len % 2, len);\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let next_palindrome = 0;\n    if (left_half_int < right_half_int) {\n        next_palindrome = parseInt(left_half + left_half.split(\"\").reverse().join(\"\"));\n    } else if (left_half_int > right_half_int) {\n        next_palindrome = parseInt(left_half + left_half.split(\"\").reverse().join(\"\"));\n    } else {\n        next_palindrome = parseInt(left_half + left_half.split(\"\").reverse().join(\"\"));\n    }\n    return next_palindrome;\n}\n\nconsole.log(next_smallest_palindrome(12345));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1221));\nconsole.log(next_smallest_palindrome(123321));\nconsole.log(next_smallest_palindrome(123322));\nconsole.log(next_smallest_palindrome(123323));\nconsole.log(next_smallest_palindrome(123324));\nconsole.log(next_smallest_palindrome(123325));\nconsole.log(next_smallest_palindrome(123326));\nconsole.log(next_smallest_palindrome(123327));\nconsole.log(next_smallest_palindrome(123328));\nconsole.log(next_smallest_palindrome(123329));\nconsole.log(next_smallest_palindrome(123330));",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num_str) {\n        return parseInt(palindrome);\n    }\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let new_left_half = (left_half_int + 1).toString();\n    let new_middle = middle_int === 9 ? '0' : (middle_int + 1).toString();\n    let new_right_half = new_left_half.split('').reverse().join('');\n    return parseInt(new_left_half + new_middle + new_right_half);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length, num_len);\n    let right_half_reversed = right_half.split(\"\").reverse().join(\"\");\n    let new_num_str = left_half + middle + right_half_reversed;\n    let new_num = parseInt(new_num_str);\n    if (new_num > num) {\n        return new_num;\n    } else {\n        let left_half_int = parseInt(left_half);\n        let left_half_int_plus_one = left_half_int + 1;\n        let left_half_int_plus_one_str = left_half_int_plus_one.toString();\n        let left_half_int_plus_one_str_len = left_half_int_plus_one_str.length;\n        let left_half_int_plus_one_str_padded = left_half_int_plus_one_str.padStart(left_half.length, \"0\");\n        let new_num_str_padded = left_half_int_plus_one_str_padded + middle + left_half_int_plus_one_str_padded.split(\"\").reverse().join(\"\");\n        return parseInt(new_num_str_padded);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_str_len / 2));\n    let middle = num_str_len % 2 === 1 ? num_str.substring(Math.floor(num_str_len / 2), Math.floor(num_str_len / 2) + 1) : '';\n    let right_half = num_str.substring(Math.floor(num_str_len / 2) + middle.length);\n\n    if (num_str_len === 1) {\n        return num === 9 ? 11 : num + 1;\n    }\n\n    if (left_half + middle + left_half.split('').reverse().join('') > num_str) {\n        return parseInt(left_half + middle + left_half.split('').reverse().join(''));\n    }\n\n    let left_half_num = parseInt(left_half);\n    let right_half_num = parseInt(right_half);\n\n    if (left_half_num === right_half_num) {\n        return parseInt(left_half + middle + left_half.split('').reverse().join(''));\n    }\n\n    if (left_half_num > right_half_num) {\n        return parseInt(left_half + middle + left_half.split('').reverse().join(''));\n    }\n\n    let left_half_plus_one = (left_half_num + 1).toString();\n    let left_half_plus_one_len = left_half_plus_one.length;\n    let left_half_plus_one_middle = left_half_plus_one_len % 2 === 1 ? left_half_plus_one.substring(Math.floor(left_half_plus_one_len / 2), Math.floor(left_half_plus_one_len / 2) + 1) : '';\n    let left_half_plus_one_right_half = left_half_plus_one.substring(Math.floor(left_half_plus_one_len /",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let num_half_len = Math.floor(num_len / 2);\n  let num_left_half = num_str.slice(0, num_half_len);\n  let num_right_half = num_str.slice(num_half_len + num_len % 2);\n  let num_left_half_rev = num_left_half.split('').reverse().join('');\n  if (num_left_half_rev < num_right_half) {\n    num_left_half = (parseInt(num_left_half) + 1).toString();\n    num_left_half_rev = num_left_half.split('').reverse().join('');\n  }\n  return parseInt(num_left_half + num_left_half_rev);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let new_num = parseInt(left_half + middle + right_half);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (middle === '') {\n        left_half = (parseInt(left_half) + 1).toString();\n        right_half = left_half.split('').reverse().join('');\n        return parseInt(left_half + right_half);\n    }\n    middle = (parseInt(middle) + 1).toString();\n    return parseInt(left_half + middle + right_half);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substr(1);\n    if (len % 2 === 1) {\n        next_palindrome = next_palindrome.substr(0, mid + 1) + next_palindrome.substr(mid, mid + 1);\n    }\n    return parseInt(next_palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid_idx = Math.floor(num_len / 2);\n    let left_idx = mid_idx - 1;\n    let right_idx = num_len % 2 === 0 ? mid_idx : mid_idx + 1;\n    let left_half = num_str.substring(0, mid_idx);\n    let right_half = num_str.substring(right_idx);\n    let left_half_rev = left_half.split('').reverse().join('');\n    if (left_half < left_half_rev) {\n        return parseInt(left_half + num_str[mid_idx] + left_half_rev);\n    }\n    let left_half_int = parseInt(left_half);\n    let left_half_int_plus_1 = left_half_int + 1;\n    let left_half_int_plus_1_str = left_half_int_plus_1.toString();\n    let left_half_int_plus_1_str_rev = left_half_int_plus_1_str.split('').reverse().join('');\n    return parseInt(left_half_int_plus_1_str + left_half_int_plus_1_str_rev);\n}\n\nconsole.log(next_smallest_palindrome(123));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(12345));\nconsole.log(next_smallest_palindrome(123456));\nconsole.log(next_smallest_palindrome(1234567));\nconsole.log(next_smallest_palindrome(12345678));\nconsole.log(next_smallest_palindrome(123456789));\nconsole.log(next_smallest_palindrome(1234567890));\nconsole.log(next_smallest_palindrome(12345678901));\nconsole.log(next_smallest_palindrome(123456789012",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half = Math.floor(num_len / 2);\n    let num_left = num_str.substring(0, num_half);\n    let num_right = num_str.substring(num_len - num_half, num_len);\n    let num_left_rev = num_left.split('').reverse().join('');\n    let num_left_int = parseInt(num_left);\n    let num_right_int = parseInt(num_right);\n    let num_left_rev_int = parseInt(num_left_rev);\n    if (num_left_int < num_right_int) {\n        num_left_int++;\n        num_left = num_left_int.toString();\n        num_left_rev = num_left.split('').reverse().join('');\n        num_left_rev_int = parseInt(num_left_rev);\n    }\n    if (num_left_rev_int < num_right_int) {\n        num_left_int++;\n        num_left = num_left_int.toString();\n        num_left_rev = num_left.split('').reverse().join('');\n    }\n    let num_left_rev_str = num_left_rev.toString();\n    let num_left_rev_len = num_left_rev_str.length;\n    if (num_len % 2 === 0) {\n        return parseInt(num_left + num_left_rev);\n    } else {\n        return parseInt(num_left + num_left_rev_str.substring(num_left_rev_len - 1, num_left_rev_len) + num_left_rev_str.substring(0, num_left_rev_len - 1));\n    }\n}\n",
    "    let strNum = num.toString();\n    let len = strNum.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = 1;\n    while (left >= 0 && strNum[left] === strNum[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || strNum[left] < strNum[right]) {\n        left = Math.floor(len / 2);\n        right = len % 2 === 0 ? left : left + 1;\n        while (left >= 0 && strNum[left] === '9') {\n            strNum = strNum.substr(0, left) + '0' + strNum.substr(left + 1);\n            left--;\n            right++;\n        }\n        if (left < 0) {\n            strNum = '1' + strNum;\n            strNum = strNum.substr(0, strNum.length - 1) + '1';\n            return parseInt(strNum);\n        }\n        strNum = strNum.substr(0, left) + (parseInt(strNum[left]) + 1).toString() + strNum.substr(left + 1);\n        strNum = strNum.substr(0, right) + strNum[left] + strNum.substr(right + 1);\n    } else {\n        strNum = strNum.substr(0, right) + strNum[left] + strNum.substr(right + 1);\n    }\n    return parseInt(strNum);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = 1;\n    while (left >= 0 && num_str[left] === num_str[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || num_str[left] < num_str[right]) {\n        left = Math.floor(len / 2);\n        right = len % 2 === 0 ? left : left + 1;\n        while (left >= 0) {\n            let sum = parseInt(num_str[left]) + increment;\n            if (sum > 9) {\n                increment = 1;\n                sum = 0;\n            } else {\n                increment = 0;\n            }\n            num_str = num_str.substring(0, left) + sum + num_str.substring(right + 1);\n            left--;\n            right++;\n        }\n    }\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n        num_str = num_str.substring(0, left) + num_str[right] + num_str.substring(right + 1);\n        left--;\n        right++;\n    }\n    return parseInt(num_str);\n}\n",
    "    let palindrome = num;\n    let isPalindrome = false;\n    while (!isPalindrome) {\n        palindrome++;\n        isPalindrome = is_palindrome(palindrome);\n    }\n    return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : '';\n    let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length);\n\n    let right_half_rev = right_half.split('').reverse().join('');\n\n    if (left_half + middle + right_half_rev > num_str) {\n        return parseInt(left_half + middle + right_half_rev);\n    }\n\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n\n    if (middle_int < 9) {\n        middle_int++;\n    } else {\n        middle_int = 0;\n        left_half_int++;\n    }\n\n    left_half = left_half_int.toString();\n    middle = middle_int.toString();\n\n    return parseInt(left_half + middle + left_half.split('').reverse().join(''));\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half = Math.floor(num_len / 2);\n    let num_left = num_str.substring(0, num_half);\n    let num_right = num_str.substring(num_len - num_half, num_len);\n    let num_left_int = parseInt(num_left);\n    let num_right_int = parseInt(num_right);\n    let num_right_int_rev = parseInt(num_right.split(\"\").reverse().join(\"\"));\n    let num_left_int_rev = parseInt(num_left.split(\"\").reverse().join(\"\"));\n    let num_left_int_rev_next = num_left_int_rev + 1;\n    let num_left_int_rev_next_str = num_left_int_rev_next.toString();\n    let num_left_int_rev_next_str_len = num_left_int_rev_next_str.length;\n    let num_left_int_rev_next_str_half = Math.floor(num_left_int_rev_next_str_len / 2);\n    let num_left_int_rev_next_str_left = num_left_int_rev_next_str.substring(0, num_left_int_rev_next_str_half);\n    let num_left_int_rev_next_str_right = num_left_int_rev_next_str.substring(num_left_int_rev_next_str_len - num_left_int_rev_next_str_half, num_left_int_rev_next_str_len);\n    let num_left_int_rev_next_str_right_rev = parseInt(num_left_int_rev_next_str_right.split(\"\").reverse().join(\"\"));\n    let num_left_int_rev_next_str_left_rev = parseInt(num_left_int_rev_next_str_left.split(\"\").reverse().join(\"\"));\n    if (num_len",
    "  let str = num.toString();\n  let len = str.length;\n  let half = Math.floor(len / 2);\n  let left = str.substring(0, half);\n  let right = str.substring(len % 2 === 0 ? half : half + 1);\n  let right_rev = right.split('').reverse().join('');\n  let left_rev = left.split('').reverse().join('');\n  if (left_rev < right) {\n    left = (parseInt(left) + 1).toString();\n    left_rev = left.split('').reverse().join('');\n  }\n  return parseInt(left + (len % 2 === 0 ? left_rev : left_rev.substring(1)));\n}\n\nconsole.log(next_smallest_palindrome(12345));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(123456));\nconsole.log(next_smallest_palindrome(123454321));\nconsole.log(next_smallest_palindrome(1234567899));\nconsole.log(next_smallest_palindrome(123432));\nconsole.log(next_smallest_palindrome(1234321));\nconsole.log(next_smallest_palindrome(12343321));\nconsole.log(next_smallest_palindrome(12343421));\nconsole.log(next_smallest_palindrome(12343521));\nconsole.log(next_smallest_palindrome(12343621));\nconsole.log(next_smallest_palindrome(12343721));\nconsole.log(next_smallest_palindrome(12343821));\nconsole.log(next_smallest_palindrome(12343921));\nconsole.log(next_smallest_palindrome(12344321));\nconsole.log(next_smallest_palindrome(12344421));\nconsole.log(next_smallest_palindrome(1234",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let i = 0;\n    let j = len - 1;\n    let is_palindrome = true;\n    let is_all_9 = true;\n    let mid = Math.floor(len / 2);\n\n    while (i < mid) {\n        if (num_str[i] !== num_str[j]) {\n            is_palindrome = false;\n            break;\n        }\n        if (num_str[i] !== '9') {\n            is_all_9 = false;\n        }\n        i++;\n        j--;\n    }\n\n    if (is_palindrome) {\n        if (is_all_9) {\n            return parseInt('1' + '0'.repeat(len - 1) + '1');\n        } else {\n            let left = num_str.substring(0, mid);\n            let right = num_str.substring(mid + 1);\n            let left_num = parseInt(left);\n            left_num++;\n            left = left_num.toString();\n            return parseInt(left + right.split('').reverse().join(''));\n        }\n    } else {\n        let left = num_str.substring(0, mid);\n        let right = num_str.substring(mid + 1);\n        let left_num = parseInt(left);\n        left_num++;\n        left = left_num.toString();\n        return parseInt(left + right.split('').reverse().join(''));\n    }\n}\n\nconsole.log(next_smallest_palindrome(1));\nconsole.log(next_smallest_palindrome(9));\nconsole.log(next_smallest_palindrome(10));\nconsole.log(next_smallest_palindrome(11));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(101));\nconsole.log(next_smallest_palindrome(111));\nconsole.log(next_smallest_palindrome(121",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let left = Math.floor(len / 2);\n  let right = len % 2 === 0 ? left : left + 1;\n  let increment = 1;\n  while (left >= 0 && num_str[left] === num_str[right]) {\n    left--;\n    right++;\n  }\n  if (left < 0 || num_str[left] < num_str[right]) {\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0 && num_str[left] === '9') {\n      num_str = num_str.substr(0, left) + '0' + num_str.substr(left + 1);\n      left--;\n      right++;\n    }\n    if (left < 0) {\n      num_str = '1' + '0'.repeat(len - 1) + '1';\n    } else {\n      num_str =\n        num_str.substr(0, left) +\n        (parseInt(num_str[left]) + increment).toString() +\n        num_str.substr(left + 1);\n    }\n  }\n  left = Math.floor(len / 2);\n  right = len % 2 === 0 ? left : left + 1;\n  while (left >= 0) {\n    num_str =\n      num_str.substr(0, left) + num_str[right] + num_str.substr(left + 1);\n    left--;\n    right++;\n  }\n  return parseInt(num_str);\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substring(0, mid);\n  let right = str.substring(mid + 1);\n  let right_rev = right.split('').reverse().join('');\n  let left_rev = left.split('').reverse().join('');\n  let left_num = parseInt(left);\n  let right_num = parseInt(right);\n  let right_rev_num = parseInt(right_rev);\n  let left_rev_num = parseInt(left_rev);\n  if (left_num === right_num) {\n    if (left_num === right_rev_num) {\n      if (left_rev_num === right_num) {\n        return parseInt(left + '0' + right);\n      } else {\n        return parseInt(left_rev + '0' + right_rev);\n      }\n    } else {\n      return parseInt(left + '0' + right);\n    }\n  } else {\n    if (left_num === right_rev_num) {\n      return parseInt(left + '0' + right);\n    } else {\n      return parseInt(left_rev + '0' + right_rev);\n    }\n  }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split(\"\").reverse().join(\"\");\n    return parseInt(next_palindrome);\n}\n",
    "    let palindrome = num;\n    let isPalindrome = false;\n    while (!isPalindrome) {\n        palindrome++;\n        isPalindrome = is_palindrome(palindrome);\n    }\n    return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, mid);\n    let right_half = num_str.substring(mid + num_len % 2, num_len);\n    let left_half_rev = left_half.split('').reverse().join('');\n    let next_palindrome = parseInt(left_half + num_len % 2 + left_half_rev);\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (left_half.length === 1 && left_half === '9') {\n        return parseInt('1' + '0'.repeat(num_len - 1) + '1');\n    }\n    let next_left_half = (parseInt(left_half) + 1).toString();\n    let next_left_half_rev = next_left_half.split('').reverse().join('');\n    return parseInt(next_left_half + next_left_half_rev);\n}\n",
    "  let palindrome = num;\n  while (!is_palindrome(palindrome)) {\n    palindrome++;\n  }\n  return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = (num_len % 2) ? num_str.charAt(Math.floor(num_len / 2)) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let new_num = parseInt(left_half + middle + right_half);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    else {\n        left_half = (parseInt(left_half) + 1).toString();\n        middle = '0';\n    }\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let half_len = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, half_len);\n    let middle = num_len % 2 === 1 ? num_str[half_len] : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num_str) {\n        return parseInt(palindrome);\n    } else {\n        let left_half_num = parseInt(left_half);\n        let middle_num = parseInt(middle);\n        let right_half_num = parseInt(right_half);\n        let new_left_half = (left_half_num + 1).toString();\n        let new_middle = middle_num === 9 ? \"0\" : (middle_num + 1).toString();\n        let new_right_half = new_left_half.split(\"\").reverse().join(\"\");\n        return parseInt(new_left_half + new_middle + new_right_half);\n    }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, len);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + str[mid] + right_rev);\n    }\n    let left_int = parseInt(left);\n    let right_int = parseInt(right);\n    if (len % 2 === 1) {\n        let mid_int = parseInt(str[mid]);\n        if (mid_int < 9) {\n            return parseInt(left + (mid_int + 1) + right_rev);\n        }\n        else {\n            return parseInt(left + '0' + right_rev);\n        }\n    }\n    else {\n        if (left_int < right_int) {\n            return parseInt(left + right_rev);\n        }\n        else {\n            return parseInt(left + '0' + right_rev);\n        }\n    }\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid_idx = Math.floor(num_len / 2);\n  let left_idx = mid_idx - 1;\n  let right_idx = num_len % 2 === 0 ? mid_idx : mid_idx + 1;\n  let left_half = num_str.slice(0, mid_idx);\n  let right_half = num_str.slice(right_idx);\n  let left_half_rev = left_half.split('').reverse().join('');\n  let new_num = left_half + num_str[mid_idx] + left_half_rev;\n  if (new_num > num) {\n    return parseInt(new_num);\n  }\n  if (left_half[left_idx] === '9') {\n    let i = left_idx;\n    while (i >= 0 && left_half[i] === '9') {\n      left_half = left_half.slice(0, i) + '0' + left_half.slice(i + 1);\n      i--;\n    }\n    if (i < 0) {\n      left_half = '1' + left_half;\n      left_half = left_half.slice(0, left_half.length - 1);\n    } else {\n      left_half = left_half.slice(0, i) + (parseInt(left_half[i]) + 1).toString() + left_half.slice(i + 1);\n    }\n  } else {\n    left_half = left_half.slice(0, left_idx) + (parseInt(left_half[left_idx]) + 1).toString() + left_half.slice(left_idx + 1);\n  }\n  left_half_rev = left_half.split('').reverse().join('');\n  new_num = left_half + num_str[mid_idx] + left_half_rev;\n  return parseInt(new_num);\n}\n\nconsole.log(next_smallest",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let num_half_len = Math.floor(num_len / 2);\n    let num_half_str = num_str.substr(0, num_half_len);\n    let num_half_rev_str = num_half_str.split('').reverse().join('');\n    let num_half_rev_int = parseInt(num_half_rev_str);\n    let num_half_int = parseInt(num_half_str);\n    let num_half_rev_int_plus_one = num_half_rev_int + 1;\n    let num_half_rev_int_plus_one_str = num_half_rev_int_plus_one.toString();\n    let num_half_rev_int_plus_one_str_len = num_half_rev_int_plus_one_str.length;\n    let num_half_rev_int_plus_one_str_half_len = Math.floor(num_half_rev_int_plus_one_str_len / 2);\n    let num_half_rev_int_plus_one_str_half_str = num_half_rev_int_plus_one_str.substr(0, num_half_rev_int_plus_one_str_half_len);\n    let num_half_rev_int_plus_one_str_half_rev_str = num_half_rev_int_plus_one_str_half_str.split('').reverse().join('');\n    let num_half_rev_int_plus_one_str_half_rev_int = parseInt(num_half_rev_int_plus_one_str_half_rev_str);\n    let num_half_rev_int_plus_one_str_half_rev_int_plus_one = num_half_rev_int_plus_one_str_half_rev_int + 1;\n    let num_half_rev_int_plus_one_str_half_rev_int_plus_one_str = num_half_rev_int_plus",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_str_len / 2));\n    let middle = num_str_len % 2 === 1 ? num_str[Math.floor(num_str_len / 2)] : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let right_half_int = parseInt(right_half);\n    if (middle_int < 9) {\n        middle_int++;\n    } else {\n        middle_int = 0;\n        left_half_int++;\n    }\n    left_half = left_half_int.toString();\n    middle = middle_int.toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let left = Math.floor(len / 2);\n  let right = len % 2 === 0 ? left : left + 1;\n\n  while (left >= 0 && num_str[left] === num_str[right]) {\n    left--;\n    right++;\n  }\n\n  if (left < 0 || num_str[left] < num_str[right]) {\n    let carry = 1;\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n\n    while (left >= 0) {\n      let sum = parseInt(num_str[left]) + carry;\n      carry = sum > 9 ? 1 : 0;\n      num_str = num_str.substring(0, left) + (sum % 10) + num_str.substring(right + 1);\n      left--;\n      right++;\n    }\n  }\n\n  left = Math.floor(len / 2);\n  right = len % 2 === 0 ? left : left + 1;\n\n  while (left >= 0) {\n    num_str = num_str.substring(0, left) + num_str[right] + num_str.substring(right + 1);\n    left--;\n    right++;\n  }\n\n  return parseInt(num_str);\n}\n",
    "  let num_str = num.toString();\n  let num_str_len = num_str.length;\n  let left_half = num_str.slice(0, (num_str_len / 2));\n  let middle = (num_str_len % 2) ? num_str[(num_str_len / 2)] : '';\n  let right_half = left_half.split('').reverse().join('');\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num) {\n    return parseInt(palindrome);\n  }\n  if (middle) {\n    middle = (parseInt(middle) + 1).toString();\n  }\n  else {\n    left_half = (parseInt(left_half) + 1).toString();\n    right_half = left_half.split('').reverse().join('');\n  }\n  palindrome = left_half + middle + right_half;\n  return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = true;\n    while (left >= 0 && right < len) {\n        if (num_str[left] < num_str[right]) {\n            increment = false;\n            break;\n        } else if (num_str[left] > num_str[right]) {\n            break;\n        }\n        left--;\n        right++;\n    }\n    if (increment) {\n        let mid = Math.floor(len / 2);\n        let carry = 1;\n        let mid_num = parseInt(num_str[mid]);\n        num_str = num_str.substring(0, mid) + (mid_num + carry).toString() + num_str.substring(mid + 1);\n        carry = Math.floor((mid_num + carry) / 10);\n        left = Math.floor((len - 1) / 2);\n        while (left >= 0 && carry > 0) {\n            let left_num = parseInt(num_str[left]);\n            num_str = num_str.substring(0, left) + (left_num + carry).toString() + num_str.substring(left + 1);\n            carry = Math.floor((left_num + carry) / 10);\n            left--;\n        }\n    }\n    left = 0;\n    right = len - 1;\n    while (left < right) {\n        num_str = num_str.substring(0, left) + num_str[right] + num_str.substring(left + 1);\n        num_str = num_str.substring(0, right) + num_str[left] + num_str.substring(right + 1);\n        left++;\n        right--;\n    }\n    return parseInt(num_str);\n}\n",
    "  let temp = num;\n  let is_palindrome = false;\n\n  while (!is_palindrome) {\n    temp++;\n    is_palindrome = is_palindrome_num(temp);\n  }\n\n  return temp;\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let left_num = parseInt(left);\n    let right_num = parseInt(right);\n    let next_palindrome = 0;\n    if (left_num < right_num) {\n        next_palindrome = parseInt(left + (len % 2 ? str[mid] : '') + left.split('').reverse().join(''));\n    } else {\n        let next_left = (left_num + 1).toString();\n        next_palindrome = parseInt(next_left + (len % 2 ? str[mid] : '') + next_left.split('').reverse().join(''));\n    }\n    return next_palindrome;\n}\n",
    "    let temp = num;\n    let digits = [];\n    while (temp > 0) {\n        digits.push(temp % 10);\n        temp = Math.floor(temp / 10);\n    }\n    let n = digits.length;\n    let mid = Math.floor(n / 2);\n    let left = mid - 1;\n    let right = (n % 2) ? mid + 1 : mid;\n    let is_left_smaller = false;\n    while (left >= 0 && digits[left] === digits[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || digits[left] < digits[right]) {\n        is_left_smaller = true;\n    }\n    while (left >= 0) {\n        digits[right++] = digits[left--];\n    }\n    if (is_left_smaller) {\n        let carry = 1;\n        left = mid - 1;\n        if (n % 2 === 1) {\n            digits[mid] += carry;\n            carry = Math.floor(digits[mid] / 10);\n            digits[mid] %= 10;\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        while (left >= 0) {\n            digits[left] += carry;\n            carry = Math.floor(digits[left] / 10);\n            digits[left] %= 10;\n            digits[right++] = digits[left--];\n        }\n    }\n    let result = 0;\n    for (let i = 0; i < n; i++) {\n        result = result * 10 + digits[i];\n    }\n    return result;\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substr(1);\n    if (len % 2 === 1) {\n        next_palindrome = next_palindrome.substr(0, mid + 1) + next_palindrome.substr(mid, mid + 1);\n    }\n    return parseInt(next_palindrome);\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substr(0, mid);\n  let right = str.substr(mid + len % 2, mid);\n  let next_palindrome = (parseInt(left) + 1).toString() + (parseInt(left) + 1).toString().split(\"\").reverse().join(\"\");\n  return parseInt(next_palindrome);\n}\n",
    "    let palindrome = num;\n    let isPalindrome = false;\n    while (!isPalindrome) {\n        palindrome++;\n        isPalindrome = is_palindrome(palindrome);\n    }\n    return palindrome;\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n  let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length, num_len);\n  let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  let left_half_num = parseInt(left_half);\n  let right_half_num = parseInt(right_half);\n  let right_half_rev_num = parseInt(right_half_rev);\n  let middle_num = parseInt(middle);\n  let next_palindrome = 0;\n  if (left_half_num > right_half_rev_num) {\n    next_palindrome = parseInt(left_half + middle + right_half_rev);\n  } else if (left_half_num < right_half_rev_num) {\n    if (middle_num === 9) {\n      left_half_num += 1;\n      middle_num = 0;\n    } else {\n      middle_num += 1;\n    }\n    next_palindrome = parseInt(left_half_num.toString() + middle_num.toString() + left_half_num.toString().split(\"\").reverse().join(\"\"));\n  } else {\n    if (middle_num === 9) {\n      left_half_num += 1;\n      middle_num = 0;\n    } else {\n      middle_num += 1;\n    }\n    next_palindrome = parseInt(left_half_num.toString() + middle_num.toString() + left_half_num.toString().split(\"\").reverse().join(\"\"));\n  }\n  return next_palindrome;\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let half_len = Math.floor(num_len / 2);\n  let left_half = num_str.substring(0, half_len);\n  let right_half = num_str.substring(half_len + num_len % 2, num_len);\n  let left_half_int = parseInt(left_half);\n  let right_half_int = parseInt(right_half);\n\n  if (left_half_int < right_half_int) {\n    left_half = (left_half_int + 1).toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n  } else if (left_half_int > right_half_int) {\n    right_half = left_half.split(\"\").reverse().join(\"\");\n  } else {\n    let left_half_int_inc = left_half_int + 1;\n    let left_half_inc = left_half_int_inc.toString();\n    let right_half_inc = left_half_inc.split(\"\").reverse().join(\"\");\n    if (left_half_inc.length > left_half.length) {\n      left_half = left_half_inc;\n      right_half = right_half_inc.substring(1, right_half_inc.length);\n    } else {\n      left_half = left_half_inc;\n      right_half = right_half_inc;\n    }\n  }\n\n  return parseInt(left_half + right_half);\n}\n",
    "  let num_str = num.toString();\n  let num_str_len = num_str.length;\n  let left_half = num_str.substring(0, (num_str_len / 2));\n  let middle = (num_str_len % 2) ? num_str.charAt(Math.floor(num_str_len / 2)) : '';\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num) {\n    return parseInt(palindrome);\n  }\n  if (middle) {\n    middle = (parseInt(middle) + 1).toString();\n  }\n  left_half = (parseInt(left_half) + 1).toString();\n  right_half = left_half.split(\"\").reverse().join(\"\");\n  palindrome = left_half + middle + right_half;\n  return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len / 2);\n    let left = num_str.substring(0, mid);\n    let right = num_str.substring(mid + num_len % 2, num_len);\n    let right_rev = right.split(\"\").reverse().join(\"\");\n    let left_rev = left.split(\"\").reverse().join(\"\");\n    let left_int = parseInt(left);\n    let right_int = parseInt(right);\n    let right_rev_int = parseInt(right_rev);\n    let left_rev_int = parseInt(left_rev);\n    if (left_int < right_rev_int) {\n        return parseInt(left + right_rev);\n    } else if (left_rev_int < right_int) {\n        return parseInt(left_rev + right);\n    } else {\n        let left_plus_one = (parseInt(left) + 1).toString();\n        let left_plus_one_len = left_plus_one.length;\n        let left_plus_one_rev = left_plus_one.split(\"\").reverse().join(\"\");\n        if (left_plus_one_len > mid) {\n            return parseInt(left_plus_one + left_plus_one_rev);\n        } else {\n            return parseInt(left_plus_one + left_plus_one_rev.substring(1));\n        }\n    }\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_smaller = false;\n    let i = mid - 1;\n    let j = len % 2 === 0 ? mid : mid + 1;\n\n    while (i >= 0 && num_str[i] === num_str[j]) {\n        i--;\n        j++;\n    }\n\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n\n    while (i >= 0) {\n        num_str = replaceAt(num_str, j, num_str[i]);\n        num_str = replaceAt(num_str, i, num_str[j]);\n        i--;\n        j++;\n    }\n\n    if (left_smaller) {\n        let carry = 1;\n        i = mid - 1;\n\n        if (len % 2 === 1) {\n            num_str = replaceAt(num_str, mid, (parseInt(num_str[mid]) + carry).toString());\n            carry = parseInt(num_str[mid]) / 10;\n            num_str = replaceAt(num_str, mid, (parseInt(num_str[mid]) % 10).toString());\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n\n        while (i >= 0) {\n            num_str = replaceAt(num_str, i, (parseInt(num_str[i]) + carry).toString());\n            carry = parseInt(num_str[i]) / 10;\n            num_str = replaceAt(num_str, i, (parseInt(num_str[i]) % 10).toString());\n            num_str = replaceAt(num_str, j, num_str[i]);\n            i--;\n            j++;\n        }\n    }\n\n    return parseInt(num_str);\n}\n",
    "  let palindrome = num;\n  let isPalindrome = false;\n  while (!isPalindrome) {\n    palindrome++;\n    isPalindrome = is_palindrome(palindrome);\n  }\n  return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = 1;\n    while (left >= 0 && num_str[left] === num_str[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || num_str[left] < num_str[right]) {\n        left = Math.floor(len / 2);\n        right = len % 2 === 0 ? left : left + 1;\n        while (left >= 0) {\n            let sum = parseInt(num_str[left]) + increment;\n            if (sum > 9) {\n                num_str = num_str.substring(0, left) + '0' + num_str.substring(right + 1);\n                left--;\n                right++;\n                increment = 1;\n            } else {\n                num_str = num_str.substring(0, left) + sum + num_str.substring(right + 1);\n                break;\n            }\n        }\n    }\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n        num_str = num_str.substring(0, left) + num_str[right] + num_str.substring(left + 1);\n        left--;\n        right++;\n    }\n    return parseInt(num_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left = Math.floor(num_len / 2);\n    let right = num_len % 2 === 0 ? left : left + 1;\n    let left_str = num_str.substring(0, left);\n    let right_str = num_str.substring(right);\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    let is_palindrome = left_num === right_num;\n    let is_all_9 = num_str.split('').every(x => x === '9');\n    if (is_all_9) {\n        return parseInt('1' + '0'.repeat(num_len - 1) + '1');\n    }\n    if (is_palindrome) {\n        let next_left_num = left_num + 1;\n        let next_left_str = next_left_num.toString();\n        let next_right_str = next_left_str.substring(0, left);\n        return parseInt(next_left_str + next_right_str.split('').reverse().join(''));\n    }\n    else {\n        let next_right_str = right_num.toString();\n        let next_left_str = left_num.toString();\n        let next_left_num = parseInt(next_left_str);\n        let next_right_num = parseInt(next_right_str);\n        if (next_left_num > next_right_num) {\n            return parseInt(next_left_str + next_left_str.split('').reverse().join(''));\n        }\n        else {\n            let next_right_num = parseInt(next_right_str);\n            let next_left_num = parseInt(next_left_str);\n            if (next_left_num > next_right_num) {\n                return parseInt(next_left_str + next_left_str.split('').reverse().join(''));\n            }\n            else {\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substring(0, mid);\n  let right = str.substring(mid + len % 2, len);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  if (left < right_rev) {\n    return parseInt(left + str[mid] + right_rev);\n  }\n  let left_int = parseInt(left);\n  let left_int_plus_1 = left_int + 1;\n  let left_plus_1 = left_int_plus_1.toString();\n  let left_plus_1_rev = left_plus_1.split(\"\").reverse().join(\"\");\n  return parseInt(left_plus_1 + str[mid] + left_plus_1_rev);\n}\n\nconsole.log(next_smallest_palindrome(12345));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(252));\nconsole.log(next_smallest_palindrome(1234321));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(99999));\nconsole.log(next_smallest_palindrome(1245));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left = num_str.substring(0, mid);\n    let right = num_str.substring(mid + len % 2, len);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + num_str.charAt(mid) + right_rev);\n    } else {\n        let left_int = parseInt(left);\n        let right_int = parseInt(right);\n        if (len % 2 == 1) {\n            let mid_int = parseInt(num_str.charAt(mid));\n            let mid_plus_one = mid_int + 1;\n            if (mid_plus_one < 10) {\n                return parseInt(left + mid_plus_one + right_rev);\n            } else {\n                let left_plus_one = left_int + 1;\n                let left_plus_one_str = left_plus_one.toString();\n                let left_plus_one_len = left_plus_one_str.length;\n                let left_plus_one_mid = Math.floor(left_plus_one_len / 2);\n                let left_plus_one_left = left_plus_one_str.substring(0, left_plus_one_mid);\n                let left_plus_one_right = left_plus_one_str.substring(left_plus_one_mid + left_plus_one_len % 2, left_plus_one_len);\n                let left_plus_one_right_rev = left_plus_one_right.split('').reverse().join('');\n                return parseInt(left_plus_one_left + left_plus_one_right_rev);\n            }\n        } else {\n            let left_plus_one = left_int + 1;\n            let left_plus_one_str = left_plus_one.toString();\n            let left_plus_one_len = left_plus_one_str.",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let num_str_len_half = Math.floor(num_str_len / 2);\n    let num_str_len_half_ceil = Math.ceil(num_str_len / 2);\n    let num_str_len_half_ceil_minus_one = num_str_len_half_ceil - 1;\n    let num_str_len_half_ceil_minus_two = num_str_len_half_ceil - 2;\n    let num_str_len_half_ceil_minus_three = num_str_len_half_ceil - 3;\n    let num_str_len_half_ceil_plus_one = num_str_len_half_ceil + 1;\n    let num_str_len_half_ceil_plus_two = num_str_len_half_ceil + 2;\n    let num_str_len_half_ceil_plus_three = num_str_len_half_ceil + 3;\n    let num_str_len_half_ceil_plus_four = num_str_len_half_ceil + 4;\n    let num_str_len_half_ceil_plus_five = num_str_len_half_ceil + 5;\n    let num_str_len_half_ceil_plus_six = num_str_len_half_ceil + 6;\n    let num_str_len_half_ceil_plus_seven = num_str_len_half_ceil + 7;\n    let num_str_len_half_ceil_plus_eight = num_str_len_half_ceil + 8;\n    let num_str_len_half_ceil_plus_nine = num_str_len_half_ceil + 9;\n    let num_str_len_half_ceil_plus_ten = num_str_len_half_ceil + 10;\n    let num_str_len_half_ceil_plus_eleven = num_str_len_half_ceil + 11;",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num) {\n    return parseInt(palindrome);\n  }\n  let left_half_int = parseInt(left_half);\n  let middle_int = parseInt(middle);\n  let right_half_int = parseInt(right_half);\n  if (middle_int !== 9) {\n    middle_int = middle_int + 1;\n    middle = middle_int.toString();\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n  }\n  middle = \"0\";\n  left_half_int = left_half_int + 1;\n  left_half = left_half_int.toString();\n  right_half = left_half.split(\"\").reverse().join(\"\");\n  palindrome = left_half + middle + right_half;\n  return parseInt(palindrome);\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let mid = Math.floor(len / 2);\n  let left = num_str.substring(0, mid);\n  let right = num_str.substring(mid + len % 2, len);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  if (left < right_rev) {\n    return parseInt(left + (len % 2 == 1 ? num_str[mid] : \"\") + right_rev);\n  } else {\n    let left_int = parseInt(left);\n    let left_int_plus_1 = left_int + 1;\n    let left_plus_1 = left_int_plus_1.toString();\n    let left_plus_1_rev = left_plus_1.split(\"\").reverse().join(\"\");\n    return parseInt(left_plus_1 + (len % 2 == 1 ? num_str[mid] : \"\") + left_plus_1_rev);\n  }\n}\n",
    "  let palindrome = num;\n  let isPalindrome = false;\n\n  while (!isPalindrome) {\n    palindrome++;\n    isPalindrome = is_palindrome(palindrome);\n  }\n\n  return palindrome;\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_smaller = false;\n    let i = mid - 1;\n    let j = len % 2 === 0 ? mid : mid + 1;\n    while (i >= 0 && num_str[i] === num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str = replaceAt(num_str, j, num_str[i]);\n        num_str = replaceAt(num_str, i, num_str[j]);\n        i--;\n        j++;\n    }\n    if (left_smaller) {\n        let carry = 1;\n        i = mid - 1;\n        if (len % 2 === 1) {\n            num_str = replaceAt(num_str, mid, (parseInt(num_str[mid]) + carry).toString());\n            carry = parseInt(num_str[mid]) / 10;\n            num_str = replaceAt(num_str, mid, (parseInt(num_str[mid]) % 10).toString());\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            num_str = replaceAt(num_str, i, (parseInt(num_str[i]) + carry).toString());\n            carry = parseInt(num_str[i]) / 10;\n            num_str = replaceAt(num_str, i, (parseInt(num_str[i]) % 10).toString());\n            num_str = replaceAt(num_str, j, num_str[i]);\n            i--;\n            j++;\n        }\n    }\n    return parseInt(num_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substr(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : '';\n    let right_half = left_half.split('').reverse().join('');\n    let new_num = parseInt(left_half + middle + right_half);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    left_half = (parseInt(left_half) + 1).toString();\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substr(1 - len % 2);\n    return parseInt(next_palindrome);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + 1);\n    let right_rev = right.split('').reverse().join('');\n    let left_int = parseInt(left);\n    let right_int = parseInt(right);\n    let right_rev_int = parseInt(right_rev);\n    if (left_int < right_rev_int) {\n        return parseInt(left + str[mid] + right_rev);\n    } else {\n        if (len % 2 == 0) {\n            return parseInt(left + right_rev);\n        } else {\n            return parseInt(left + str[mid] + right_rev);\n        }\n    }\n}\n",
    "    let num_string = num.toString();\n    let num_length = num_string.length;\n    let left_half = num_string.substring(0, Math.floor(num_length / 2));\n    let middle = num_length % 2 === 1 ? num_string.charAt(Math.floor(num_length / 2)) : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    if (middle === \"9\") {\n        middle = \"0\";\n        let left_half_int = parseInt(left_half) + 1;\n        left_half = left_half_int.toString();\n        if (left_half.length > num_length / 2) {\n            left_half = \"1\" + \"0\".repeat(num_length - 1);\n            middle = \"\";\n        }\n    } else {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid = Math.floor(num_len / 2);\n  let left = num_str.substring(0, mid);\n  let right = num_str.substring(mid + num_len % 2, num_len);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  if (left < right_rev) {\n    return parseInt(left + num_str[mid] + right_rev);\n  } else {\n    let left_int = parseInt(left);\n    let left_int_plus_one = left_int + 1;\n    let left_int_plus_one_str = left_int_plus_one.toString();\n    let left_int_plus_one_str_rev = left_int_plus_one_str\n      .split(\"\")\n      .reverse()\n      .join(\"\");\n    return parseInt(\n      left_int_plus_one_str +\n        num_str[mid] +\n        left_int_plus_one_str_rev.substring(num_len % 2, num_len)\n    );\n  }\n}\n\nconsole.log(next_smallest_palindrome(123)); // 131\nconsole.log(next_smallest_palindrome(1234)); // 1331\nconsole.log(next_smallest_palindrome(12345)); // 12421\nconsole.log(next_smallest_palindrome(123454321)); // 123464321\nconsole.log(next_smallest_palindrome(123464321)); // 123472341\nconsole.log(next_smallest_palindrome(123472341)); // 123484321\nconsole.log(next_smallest_palindrome(123484321)); // 123498321\nconsole.log(next_smallest_palindrome(123498321)); // 123499321\nconsole.log(next_smallest_palindrome(123499321)); // 123500321\nconsole.log(next_smallest_palindrome(123500321)); // 12",
    "  let numStr = num.toString();\n  let numStrLen = numStr.length;\n  let leftHalf = numStr.substr(0, Math.floor(numStrLen / 2));\n  let middle = numStrLen % 2 ? numStr[Math.floor(numStrLen / 2)] : \"\";\n  let rightHalf = leftHalf.split(\"\").reverse().join(\"\");\n  let palindrome = leftHalf + middle + rightHalf;\n  if (palindrome > num) {\n    return parseInt(palindrome);\n  }\n  if (leftHalf.length === 0) {\n    return parseInt(middle) + 1;\n  }\n  let leftHalfInt = parseInt(leftHalf);\n  let leftHalfIntPlusOne = leftHalfInt + 1;\n  let leftHalfIntPlusOneStr = leftHalfIntPlusOne.toString();\n  let leftHalfIntPlusOneStrLen = leftHalfIntPlusOneStr.length;\n  let leftHalfIntPlusOneStrLeftHalf = leftHalfIntPlusOneStr.substr(\n    0,\n    Math.floor(leftHalfIntPlusOneStrLen / 2)\n  );\n  let leftHalfIntPlusOneStrMiddle =\n    leftHalfIntPlusOneStrLen % 2\n      ? leftHalfIntPlusOneStr[Math.floor(leftHalfIntPlusOneStrLen / 2)]\n      : \"\";\n  let leftHalfIntPlusOneStrRightHalf = leftHalfIntPlusOneStrLeftHalf\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n  return parseInt(\n    leftHalfIntPlusOneStrLeftHalf +\n      leftHalfIntPlusOneStrMiddle +\n      leftHalfIntPlusOneStrRightHalf\n  );\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substr(0, mid);\n  let right = str.substr(mid + len % 2, mid);\n  let next_palindrome = Number(left + (len % 2 ? str[mid] : '') + left.split('').reverse().join(''));\n  if (num < next_palindrome) {\n    return next_palindrome;\n  }\n  if (len % 2 && str[mid] < '9') {\n    return Number(left + (++str[mid]) + left.split('').reverse().join(''));\n  }\n  if (len % 2) {\n    left = (Number(left) + 1).toString();\n    mid = Math.floor(left.length / 2);\n    right = left.substr(mid + 1, mid);\n    return Number(left + right.split('').reverse().join(''));\n  }\n  left = (Number(left) + 1).toString();\n  mid = Math.floor(left.length / 2);\n  right = left.substr(mid, mid);\n  return Number(left + right.split('').reverse().join(''));\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid_idx = Math.floor(num_len / 2);\n    let left_idx = mid_idx - 1;\n    let right_idx = num_len % 2 === 0 ? mid_idx : mid_idx + 1;\n    let left_half = num_str.substring(0, left_idx + 1);\n    let right_half = num_str.substring(right_idx);\n    let right_half_rev = right_half.split('').reverse().join('');\n    if (left_half < right_half_rev) {\n        return parseInt(left_half + num_str[mid_idx] + right_half_rev);\n    } else {\n        let left_half_num = parseInt(left_half);\n        let new_left_half = (left_half_num + 1).toString();\n        let new_left_half_len = new_left_half.length;\n        let new_mid_idx = Math.floor(new_left_half_len / 2);\n        let new_left_idx = new_mid_idx - 1;\n        let new_right_idx = new_left_half_len % 2 === 0 ? new_mid_idx : new_mid_idx + 1;\n        let new_left_half_str = new_left_half.substring(0, new_left_idx + 1);\n        let new_right_half_str = new_left_half.substring(new_right_idx);\n        let new_right_half_str_rev = new_right_half_str.split('').reverse().join('');\n        return parseInt(new_left_half_str + new_left_half[new_mid_idx] + new_right_half_str_rev);\n    }\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substr(0, mid);\n  let right = str.substr(mid + len % 2, mid);\n  let next_palindrome = (parseInt(left) + 1).toString() + (parseInt(left) + 1).toString().split('').reverse().join('');\n  return parseInt(next_palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (num_str === palindrome) {\n        return num;\n    }\n    if (num_len === 1) {\n        return num + 1;\n    }\n    if (num_len === 2) {\n        if (num % 11 === 0) {\n            return num + 11;\n        }\n        return num + 1;\n    }\n    if (num_len === 3) {\n        if (num % 101 === 0) {\n            return num + 101;\n        }\n        return num + 1;\n    }\n    if (num_len === 4) {\n        if (num % 1001 === 0) {\n            return num + 1001;\n        }\n        return num + 1;\n    }\n    if (num_len === 5) {\n        if (num % 10001 === 0) {\n            return num + 10001;\n        }\n        return num + 1;\n    }\n    if (num_len === 6) {\n        if (num % 100001 === 0) {\n            return num + 100001;\n        }\n        return num + 1;\n    }\n    if (num_len === 7) {\n        if (num % 1000001 === 0) {\n            return num + 1000001;\n        }\n        return num + 1;\n    }\n    if (num_len === 8) {\n        if (num % 10000001 === 0) {\n            return num + 10000001;\n        }\n        return num + 1;\n    }\n    if (num_len === 9) {\n        if (num % 100000001 === 0) {\n            return num + 100000001;\n        }\n        return num + 1",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substr(1);\n    if (len % 2 == 1) {\n        next_palindrome = next_palindrome.substr(0, mid + 1) + next_palindrome.substr(mid, mid + 1);\n    }\n    return parseInt(next_palindrome);\n}\n",
    "  let isPalindrome = false;\n  let newNum = num;\n  while (!isPalindrome) {\n    newNum++;\n    isPalindrome = is_palindrome(newNum);\n  }\n  return newNum;\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substr(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num_str) {\n    return parseInt(palindrome);\n  } else {\n    let left_half_int = parseInt(left_half);\n    let middle_int = parseInt(middle);\n    let new_left_half_int = middle_int === 9 ? left_half_int + 1 : left_half_int;\n    let new_middle_int = middle_int === 9 ? 0 : middle_int + 1;\n    let new_left_half = new_left_half_int.toString();\n    let new_middle = new_middle_int.toString();\n    let new_right_half = new_left_half.split(\"\").reverse().join(\"\");\n    return parseInt(new_left_half + new_middle + new_right_half);\n  }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let left_rev = left.split(\"\").reverse().join(\"\");\n    if (left_rev < right) {\n        left = (parseInt(left) + 1).toString();\n        left_rev = left.split(\"\").reverse().join(\"\");\n    }\n    let result = left + (len % 2 == 1 ? str[mid] : \"\") + left_rev;\n    return parseInt(result);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substr(1);\n    if (len % 2 === 1) {\n        next_palindrome = next_palindrome.substr(0, mid + 1) + next_palindrome.substr(mid, mid + 1);\n    }\n    return parseInt(next_palindrome);\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let left = Math.floor(len / 2);\n  let right = len % 2 === 0 ? left : left + 1;\n  let increment = 1;\n  let increment_left = true;\n  while (left >= 0 || right < len) {\n    if (left === right) {\n      num_str =\n        num_str.substring(0, left) +\n        (parseInt(num_str[left]) + increment).toString() +\n        num_str.substring(right + 1);\n      break;\n    }\n    if (num_str[left] !== num_str[right]) {\n      if (num_str[left] > num_str[right]) {\n        num_str =\n          num_str.substring(0, right) +\n          num_str[left] +\n          num_str.substring(right + 1);\n        increment_left = false;\n      } else {\n        num_str =\n          num_str.substring(0, left) +\n          num_str[right] +\n          num_str.substring(left + 1);\n        increment_left = true;\n      }\n    }\n    left--;\n    right++;\n  }\n  if (increment_left) {\n    left = Math.floor(len / 2) - 1;\n    right = len % 2 === 0 ? left + 1 : left + 2;\n    increment = 1;\n    while (left >= 0) {\n      let sum = parseInt(num_str[left]) + increment;\n      num_str =\n        num_str.substring(0, left) +\n        sum.toString() +\n        num_str.substring(right);\n      if (sum < 10) {\n        break;\n      } else {\n        increment = 1;\n        left--;\n        right++;\n      }\n    }\n  }\n  if (left < 0) {\n    num_str = \"1\" + num_str;\n  }\n  return parseInt(num_str);\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str.charAt(Math.floor(num_len / 2)) : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  let palindrome_num = parseInt(palindrome);\n  if (palindrome_num > num) {\n    return palindrome_num;\n  }\n  if (middle === \"9\") {\n    middle = \"0\";\n    let left_half_num = parseInt(left_half) + 1;\n    left_half = left_half_num.toString();\n    right_half = left_half.split(\"\").reverse().join(\"\");\n    palindrome = left_half + middle + right_half;\n    palindrome_num = parseInt(palindrome);\n    return palindrome_num;\n  }\n  middle = (parseInt(middle) + 1).toString();\n  palindrome = left_half + middle + right_half;\n  palindrome_num = parseInt(palindrome);\n  return palindrome_num;\n}\n\nconsole.log(next_smallest_palindrome(1));\nconsole.log(next_smallest_palindrome(10));\nconsole.log(next_smallest_palindrome(11));\nconsole.log(next_smallest_palindrome(12));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(100));\nconsole.log(next_smallest_palindrome(101));\nconsole.log(next_smallest_palindrome(111));\nconsole.log(next_smallest_palindrome(121));\nconsole.log(next_smallest_palindrome(999));\nconsole.log(next_smallest_palindrome(1000));\nconsole.log",
    "  let palindrome = num;\n  let isPalindrome = false;\n  while (!isPalindrome) {\n    palindrome++;\n    isPalindrome = is_palindrome(palindrome);\n  }\n  return palindrome;\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + len % 2, len);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + str[mid] + right_rev);\n    } else {\n        let new_left = (parseInt(left) + 1).toString();\n        let new_right = new_left.split('').reverse().join('');\n        return parseInt(new_left + str[mid] + new_right);\n    }\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid_index = Math.floor(num_len / 2);\n  let left_half = num_str.substring(0, mid_index);\n  let right_half = num_str.substring(mid_index + num_len % 2);\n  let left_half_rev = left_half.split(\"\").reverse().join(\"\");\n  let next_palindrome = parseInt(left_half + right_half);\n  let next_palindrome_rev = parseInt(left_half_rev + right_half);\n  if (next_palindrome > num) {\n    return next_palindrome;\n  } else if (next_palindrome_rev > num) {\n    return next_palindrome_rev;\n  } else {\n    let next_left_half = (parseInt(left_half) + 1).toString();\n    let next_left_half_rev = next_left_half.split(\"\").reverse().join(\"\");\n    return parseInt(next_left_half + right_half);\n  }\n}\n\nconsole.log(next_smallest_palindrome(2));\nconsole.log(next_smallest_palindrome(11));\nconsole.log(next_smallest_palindrome(12));\nconsole.log(next_smallest_palindrome(13));\nconsole.log(next_smallest_palindrome(14));\nconsole.log(next_smallest_palindrome(15));\nconsole.log(next_smallest_palindrome(16));\nconsole.log(next_smallest_palindrome(17));\nconsole.log(next_smallest_palindrome(18));\nconsole.log(next_smallest_palindrome(19));\nconsole.log(next_smallest_palindrome(20));\nconsole.log(next_smallest_palindrome(21));\nconsole.log(next_smallest_palindrome(22));\nconsole.log(next_smallest_palindrome(23));\nconsole.log(next_smallest_palind",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n    if (left_rev < right) {\n        return parseInt(left + (len % 2 ? str[mid] : '') + left_rev);\n    } else {\n        let new_left = (parseInt(left) + 1).toString();\n        let new_left_rev = new_left.split('').reverse().join('');\n        return parseInt(new_left + (len % 2 ? str[mid] : '') + new_left_rev);\n    }\n}\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let left = Math.floor(len / 2);\n  let right = len % 2 === 0 ? left : left + 1;\n  let left_str = num_str.slice(0, left);\n  let right_str = num_str.slice(right);\n  let left_num = parseInt(left_str);\n  let right_num = parseInt(right_str);\n  if (left_num < right_num) {\n    left_num++;\n    left_str = left_num.toString();\n    right_str = left_str.split(\"\").reverse().join(\"\");\n    return parseInt(left_str + right_str);\n  } else if (left_num > right_num) {\n    right_str = left_str.split(\"\").reverse().join(\"\");\n    return parseInt(left_str + right_str);\n  } else {\n    let new_num = next_smallest_palindrome(parseInt(left_str));\n    let new_str = new_num.toString();\n    right_str = new_str.split(\"\").reverse().join(\"\");\n    return parseInt(new_str + right_str);\n  }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next_palindrome = (parseInt(left) + 1).toString() + (parseInt(left) + 1).toString().split('').reverse().join('');\n    return parseInt(next_palindrome);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + 1);\n\n    if (len % 2 === 0) {\n        right = str.substr(mid);\n    }\n\n    let left_rev = left.split('').reverse().join('');\n    let right_rev = right.split('').reverse().join('');\n\n    if (left_rev > right) {\n        return parseInt(left + str[mid] + left_rev);\n    } else {\n        let new_left = (parseInt(left) + 1).toString();\n        let new_left_rev = new_left.split('').reverse().join('');\n\n        if (new_left.length > left.length) {\n            return parseInt(new_left + new_left_rev);\n        } else {\n            return parseInt(new_left + str[mid] + new_left_rev);\n        }\n    }\n}\n\nconsole.log(next_smallest_palindrome(12345));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(999));\nconsole.log(next_smallest_palindrome(123454321));\nconsole.log(next_smallest_palindrome(123432));\nconsole.log(next_smallest_palindrome(1234321));\nconsole.log(next_smallest_palindrome(123321));\nconsole.log(next_smallest_palindrome(1233211));\nconsole.log(next_smallest_palindrome(12332211));\nconsole.log(next_smallest_palindrome(123322111));\nconsole.log(next_smallest_palindrome(1233221111));\nconsole.log(next_smallest_palindrome(12332211111));\nconsole.log(next_smallest_palindrome(",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let left_reverse = left.split('').reverse().join('');\n    if (left < right) {\n        return parseInt(left + (len % 2 ? str[mid] : '') + left_reverse);\n    } else {\n        return parseInt(next_palindrome_helper(left) + (len % 2 ? str[mid] : '') + next_palindrome_helper(left));\n    }\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_half = num_str.substr(0, mid);\n    let right_half = num_str.substr(mid + len % 2, mid);\n    let next_palindrome = parseInt(left_half + (len % 2 === 1 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (len % 2 === 0) {\n        left_half = (parseInt(left_half) + 1).toString();\n        return parseInt(left_half + left_half.split('').reverse().join(''));\n    }\n    let mid_num = parseInt(num_str[mid]);\n    if (mid_num < 9) {\n        return parseInt(left_half + (mid_num + 1) + left_half.split('').reverse().join(''));\n    }\n    left_half = (parseInt(left_half) + 1).toString();\n    return parseInt(left_half + '0' + left_half.split('').reverse().join(''));\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let i = 0;\n    let j = num_len - 1;\n    let is_palindrome = true;\n    while (i < j) {\n        if (num_str[i] !== num_str[j]) {\n            is_palindrome = false;\n            break;\n        }\n        i++;\n        j--;\n    }\n    if (is_palindrome) {\n        return num;\n    }\n    let left_num = parseInt(num_str.substring(0, Math.floor(num_len / 2)));\n    let right_num = parseInt(num_str.substring(Math.ceil(num_len / 2), num_len));\n    let left_num_str = '';\n    let right_num_str = '';\n    if (left_num > right_num) {\n        left_num_str = left_num.toString();\n        right_num_str = left_num_str.substring(0, num_len - left_num_str.length);\n        return parseInt(left_num_str + right_num_str.split('').reverse().join(''));\n    } else {\n        left_num_str = (left_num + 1).toString();\n        right_num_str = left_num_str.substring(0, num_len - left_num_str.length);\n        return parseInt(left_num_str + right_num_str.split('').reverse().join(''));\n    }\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, len);\n    let right_rev = right.split('').reverse().join('');\n    if (left < right_rev) {\n        return parseInt(left + str[mid] + right_rev);\n    } else {\n        let next_left = (parseInt(left) + 1).toString();\n        let next_right = next_left.substr(0, mid);\n        return parseInt(next_left + str[mid] + next_right);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let left_half = num_str.substring(0, (num_str_len / 2));\n    let middle = (num_str_len % 2) ? num_str.charAt(Math.floor(num_str_len / 2)) : '';\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    else {\n        left_half = (parseInt(left_half) + 1).toString();\n        middle = '0';\n        right_half = left_half.split(\"\").reverse().join(\"\");\n    }\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, mid);\n    let middle = (num_len % 2) ? num_str.substring(mid, mid + 1) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let next_palindrome = parseInt(left_half + middle + right_half);\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    else {\n        left_half = (parseInt(left_half) + 1).toString();\n    }\n    right_half = left_half.split('').reverse().join('');\n    return parseInt(left_half + middle + right_half);\n}\n",
    "  let palindrome = num;\n  let isPalindrome = false;\n  while (!isPalindrome) {\n    palindrome++;\n    isPalindrome = is_palindrome(palindrome);\n  }\n  return palindrome;\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = (num_len % 2) ? num_str.charAt(Math.floor(num_len / 2)) : '';\n  let right_half = left_half.split('').reverse().join('');\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num_str) {\n    return parseInt(palindrome);\n  }\n  let left_half_int = parseInt(left_half);\n  let new_left_half_int = left_half_int + 1;\n  let new_left_half = new_left_half_int.toString();\n  if (new_left_half.length > left_half.length) {\n    middle = '';\n    new_left_half = '0';\n  }\n  return parseInt(new_left_half + middle + new_left_half.split('').reverse().join(''));\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid = Math.floor(num_len / 2);\n  let left_half = num_str.substring(0, mid);\n  let middle = num_str.substring(mid, mid + 1);\n  let right_half = num_str.substring(mid + 1);\n  let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n  if (num_len % 2 === 0) {\n    if (left_half < right_half_rev) {\n      return parseInt(left_half + right_half_rev);\n    } else {\n      let new_left_half = (parseInt(left_half) + 1).toString();\n      let new_right_half = new_left_half.split(\"\").reverse().join(\"\");\n      return parseInt(new_left_half + new_right_half);\n    }\n  } else {\n    if (left_half < right_half_rev) {\n      return parseInt(left_half + middle + right_half_rev);\n    } else {\n      let new_left_half = (parseInt(left_half) + 1).toString();\n      let new_right_half = new_left_half.split(\"\").reverse().join(\"\");\n      return parseInt(new_left_half + middle + new_right_half);\n    }\n  }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = (num_len % 2 === 1) ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = left_half.split(\"\").reverse().join(\"\");\n    let new_num = parseInt(left_half + middle + right_half);\n    if (new_num > num) {\n        return new_num;\n    }\n    if (middle === \"9\") {\n        middle = \"0\";\n        let carry = 1;\n        let new_left_half = \"\";\n        for (let i = left_half.length - 1; i >= 0; i--) {\n            let digit = parseInt(left_half[i]);\n            digit += carry;\n            if (digit === 10) {\n                digit = 0;\n                carry = 1;\n            } else {\n                carry = 0;\n            }\n            new_left_half = digit.toString() + new_left_half;\n        }\n        if (carry === 1) {\n            new_left_half = \"1\" + new_left_half;\n        }\n        left_half = new_left_half;\n        right_half = left_half.split(\"\").reverse().join(\"\");\n        new_num = parseInt(left_half + middle + right_half);\n        return new_num;\n    }\n    middle = (parseInt(middle) + 1).toString();\n    new_num = parseInt(left_half + middle + right_half);\n    return new_num;\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let num_half = Math.floor(num_len / 2);\n  let num_left = num_str.substring(0, num_half);\n  let num_right = num_str.substring(num_half + (num_len % 2), num_len);\n  let num_left_rev = num_left.split(\"\").reverse().join(\"\");\n  let num_right_rev = num_right.split(\"\").reverse().join(\"\");\n  let num_left_rev_num = parseInt(num_left_rev);\n  let num_right_rev_num = parseInt(num_right_rev);\n  let num_left_num = parseInt(num_left);\n  let num_right_num = parseInt(num_right);\n  let num_left_rev_num_plus_one = num_left_rev_num + 1;\n  let num_left_rev_num_plus_one_str = num_left_rev_num_plus_one.toString();\n  let num_left_rev_num_plus_one_str_len = num_left_rev_num_plus_one_str.length;\n  let num_left_rev_num_plus_one_str_half = Math.floor(\n    num_left_rev_num_plus_one_str_len / 2\n  );\n  let num_left_rev_num_plus_one_str_left = num_left_rev_num_plus_one_str.substring(\n    0,\n    num_left_rev_num_plus_one_str_half\n  );\n  let num_left_rev_num_plus_one_str_right = num_left_rev_num_plus_one_str.substring(\n    num_left_rev_num_plus_one_str_half +\n      (num_left_rev_num_plus_one_str_len % 2),\n    num_left_rev_num_plus_one_str_len\n  );\n  let num_left_rev_num_plus_one_",
    "    let str = num.toString();\n    let len = str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = true;\n    while (left >= 0 && right < len) {\n        if (str[left] !== str[right]) {\n            increment = str[left] > str[right];\n            str = str.substring(0, left) + str[right] + str.substring(left + 1, right) + str[left] + str.substring(right + 1);\n            break;\n        }\n        left--;\n        right++;\n    }\n    if (increment) {\n        let carry = 1;\n        left = Math.floor(len / 2) - 1;\n        right = len % 2 === 0 ? left + 1 : left + 2;\n        while (left >= 0 && right < len) {\n            let sum = parseInt(str[left]) + carry;\n            str = str.substring(0, left) + sum % 10 + str.substring(left + 1, right) + sum % 10 + str.substring(right + 1);\n            carry = Math.floor(sum / 10);\n            left--;\n            right++;\n        }\n        if (carry > 0) {\n            str = carry + str;\n        }\n    }\n    return parseInt(str);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = 1;\n    let left_str = num_str.substring(0, left);\n    let right_str = num_str.substring(right);\n    let new_num_str = left_str + right_str;\n    while (new_num_str <= num_str) {\n        left_str = (parseInt(left_str) + increment).toString();\n        new_num_str = left_str + left_str.split('').reverse().join('');\n        increment = 1;\n    }\n    return parseInt(new_num_str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle_digit = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : \"\";\n    let right_half = num_str.substring(Math.ceil(num_len / 2));\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let middle_digit_int = parseInt(middle_digit);\n    let left_half_int_next = left_half_int + 1;\n    let left_half_next = left_half_int_next.toString();\n    let right_half_next = left_half_next.split(\"\").reverse().join(\"\");\n    let middle_digit_next = middle_digit_int + 1;\n    let middle_digit_next_str = middle_digit_next.toString();\n    let middle_digit_next_str_len = middle_digit_next_str.length;\n    let middle_digit_next_str_first_digit = middle_digit_next_str[0];\n    let middle_digit_next_str_first_digit_int = parseInt(middle_digit_next_str_first_digit);\n    let middle_digit_next_str_first_digit_int_next = middle_digit_next_str_first_digit_int + 1;\n    let middle_digit_next_str_first_digit_int_next_str = middle_digit_next_str_first_digit_int_next.toString();\n    let middle_digit_next_str_first_digit_int_next_str_len = middle_digit_next_str_first_digit_int_next_str.length;\n    let middle_digit_next_str_first_digit_int_next_str_len_diff = middle_digit_next_str_len - middle_digit_next_str_first_digit_int_next_str_len;\n    let middle",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + len % 2);\n    let next_palindrome = Number(left + right.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (len % 2 == 1) {\n        if (left[mid - 1] != '9') {\n            left = left.substring(0, mid - 1) + (Number(left[mid - 1]) + 1) + left[mid - 1];\n            return Number(left + left.split('').reverse().join(''));\n        } else {\n            left = left.substring(0, mid - 1) + '0';\n            let carry = 1;\n            for (let i = mid - 2; i >= 0; i--) {\n                let sum = Number(left[i]) + carry;\n                left = left.substring(0, i) + sum % 10 + left.substring(i + 1);\n                carry = Math.floor(sum / 10);\n            }\n            if (carry == 1) {\n                left = '1' + left;\n            }\n            return Number(left + left.split('').reverse().join(''));\n        }\n    } else {\n        if (left[mid - 1] != '9') {\n            left = left.substring(0, mid - 1) + (Number(left[mid - 1]) + 1) + left[mid - 1];\n            return Number(left + left.split('').reverse().join(''));\n        } else {\n            left = left.substring(0, mid - 1) + '0';\n            let carry = 1;\n            for (let i = mid - 2; i >= 0; i--) {\n                let sum = Number(left[i]) + carry;\n                left = left.substring(0, i) + sum % 10 + left.substring(i + 1);\n                carry = Math",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next = (parseInt(left) + 1).toString();\n    let next_palindrome = next + next.split('').reverse().join('').substr(1);\n    if (len % 2 == 1) {\n        next_palindrome = next_palindrome.substr(0, mid + 1) + next_palindrome.substr(mid, mid + 1);\n    }\n    return parseInt(next_palindrome);\n}\n",
    "    let palindrome = num;\n    let is_palindrome = false;\n    while (!is_palindrome) {\n        palindrome++;\n        is_palindrome = is_palindrome_number(palindrome);\n    }\n    return palindrome;\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substring(0, mid);\n    let right = str.substring(mid + len % 2, len);\n    let next = '';\n    if (left === right) {\n        next = (parseInt(left) + 1).toString();\n        if (next.length > left.length) {\n            return parseInt(next + next.substring(0, next.length - 1).split('').reverse().join(''));\n        }\n        return parseInt(left + next.substring(0, next.length).split('').reverse().join(''));\n    }\n    else {\n        next = (parseInt(left) + 1).toString();\n        if (next.length > left.length) {\n            return parseInt(next + next.substring(0, next.length - 1).split('').reverse().join(''));\n        }\n        return parseInt(left + next.substring(0, next.length).split('').reverse().join(''));\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = (num_len % 2) ? num_str.charAt(Math.floor(num_len / 2)) : '';\n    let right_half = left_half.split('').reverse().join('');\n    let palindrome = left_half + middle + right_half;\n    if (palindrome > num) {\n        return parseInt(palindrome);\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    else {\n        left_half = (parseInt(left_half) + 1).toString();\n        middle = '0';\n    }\n    right_half = left_half.split('').reverse().join('');\n    palindrome = left_half + middle + right_half;\n    return parseInt(palindrome);\n}\n",
    "    let num_str = num.toString();\n    let half_len = Math.floor(num_str.length / 2);\n    let left_half = num_str.substring(0, half_len);\n    let right_half = num_str.substring(num_str.length - half_len);\n    let middle = num_str.substring(half_len, half_len + 1);\n\n    let left_half_int = parseInt(left_half);\n    let right_half_int = parseInt(right_half);\n    let middle_int = parseInt(middle);\n\n    if (left_half_int < right_half_int) {\n        return parseInt(left_half + middle + left_half.split(\"\").reverse().join(\"\"));\n    } else if (left_half_int > right_half_int) {\n        left_half_int++;\n        return parseInt(left_half_int + middle + left_half_int.toString().split(\"\").reverse().join(\"\"));\n    } else {\n        if (middle_int < 9) {\n            middle_int++;\n            return parseInt(left_half + middle_int + left_half.split(\"\").reverse().join(\"\"));\n        } else {\n            left_half_int++;\n            return parseInt(left_half_int + \"0\" + left_half_int.toString().split(\"\").reverse().join(\"\"));\n        }\n    }\n}\n",
    "  let str = num.toString();\n  let len = str.length;\n  let mid = Math.floor(len / 2);\n  let left = str.substr(0, mid);\n  let right = str.substr(mid + len % 2, mid);\n  let next = (parseInt(left) + 1).toString();\n  let next_palindrome = next + next.split(\"\").reverse().join(\"\");\n  return parseInt(next_palindrome);\n}\n",
    "    let num_str: string = num.toString();\n    let num_len: number = num_str.length;\n    let left_half: string = num_str.substr(0, Math.floor(num_len / 2));\n    let middle: string = (num_len % 2) ? num_str[Math.floor(num_len / 2)] : \"\";\n    let right_half: string = left_half.split(\"\").reverse().join(\"\");\n    let palindrome: string = left_half + middle + right_half;\n    if (palindrome > num_str) {\n        return parseInt(palindrome);\n    }\n    let num_left_half: number = parseInt(left_half);\n    let next_num_left_half: number = num_left_half + 1;\n    let next_left_half: string = next_num_left_half.toString();\n    let next_palindrome: string = next_left_half + middle + next_left_half.split(\"\").reverse().join(\"\");\n    return parseInt(next_palindrome);\n}\n",
    "    // TODO\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left = num_str.substring(0, mid);\n    let right = num_str.substring(mid + len % 2, len);\n    let right_rev = right.split(\"\").reverse().join(\"\");\n    if (left < right_rev) {\n        return parseInt(left + num_str[mid] + right_rev);\n    } else {\n        let left_int = parseInt(left);\n        let left_int_plus_1 = left_int + 1;\n        let left_plus_1 = left_int_plus_1.toString();\n        let left_plus_1_rev = left_plus_1.split(\"\").reverse().join(\"\");\n        return parseInt(left_plus_1 + num_str[mid] + left_plus_1_rev);\n    }\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left_smaller = false;\n    let i = mid - 1;\n    let j = len % 2 === 0 ? mid : mid + 1;\n    while (i >= 0 && num_str[i] === num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str = swap_char(num_str, i, j);\n        i--;\n        j++;\n    }\n    if (left_smaller) {\n        let carry = 1;\n        i = mid - 1;\n        if (len % 2 === 1) {\n            num_str = num_str.substring(0, mid) + (parseInt(num_str[mid]) + carry).toString() + num_str.substring(mid + 1);\n            carry = parseInt(num_str[mid]) / 10;\n            num_str = num_str.substring(0, mid) + (parseInt(num_str[mid]) % 10).toString() + num_str.substring(mid + 1);\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            num_str = num_str.substring(0, i) + (parseInt(num_str[i]) + carry).toString() + num_str.substring(i + 1);\n            carry = parseInt(num_str[i]) / 10;\n            num_str = num_str.substring(0, i) + (parseInt(num_str[i]) % 10).toString() + num_str.substring(i + 1);\n            num_str = swap_char(num_str, i, j);\n            i--;\n            j++;\n        }\n    }\n    return parseInt(num_str);\n}\n",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let left_str = num_str.substring(0, left);\n    let right_str = num_str.substring(right);\n    let left_num = parseInt(left_str);\n    let right_num = parseInt(right_str);\n    let is_palindrome = left_num === right_num;\n    if (is_palindrome) {\n        let next_left_num = left_num + 1;\n        let next_left_str = next_left_num.toString();\n        let next_right_str = next_left_str.split('').reverse().join('');\n        let next_num_str = next_left_str + next_right_str;\n        return parseInt(next_num_str);\n    } else {\n        let next_left_str = left_num.toString();\n        let next_right_str = next_left_str.split('').reverse().join('');\n        let next_num_str = next_left_str + next_right_str;\n        return parseInt(next_num_str);\n    }\n}\n\nconsole.log(next_smallest_palindrome(123));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(12321));\nconsole.log(next_smallest_palindrome(123321));\nconsole.log(next_smallest_palindrome(123322));\nconsole.log(next_smallest_palindrome(123323));\nconsole.log(next_smallest_palindrome(123324));\nconsole.log(next_smallest_palindrome(123325));\nconsole.log(next_smallest_palindrome(123326));\nconsole.log(next_smallest_palindrome(123327));\nconsole.log(next_smallest_palindrome(123328",
    "  let num_str = num.toString();\n  let left = num_str.substring(0, Math.floor(num_str.length / 2));\n  let right = num_str.substring(Math.ceil(num_str.length / 2));\n  let left_num = parseInt(left);\n  let right_num = parseInt(right);\n  let left_num_str = left_num.toString();\n  let right_num_str = right_num.toString();\n  let left_num_str_rev = left_num_str.split(\"\").reverse().join(\"\");\n  let right_num_str_rev = right_num_str.split(\"\").reverse().join(\"\");\n  let left_num_rev = parseInt(left_num_str_rev);\n  let right_num_rev = parseInt(right_num_str_rev);\n  let left_num_rev_str = left_num_rev.toString();\n  let right_num_rev_str = right_num_rev.toString();\n  let left_num_rev_str_rev = left_num_rev_str.split(\"\").reverse().join(\"\");\n  let right_num_rev_str_rev = right_num_rev_str.split(\"\").reverse().join(\"\");\n  let left_num_rev_rev = parseInt(left_num_rev_str_rev);\n  let right_num_rev_rev = parseInt(right_num_rev_str_rev);\n  let left_num_rev_rev_str = left_num_rev_rev.toString();\n  let right_num_rev_rev_str = right_num_rev_rev.toString();\n  let left_num_rev_rev_str_rev = left_num_rev_rev_str.split(\"\").reverse().join(\"\");\n  let right_num_rev_rev_str_rev = right_num_rev_rev_str.split(\"\").reverse().join(\"\");\n  let left_num_rev_rev_rev = parseInt(left_num_rev_rev_str_rev);\n  let right_num_rev_rev_rev = parseInt",
    "    let num_str = num.toString();\n    let len = num_str.length;\n    let mid = Math.floor(len / 2);\n    let left = num_str.substring(0, mid);\n    let right = num_str.substring(mid + len % 2, len);\n    let right_rev = right.split(\"\").reverse().join(\"\");\n    if (left < right_rev) {\n        return parseInt(left + (len % 2 == 1 ? num_str[mid] : \"\") + right_rev);\n    } else {\n        let left_int = parseInt(left);\n        let left_int_plus_one = left_int + 1;\n        let left_int_plus_one_str = left_int_plus_one.toString();\n        let left_int_plus_one_str_rev = left_int_plus_one_str.split(\"\").reverse().join(\"\");\n        return parseInt(left_int_plus_one_str + (len % 2 == 1 ? \"0\" : \"\") + left_int_plus_one_str_rev);\n    }\n}\n",
    "    let num_str = num.toString();\n    let num_str_len = num_str.length;\n    let num_str_len_half = Math.floor(num_str_len / 2);\n    let num_str_len_half_floor = Math.floor(num_str_len_half);\n    let num_str_len_half_ceil = Math.ceil(num_str_len_half);\n    let num_str_len_half_ceil_minus_1 = num_str_len_half_ceil - 1;\n    let num_str_len_half_ceil_minus_2 = num_str_len_half_ceil - 2;\n    let num_str_len_half_ceil_minus_3 = num_str_len_half_ceil - 3;\n    let num_str_len_half_ceil_minus_4 = num_str_len_half_ceil - 4;\n    let num_str_len_half_ceil_minus_5 = num_str_len_half_ceil - 5;\n    let num_str_len_half_ceil_minus_6 = num_str_len_half_ceil - 6;\n    let num_str_len_half_ceil_minus_7 = num_str_len_half_ceil - 7;\n    let num_str_len_half_ceil_minus_8 = num_str_len_half_ceil - 8;\n    let num_str_len_half_ceil_minus_9 = num_str_len_half_ceil - 9;\n    let num_str_len_half_ceil_minus_10 = num_str_len_half_ceil - 10;\n    let num_str_len_half_ceil_minus_11 = num_str_len_half_ceil - 11;\n    let num_str_len_half_ceil_minus_12 = num_str_len_half_ceil - 12;\n    let num_str_len_half_ceil_minus_13 = num_str_len_half_ceil - 13;\n    let num_str_",
    "    let str = num.toString();\n    let len = str.length;\n    let left = Math.floor(len / 2);\n    let right = len % 2 === 0 ? left : left + 1;\n    let increment = false;\n    while (left >= 0) {\n        if (str[left] === str[right]) {\n            left--;\n            right++;\n            continue;\n        }\n        if (str[left] < str[right]) {\n            increment = true;\n            break;\n        }\n        if (str[left] > str[right]) {\n            break;\n        }\n    }\n    if (increment) {\n        let i = Math.floor(len / 2);\n        let j = len % 2 === 0 ? i : i + 1;\n        let carry = 1;\n        while (i >= 0) {\n            let sum = Number(str[i]) + carry;\n            str = str.substring(0, i) + sum + str.substring(j);\n            if (sum > 9) {\n                carry = 1;\n            } else {\n                carry = 0;\n            }\n            i--;\n            j++;\n        }\n    }\n    left = Math.floor(len / 2);\n    right = len % 2 === 0 ? left : left + 1;\n    while (left >= 0) {\n        str = str.substring(0, left) + str[right] + str.substring(left + 1);\n        left--;\n        right++;\n    }\n    return Number(str);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length, num_len);\n    let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n    let next_palindrome = left_half + middle + right_half_rev;\n    if (next_palindrome > num_str) {\n        return parseInt(next_palindrome);\n    }\n    if (middle) {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    let one_more = false;\n    left_half = (parseInt(left_half) + 1).toString();\n    if (left_half.length > num_len / 2) {\n        left_half = left_half.substring(1);\n        one_more = true;\n    }\n    right_half_rev = left_half.split(\"\").reverse().join(\"\");\n    next_palindrome = left_half + middle + right_half_rev;\n    if (one_more) {\n        next_palindrome = \"1\" + next_palindrome;\n    }\n    return parseInt(next_palindrome);\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid_idx = Math.floor(num_len / 2);\n  let left_half = num_str.slice(0, mid_idx);\n  let right_half = num_str.slice(mid_idx + num_len % 2, num_len);\n  let left_half_rev = left_half.split('').reverse().join('');\n  let next_palindrome = left_half + num_str[mid_idx] + left_half_rev;\n  if (next_palindrome > num_str) {\n    return parseInt(next_palindrome);\n  } else {\n    let left_half_int = parseInt(left_half);\n    let next_left_half_int = left_half_int + 1;\n    let next_left_half = next_left_half_int.toString();\n    let next_left_half_len = next_left_half.length;\n    let next_left_half_rev = next_left_half.split('').reverse().join('');\n    return parseInt(next_left_half + '0'.repeat(num_len - next_left_half_len - 1) + next_left_half_rev);\n  }\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let left_half = num_str.substring(0, Math.floor(num_len / 2));\n    let middle = num_len % 2 === 1 ? num_str.substring(Math.floor(num_len / 2), Math.floor(num_len / 2) + 1) : \"\";\n    let right_half = num_str.substring(Math.floor(num_len / 2) + middle.length, num_len);\n    let right_half_rev = right_half.split(\"\").reverse().join(\"\");\n    let next_palindrome = left_half + middle + right_half_rev;\n    if (next_palindrome > num_str) {\n        return parseInt(next_palindrome);\n    }\n    if (middle === \"9\") {\n        middle = \"\";\n        left_half = (parseInt(left_half) + 1).toString();\n    } else {\n        middle = (parseInt(middle) + 1).toString();\n    }\n    right_half = left_half.substring(0, left_half.length - middle.length);\n    right_half_rev = right_half.split(\"\").reverse().join(\"\");\n    next_palindrome = left_half + middle + right_half_rev;\n    return parseInt(next_palindrome);\n}\n",
    "    let num_str = num.toString();\n    let num_len = num_str.length;\n    let mid = Math.floor(num_len / 2);\n    let left_half = num_str.substring(0, mid);\n    let right_half = num_str.substring(mid + num_len % 2, num_len);\n    let next_palindrome = parseInt(left_half + (num_len % 2 == 1 ? num_str[mid] : '') + left_half.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (num_len % 2 == 1) {\n        if (num_str[mid] != '9') {\n            return parseInt(left_half + (parseInt(num_str[mid]) + 1) + left_half.split('').reverse().join(''));\n        }\n        left_half = (parseInt(left_half) + 1).toString();\n        mid = Math.floor(left_half.length / 2);\n        right_half = left_half.substring(mid + left_half.length % 2, left_half.length);\n        return parseInt(left_half + (left_half.length % 2 == 1 ? left_half[mid] : '') + right_half.split('').reverse().join(''));\n    }\n    left_half = (parseInt(left_half) + 1).toString();\n    mid = Math.floor(left_half.length / 2);\n    right_half = left_half.substring(mid + left_half.length % 2, left_half.length);\n    return parseInt(left_half + (left_half.length % 2 == 1 ? left_half[mid] : '') + right_half.split('').reverse().join(''));\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let left_half = num_str.substring(0, Math.floor(num_len / 2));\n  let middle = num_len % 2 === 1 ? num_str[Math.floor(num_len / 2)] : \"\";\n  let right_half = left_half.split(\"\").reverse().join(\"\");\n  let palindrome = left_half + middle + right_half;\n  if (palindrome > num_str) {\n    return parseInt(palindrome);\n  }\n  let left_half_int = parseInt(left_half);\n  let middle_int = parseInt(middle);\n  let left_half_int_plus_1 = left_half_int + 1;\n  let left_half_int_plus_1_str = left_half_int_plus_1.toString();\n  let left_half_int_plus_1_str_len = left_half_int_plus_1_str.length;\n  let left_half_int_plus_1_str_len_diff =\n    left_half_int_plus_1_str_len - left_half.length;\n  if (left_half_int_plus_1_str_len_diff > 0) {\n    middle_int = parseInt(\n      middle_int.toString() +\n        left_half_int_plus_1_str[0] +\n        left_half_int_plus_1_str[1]\n    );\n    left_half_int_plus_1_str = left_half_int_plus_1_str.substring(\n      left_half_int_plus_1_str_len_diff\n    );\n  }\n  left_half = left_half_int_plus_1_str;\n  middle = middle_int.toString();\n  right_half = left_half.split(\"\").reverse().join(\"\");\n  palindrome = left_half + middle + right_half;\n  return parseInt(palindrome);\n}\n",
    "    let str = num.toString();\n    let len = str.length;\n    let mid = Math.floor(len / 2);\n    let left = str.substr(0, mid);\n    let right = str.substr(mid + len % 2, mid);\n    let next_palindrome = Number(left + str[mid] + right.split('').reverse().join(''));\n    if (next_palindrome > num) {\n        return next_palindrome;\n    }\n    if (str[mid] < '9') {\n        str = left + (Number(str[mid]) + 1) + right;\n        return Number(str + str.split('').reverse().join(''));\n    }\n    let carry = 1;\n    let left_arr = left.split('');\n    for (let i = mid - 1; i >= 0; i--) {\n        let sum = Number(left_arr[i]) + carry;\n        if (sum > 9) {\n            carry = 1;\n            left_arr[i] = '0';\n        } else {\n            left_arr[i] = sum.toString();\n            carry = 0;\n            break;\n        }\n    }\n    if (carry === 1) {\n        left_arr.unshift('1');\n    }\n    return Number(left_arr.join('') + left_arr.slice(0, -1).reverse().join(''));\n}\n",
    "  let num_str = num.toString();\n  let num_len = num_str.length;\n  let mid = Math.floor(num_len / 2);\n  let left = num_str.substring(0, mid);\n  let right = num_str.substring(mid + num_len % 2, num_len);\n  let right_rev = right.split(\"\").reverse().join(\"\");\n  if (left < right_rev) {\n    return parseInt(left + num_str[mid] + right_rev);\n  }\n  let carry = 1;\n  let left_arr = left.split(\"\");\n  for (let i = mid - 1; i >= 0; i--) {\n    let sum = parseInt(left_arr[i]) + carry;\n    if (sum > 9) {\n      carry = 1;\n      left_arr[i] = \"0\";\n    } else {\n      left_arr[i] = sum.toString();\n      carry = 0;\n      break;\n    }\n  }\n  left = left_arr.join(\"\");\n  if (carry === 1) {\n    left = \"1\" + left;\n  }\n  return parseInt(left + num_str[mid] + left.split(\"\").reverse().join(\"\"));\n}\n\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(1213));\nconsole.log(next_smallest_palindrome(99999));\nconsole.log(next_smallest_palindrome(999999));\nconsole.log(next_smallest_palindrome(9999999));\n",
    "  let num_str = num.toString();\n  let len = num_str.length;\n  let half_len = Math.floor(len / 2);\n  let left_half = num_str.substring(0, half_len);\n  let middle = num_str.substring(half_len, half_len + 1);\n  let right_half = num_str.substring(half_len + 1);\n  let right_half_reversed = right_half.split('').reverse().join('');\n  let left_half_int = parseInt(left_half);\n  let right_half_int = parseInt(right_half);\n  let right_half_reversed_int = parseInt(right_half_reversed);\n  let middle_int = parseInt(middle);\n  let new_num = 0;\n  if (right_half_int < right_half_reversed_int) {\n    new_num = parseInt(left_half + middle + right_half_reversed);\n  } else if (right_half_int > right_half_reversed_int) {\n    new_num = parseInt(left_half + middle + right_half_reversed);\n  } else if (right_half_int === right_half_reversed_int) {\n    if (middle_int < 9) {\n      middle_int += 1;\n      new_num = parseInt(left_half + middle_int + right_half_reversed);\n    } else if (middle_int === 9) {\n      middle_int = 0;\n      left_half_int += 1;\n      new_num = parseInt(left_half_int + middle_int + right_half_reversed);\n    }\n  }\n  return new_num;\n}\n\nconsole.log(next_smallest_palindrome(99));\nconsole.log(next_smallest_palindrome(1234));\nconsole.log(next_smallest_palindrome(1221));\nconsole.log(next_smallest_palindrome(1233));\nconsole.log(next_smallest_palind"
  ]
}
{
  "name": "mbpp_162_sum_series",
  "language": "ts",
  "prompt": "//Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nfunction sum_series(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_series;\n  assert.deepEqual(candidate(6),12);\n  assert.deepEqual(candidate(10),30);\n  assert.deepEqual(candidate(9),25);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\nconsole.log(sum_series(6));\n",
    "    let sum = 0;\n    for (let i = 0; i < n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i < n; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\nconsole.log(sum_series(6));\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i <= n / 2; i++) {\n        sum += n - 2 * i;\n    }\n    return sum;\n}\n"
  ]
}
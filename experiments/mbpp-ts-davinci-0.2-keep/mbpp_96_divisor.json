{
  "name": "mbpp_96_divisor",
  "language": "ts",
  "prompt": "//Write a python function to find the number of divisors of a given integer.\nfunction divisor(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisor;\n  assert.deepEqual(candidate(15),4);\n  assert.deepEqual(candidate(12),6);\n  assert.deepEqual(candidate(9),3);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let divisor = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            divisor++;\n        }\n    }\n    return divisor;\n}\nconsole.log(divisor(10));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(divisor(12));\n",
    "    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(10));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let divisorCount = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            divisorCount++;\n        }\n    }\n    return divisorCount;\n}\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let divisors: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            divisors++;\n        }\n    }\n    return divisors;\n}\n\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let divisors: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            divisors++;\n        }\n    }\n    return divisors;\n}\nconsole.log(divisor(10));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(divisor(10));\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(divisor(12));\n"
  ]
}
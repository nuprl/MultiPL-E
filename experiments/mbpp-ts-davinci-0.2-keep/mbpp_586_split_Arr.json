{
  "name": "mbpp_586_split_Arr",
  "language": "ts",
  "prompt": "//Write a python function to split a list at the nth eelment and add the first part to the end.\nfunction split_Arr(l: number[], n: number): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_586_split_Arr.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = split_Arr;\n  assert.deepEqual(candidate([12, 10, 5, 6, 52, 36], 2),[5, 6, 52, 36, 12, 10]);\n  assert.deepEqual(candidate([1, 2, 3, 4], 1),[2, 3, 4, 1]);\n  assert.deepEqual(candidate([0, 1, 2, 3, 4, 5, 6, 7], 3),[3, 4, 5, 6, 7, 0, 1, 2]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (i >= n) {\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.slice(n);\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    let arr3 = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    return l.slice(n).concat(l.slice(0, n));\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let newArr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        newArr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        newArr.push(l[i]);\n    }\n    return newArr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let newArr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        newArr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        newArr.push(l[i]);\n    }\n    return newArr;\n}\n",
    "    let newArr = l.splice(n);\n    return newArr.concat(l);\n}\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (i >= n) {\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    let arr1 = [];\n    let arr2 = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr1.push(l[i]);\n        }\n        else {\n            arr2.push(l[i]);\n        }\n    }\n    arr = arr2.concat(arr1);\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    let new_list = second_part.concat(first_part);\n    return new_list;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    if (n < 0) {\n        return l;\n    }\n    else {\n        let first = l.slice(0, n);\n        let second = l.slice(n);\n        return second.concat(first);\n    }\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let newArr = l.splice(n);\n    return newArr.concat(l);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first: number[] = l.slice(0, n);\n    let second: number[] = l.slice(n);\n    return second.concat(first);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first: number[] = l.splice(0, n);\n    let second: number[] = l;\n    let result: number[] = second.concat(first);\n    return result;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            arr.push(l[i]);\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    let result = secondPart.concat(firstPart);\n    return result;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n);\n    let arr3: number[] = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    return l.concat(arr);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    let arr3 = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr = l.splice(0, n);\n    return l.concat(arr);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n, l.length);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr1: number[] = [];\n    let arr2: number[] = [];\n    let arr3: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr1.push(l[i]);\n        } else {\n            arr2.push(l[i]);\n        }\n    }\n    arr3 = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    let arr3 = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n    for (let i = 0; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr1.push(arr[i]);\n    }\n    for (let i = n; i < arr.length; i++) {\n        arr2.push(arr[i]);\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        arr3.push(arr1[i]);\n    }\n    for (let i = 0; i < arr2.length; i++) {\n        arr3.push(arr2[i]);\n    }\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    let result = secondPart.concat(firstPart);\n    return result;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n, l.length);\n    let result = second.concat(first);\n    return result;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr1.push(l[i]);\n        }\n        else {\n            arr2.push(l[i]);\n        }\n    }\n    arr = arr2.concat(arr1);\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (i >= n) {\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n, l.length);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    return [...l.slice(n), ...l.slice(0, n)];\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    let result = second.concat(first);\n    return result;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            arr.push(l[i]);\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let arr = l.splice(n);\n    return arr.concat(l);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    return l.slice(n).concat(l.slice(0, n));\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.slice(n);\n    let arr2 = l.slice(0, n);\n    return arr.concat(arr2);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart: number[] = l.slice(0, n);\n    let secondPart: number[] = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    let arr1 = [];\n    let arr2 = [];\n    for (let i = 0; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr1.push(arr[i]);\n    }\n    for (let i = n; i < arr.length; i++) {\n        arr2.push(arr[i]);\n    }\n    let result = arr2.concat(arr1);\n    return result;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr1.push(l[i]);\n        }\n        else {\n            arr2.push(l[i]);\n        }\n    }\n    arr = arr2.concat(arr1);\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr = l.slice(n);\n    let arr2 = l.slice(0, n);\n    return arr.concat(arr2);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\n",
    "    let firstPart: number[] = l.slice(0, n);\n    let secondPart: number[] = l.slice(n);\n    let result: number[] = secondPart.concat(firstPart);\n    return result;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n);\n    let arr3: number[] = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        } else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first: number[] = l.slice(0, n);\n    let second: number[] = l.slice(n);\n    return second.concat(first);\n}\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let newArr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            newArr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "  let arr = [];\n  for (let i = n; i < l.length; i++) {\n    arr.push(l[i]);\n  }\n  for (let i = 0; i < n; i++) {\n    arr.push(l[i]);\n  }\n  return arr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (i >= n) {\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    let newArr = secondPart.concat(firstPart);\n    return newArr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let first = l.splice(0, n);\n    let second = l.splice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart: number[] = l.slice(0, n);\n    let secondPart: number[] = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    let arr3: number[] = [];\n    let arr4: number[] = [];\n    let arr5: number[] = [];\n    let arr6: number[] = [];\n    let arr7: number[] = [];\n    let arr8: number[] = [];\n    let arr9: number[] = [];\n    let arr10: number[] = [];\n    let arr11: number[] = [];\n    let arr12: number[] = [];\n    let arr13: number[] = [];\n    let arr14: number[] = [];\n    let arr15: number[] = [];\n    let arr16: number[] = [];\n    let arr17: number[] = [];\n    let arr18: number[] = [];\n    let arr19: number[] = [];\n    let arr20: number[] = [];\n    let arr21: number[] = [];\n    let arr22: number[] = [];\n    let arr23: number[] = [];\n    let arr24: number[] = [];\n    let arr25: number[] = [];\n    let arr26: number[] = [];\n    let arr27: number[] = [];\n    let arr28: number[] = [];\n    let arr29: number[] = [];\n    let arr30: number[] = [];\n    let arr31: number[] = [];\n    let arr32: number[] = [];\n    let arr33: number[] = [];\n    let arr34: number[] = [];\n    let arr35: number[] = [];\n    let arr36: number[] = [];\n    let arr37: number[] = [];\n    let arr38: number[] = [];\n    let arr39: number[] = [];\n    let arr40: number[] = [];\n    let arr41: number[] = [];\n    let arr42: number[] = [];\n    let arr43: number[] = [];\n    let arr44: number[] = [];\n    let arr45: number[] = [];\n    let arr46: number[] = [];\n    let arr47: number[] = [];\n    let arr48: number[] = [];\n    let arr49: number[] = [];\n    let arr50: number[] = [];\n    let",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\n",
    "    let arr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n, l.length);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart: number[] = l.slice(0, n);\n    let secondPart: number[] = l.slice(n);\n    let newArr: number[] = secondPart.concat(firstPart);\n    return newArr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (i >= n) {\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let newArr: number[] = [];\n    let i: number;\n    for (i = n; i < l.length; i++) {\n        newArr.push(l[i]);\n    }\n    for (i = 0; i < n; i++) {\n        newArr.push(l[i]);\n    }\n    return newArr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let l1 = l.slice(0, n);\n    let l2 = l.slice(n);\n    return l2.concat(l1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.slice(n);\n    let arr1 = l.slice(0, n);\n    arr = arr.concat(arr1);\n    return arr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.slice(n);\n    let arr2 = l.slice(0, n);\n    return arr.concat(arr2);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart: number[] = l.slice(0, n);\n    let secondPart: number[] = l.slice(n);\n    let newArr: number[] = secondPart.concat(firstPart);\n    return newArr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart: number[] = l.slice(0, n);\n    let secondPart: number[] = l.slice(n);\n    let result: number[] = secondPart.concat(firstPart);\n    return result;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            arr1.push(l[i]);\n        }\n    }\n    return arr1.concat(arr);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = n; i < l.length; i++) {\n        arr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        arr.push(l[i]);\n    }\n    return arr;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr1.push(l[i]);\n        }\n        else {\n            arr2.push(l[i]);\n        }\n    }\n    arr = arr2.concat(arr1);\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.slice(n);\n    let arr1 = l.slice(0, n);\n    return arr.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    let newArr = secondPart.concat(firstPart);\n    return newArr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let l1: number[] = l.slice(0, n);\n    let l2: number[] = l.slice(n);\n    let l3: number[] = l2.concat(l1);\n    return l3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n, l.length);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr1.push(l[i]);\n        }\n        else {\n            arr2.push(l[i]);\n        }\n    }\n    arr = arr2.concat(arr1);\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr2: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            arr2.push(l[i]);\n        }\n    }\n    return arr2.concat(arr);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let newArr: number[] = [];\n    for (let i = n; i < l.length; i++) {\n        newArr.push(l[i]);\n    }\n    for (let i = 0; i < n; i++) {\n        newArr.push(l[i]);\n    }\n    return newArr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n);\n    let arr3: number[] = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            l.push(l[i]);\n        }\n    }\n    for (let i = 0; i < n; i++) {\n        l.shift();\n    }\n    return l;\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let first: number[] = l.slice(0, n);\n    let second: number[] = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    return [...l.slice(n), ...l.slice(0, n)];\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(n);\n    return arr.concat(l);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (i >= n) {\n            arr.push(l[i]);\n        }\n    }\n    return arr;\n}\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let firstPart = l.slice(0, n);\n    let secondPart = l.slice(n);\n    return secondPart.concat(firstPart);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr = l.splice(0, n);\n    return l.concat(arr);\n}\n",
    "    return l.slice(n).concat(l.slice(0, n));\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5], 2));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = l.splice(0, n);\n    l.push(...arr);\n    return l;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    let arr3: number[] = [];\n    arr = l;\n    arr1 = arr.slice(0, n);\n    arr2 = arr.slice(n, arr.length);\n    arr3 = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first = l.slice(0, n);\n    let second = l.slice(n);\n    return second.concat(first);\n}\n",
    "    let arr1 = l.slice(0, n);\n    let arr2 = l.slice(n);\n    return arr2.concat(arr1);\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let first_part = l.slice(0, n);\n    let second_part = l.slice(n);\n    return second_part.concat(first_part);\n}\n\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n",
    "    let arr = [];\n    for (let i = 0; i < l.length; i++) {\n        if (i < n) {\n            arr.push(l[i]);\n        }\n        else {\n            arr.push(l[i]);\n            arr.push(l[i - n]);\n        }\n    }\n    return arr;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 2));\n",
    "    let arr1: number[] = l.slice(0, n);\n    let arr2: number[] = l.slice(n);\n    let arr3: number[] = arr2.concat(arr1);\n    return arr3;\n}\nconsole.log(split_Arr([1, 2, 3, 4, 5, 6], 3));\n"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "ts",
  "prompt": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1pkm3m_0.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1pkm3m_0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "../../../../tmp/tmpn5a6zb49.ts(35,416): error TS1002: Unterminated string literal.\n../../../../tmp/tmpn5a6zb49.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpn5a6zb49.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff: number = 0;\n  let count_0: number = 0;\n  let count_1: number = 0;\n  let n: number = string.length;\n  for (let i: number = 0; i < n; i++) {\n    if (string[i] == \"0\") {\n      count_0 += 1;\n    } else {\n      count_1 += 1;\n    }\n    max_diff = Math.max(max_diff, count_0 - count_1);\n    if (count_1 > count_0) {\n      count_0 = 0;\n      count_1 = 0;\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "../../../../tmp/tmpj6t7jdjk.ts(23,672): error TS1002: Unterminated string literal.\n../../../../tmp/tmpj6t7jdjk.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmpj6t7jdjk.ts(24,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"100110111\"));\nconsole.log(find_length(\"01110111\"));\nconsole.log(find_length(\"0111011101\"));\nconsole.log(find_length(\"011101110101\"));\nconsole.log(find_length(\"01110111010101\"));\nconsole.log(find_length(\"0111011101010101\"));\nconsole.log(find_length(\"011101110101010101\"));\nconsole.log(find_length(\"01110111010101010101\"));\nconsole.log(find_length(\"0111011101010101010101\"));\nconsole.log(find_length(\"011101110101010101010101\"));\nconsole.log(find_length(\"01110111010101010101010101\"));\nconsole.log(find_length(\"0111011101010101010101010101\"));\nconsole.log(find_length(\"011101110101010101010101010101\"));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "6\n2\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6dq8mxor.js:49:12)\n    at Object.<anonymous> (/tmp/tmp6dq8mxor.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('1001101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpimd6fvhd.js:36:12)\n    at Object.<anonymous> (/tmp/tmpimd6fvhd.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101100\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "6\n2\n6\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpca45jrqc.js:40:12)\n    at Object.<anonymous> (/tmp/tmpca45jrqc.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_length: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        }\n        else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        }\n        else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        }\n        else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        }\n        else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "../../../../tmp/tmpevwx139s.ts(44,286): error TS1002: Unterminated string literal.\n../../../../tmp/tmpevwx139s.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpevwx139s.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count++;\n        } else {\n            count--;\n        }\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('1001010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff: number = 0;\n  let count_0: number = 0;\n  let count_1: number = 0;\n  for (let i: number = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_diff = Math.max(max_diff, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i: number = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_diff = Math.max(max_diff, count_0 + count_1);\n    }\n  }\n  return max_diff;\n}\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "../../../../tmp/tmp0rksi5oy.ts(32,482): error TS1002: Unterminated string literal.\n../../../../tmp/tmp0rksi5oy.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmp0rksi5oy.ts(33,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_1 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7tgi0foc.js:37:12)\n    at Object.<anonymous> (/tmp/tmp7tgi0foc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let zeros = 0;\n  let ones = 0;\n  let max_diff = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10011010001\"));\nconsole.log(find_length(\"011100010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnmp0z96d.js:22:12)\n    at Object.<anonymous> (/tmp/tmpnmp0z96d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            count = count_0 + count_1;\n            if (count > max_length) {\n                max_length = count;\n            }\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "6\n2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuzb3c35v.js:29:12)\n    at Object.<anonymous> (/tmp/tmpuzb3c35v.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    let diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        diff = zero_count - one_count;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_diff) {\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10111'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "2\n3\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbx6mzygg.js:30:12)\n    at Object.<anonymous> (/tmp/tmpbx6mzygg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"110111\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"011100\"));\nconsole.log(find_length(\"010111\"));\nconsole.log(find_length(\"01010101\"));\nconsole.log(find_length(\"11111111\"));\nconsole.log(find_length(\"11011101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"010101010101\"));\nconsole.log(find_length(\"01010101010101\"));\nconsole.log(find_length(\"0101010101010101\"));\nconsole.log(find_length(\"010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101\"));\nconsole.log(find_length(\"0101010101010101010101\"));\nconsole.log(find_length(\"010101010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101010101\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "0\n0\n6\n4\n8\n0\n2\n10\n12\n14\n16\n18\n20\n22\n24\n26\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppvy7ztcq.js:51:12)\n    at Object.<anonymous> (/tmp/tmppvy7ztcq.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('1101010101'));\nconsole.log(find_length('1111010101'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('010101010101'));\nconsole.log(find_length('01010101010101'));\nconsole.log(find_length('0101010101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "8\n6\n10\n12\n14\n16\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpy8hoxnb_.js:41:12)\n    at Object.<anonymous> (/tmp/tmpy8hoxnb_.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1pkm3m_0.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1pkm3m_0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpklvur70q.js:21:12)\n    at Object.<anonymous> (/tmp/tmpklvur70q.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let n = string.length;\n    for (let i = 0; i < n; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, 2 * count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = n - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, 2 * count_0);\n        }\n    }\n    return max_diff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnxbi6ipq.js:36:12)\n    at Object.<anonymous> (/tmp/tmpnxbi6ipq.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        count++;\n        if (zeros == ones) {\n            max = Math.max(max, count);\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"010001\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "4\n2\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_mevfol5.js:27:12)\n    at Object.<anonymous> (/tmp/tmp_mevfol5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "../../../../tmp/tmp2l83bspd.ts(31,552): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2l83bspd.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmp2l83bspd.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "4\n4\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppqs18iue.js:38:12)\n    at Object.<anonymous> (/tmp/tmppqs18iue.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('0001'));\nconsole.log(find_length('01'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "3\n3\n1\n3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpz9lbfxfo.js:25:12)\n    at Object.<anonymous> (/tmp/tmpz9lbfxfo.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        count = count_0 - count_1;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\nconsole.log(find_length('10010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprb_6dom2.js:28:12)\n    at Object.<anonymous> (/tmp/tmprb_6dom2.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"100110001\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "../../../../tmp/tmp3azex9zt.ts(18,770): error TS1002: Unterminated string literal.\n../../../../tmp/tmp3azex9zt.ts(19,1): error TS1005: ',' expected.\n../../../../tmp/tmp3azex9zt.ts(19,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let zero_count = 0;\n  let one_count = 0;\n  let max_diff = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    if (zero_count == one_count) {\n      max_diff = Math.max(max_diff, zero_count * 2);\n    } else if (zero_count > one_count) {\n      zero_count = 0;\n      one_count = 0;\n    }\n  }\n  zero_count = 0;\n  one_count = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] == \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    if (zero_count == one_count) {\n      max_diff = Math.max(max_diff, zero_count * 2);\n    } else if (zero_count < one_count) {\n      zero_count = 0;\n      one_count = 0;\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10011010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpg05j96mr.js:44:12)\n    at Object.<anonymous> (/tmp/tmpg05j96mr.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n    let n: number = string.length;\n    for (let i: number = 0; i < n; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i: number = n - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "../../../../tmp/tmp5keonjxt.ts(33,506): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5keonjxt.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmp5keonjxt.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "../../../../tmp/tmp8lrpa3_6.ts(32,504): error TS1002: Unterminated string literal.\n../../../../tmp/tmp8lrpa3_6.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmp8lrpa3_6.ts(33,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero * 2);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10001010101'));\nconsole.log(find_length('010101010101'));\nconsole.log(find_length('110101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "8\n12\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1bkhnhjx.js:38:12)\n    at Object.<anonymous> (/tmp/tmp1bkhnhjx.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == \"0\") {\n            zero++;\n        } else {\n            one++;\n        }\n        if (zero == one) {\n            max = Math.max(max, i + 1);\n        } else if (zero > one) {\n            zero = 0;\n            one = 0;\n            i = i - count;\n            count = 0;\n        } else {\n            count++;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"01001\"));\nconsole.log(find_length(\"010001\"));\nconsole.log(find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "../../../../tmp/tmp7vzg45zs.ts(31,608): error TS1002: Unterminated string literal.\n../../../../tmp/tmp7vzg45zs.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmp7vzg45zs.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero++;\n        } else {\n            one++;\n        }\n        count++;\n        if (count == string.length) {\n            if (zero > one) {\n                max = zero - one;\n            } else {\n                max = one - zero;\n            }\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "0\n4\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4be396n7.js:32:12)\n    at Object.<anonymous> (/tmp/tmp4be396n7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "8\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpn0vm4otd.js:38:12)\n    at Object.<anonymous> (/tmp/tmpn0vm4otd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count = 0;\n    let n = string.length;\n    for (let i = 0; i < n; i++) {\n        if (string[i] == '0') {\n            count--;\n        } else {\n            count++;\n        }\n        if (count == 0) {\n            max_diff = i + 1;\n        } else if (count < 0) {\n            count = 0;\n        }\n    }\n    count = 0;\n    for (let i = n - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count--;\n        } else {\n            count++;\n        }\n        if (count == 0) {\n            max_diff = Math.max(max_diff, n - i);\n        } else if (count > 0) {\n            count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10111'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "6\n5\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm11jyzj6.js:43:12)\n    at Object.<anonymous> (/tmp/tmpm11jyzj6.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbzvk5c2o.js:22:12)\n    at Object.<anonymous> (/tmp/tmpbzvk5c2o.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpddgp4tat.js:37:12)\n    at Object.<anonymous> (/tmp/tmpddgp4tat.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111100010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "8\n12\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp32fryvi6.js:24:12)\n    at Object.<anonymous> (/tmp/tmp32fryvi6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp16qoklha.js:21:12)\n    at Object.<anonymous> (/tmp/tmp16qoklha.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0110000'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('0001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "3\n3\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpovjxted2.js:24:12)\n    at Object.<anonymous> (/tmp/tmpovjxted2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    if (count_zero === count_one) {\n      max_length = Math.max(max_length, count_zero + count_one);\n    }\n  }\n  count_zero = 0;\n  count_one = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    if (count_zero === count_one) {\n      max_length = Math.max(max_length, count_zero + count_one);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "6\n2\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpz9m37tic.js:38:12)\n    at Object.<anonymous> (/tmp/tmpz9m37tic.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < string.length; i++) {\n        for (j = i; j < string.length; j++) {\n            if (string[j] == '0') {\n                count_0++;\n            } else {\n                count_1++;\n            }\n            if (count_0 == count_1) {\n                max_diff = Math.max(max_diff, j - i + 1);\n            }\n        }\n        count_0 = 0;\n        count_1 = 0;\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10011010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpojl4jwwq.js:29:12)\n    at Object.<anonymous> (/tmp/tmpojl4jwwq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpaf1nuhv6.js:23:12)\n    at Object.<anonymous> (/tmp/tmpaf1nuhv6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10001010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp36mrrzd_.js:22:12)\n    at Object.<anonymous> (/tmp/tmp36mrrzd_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpt2zq2a49.js:24:12)\n    at Object.<anonymous> (/tmp/tmpt2zq2a49.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (one_count > zero_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('10001010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpj69xrpyw.js:44:12)\n    at Object.<anonymous> (/tmp/tmpj69xrpyw.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0: number = 0;\n    let count_1: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"010111\"));\nconsole.log(find_length(\"110101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "6\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8mefl55z.js:38:12)\n    at Object.<anonymous> (/tmp/tmp8mefl55z.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        } else if (count_0 > count_1) {\n            count_0 = 0;\n            count_1 = 0;\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        } else if (count_0 < count_1) {\n            count_0 = 0;\n            count_1 = 0;\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('111101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\nconsole.log(find_length('0111010101'));\nconsole.log(find_length('011101010101'));\nconsole.log(find_length('01110101010101'));\nconsole.log(find_length('0111010101010101'));\nconsole.log(find_length('011101010101010101'));\nconsole.log(find_length('01110101010101010101'));\nconsole.log(find_length('0111010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123061,
      "stdout": "../../../../tmp/tmp1q7e5hmf.ts(47,48): error TS1002: Unterminated string literal.\n../../../../tmp/tmp1q7e5hmf.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmp1q7e5hmf.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_length = 0;\n    let diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        diff = zeros - ones;\n        if (diff == 0) {\n            max_length = i + 1;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"11110000111\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"100\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "8\n8\n4\n2\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnvgd99m7.js:29:12)\n    at Object.<anonymous> (/tmp/tmpnvgd99m7.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "2\n0\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsv78sk65.js:24:12)\n    at Object.<anonymous> (/tmp/tmpsv78sk65.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"01010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\nconsole.log(find_length(\"0001\"));\nconsole.log(find_length(\"101\"));\nconsole.log(find_length(\"11\"));\nconsole.log(find_length(\"01\"));\nconsole.log(find_length(\"0\"));\nconsole.log(find_length(\"1\"));\nconsole.log(find_length(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "6\n8\n8\n0\n0\n2\n2\n0\n2\n0\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpb5cmzj_o.js:47:12)\n    at Object.<anonymous> (/tmp/tmpb5cmzj_o.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "1\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpaw4aky62.js:23:12)\n    at Object.<anonymous> (/tmp/tmpaw4aky62.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123040,
      "stdout": "2\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmqgnsmce.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmqgnsmce.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\nconsole.log(find_length('0111010101'));\nconsole.log(find_length('011101010101'));\nconsole.log(find_length('01110101010101'));\nconsole.log(find_length('0111010101010101'));\nconsole.log(find_length('011101010101010101'));\nconsole.log(find_length('01110101010101010101'));\nconsole.log(find_length('0111010101010101010101'));\nconsole.log(find_length('011101010101010101010101'));\nconsole.log(find_length('\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "../../../../tmp/tmp12b6qhop.ts(48,26): error TS1002: Unterminated string literal.\n../../../../tmp/tmp12b6qhop.ts(49,1): error TS1005: ',' expected.\n../../../../tmp/tmp12b6qhop.ts(49,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm6agjo5i.js:37:12)\n    at Object.<anonymous> (/tmp/tmpm6agjo5i.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count = 0;\n    let n = string.length;\n    for (let i = 0; i < n; i++) {\n        if (string[i] == '0') {\n            count++;\n        } else {\n            count--;\n        }\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_diff) {\n            max_diff = count;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"100010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110001111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "8\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpk05jn2bo.js:38:12)\n    at Object.<anonymous> (/tmp/tmpk05jn2bo.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6b3dqjxs.js:22:12)\n    at Object.<anonymous> (/tmp/tmp6b3dqjxs.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max = 0;\n    let count = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero++;\n        } else {\n            one++;\n        }\n        if (zero == one) {\n            max = Math.max(max, i + 1);\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp45oz0u0o.js:24:12)\n    at Object.<anonymous> (/tmp/tmp45oz0u0o.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1pkm3m_0.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1pkm3m_0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('111000111'));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "../../../../tmp/tmpeyfs8g9h.ts(21,724): error TS1002: Unterminated string literal.\n../../../../tmp/tmpeyfs8g9h.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpeyfs8g9h.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count++;\n        } else {\n            count--;\n        }\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_diff) {\n            max_diff = count;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10111\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "3\n1\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdwt8y33i.js:37:12)\n    at Object.<anonymous> (/tmp/tmpdwt8y33i.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0: number = 0;\n    let count_1: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "../../../../tmp/tmp47pxrpn_.ts(31,532): error TS1002: Unterminated string literal.\n../../../../tmp/tmp47pxrpn_.ts(32,1): error TS1005: ',' expected.\n../../../../tmp/tmp47pxrpn_.ts(32,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "3\n1\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0pamz5po.js:38:12)\n    at Object.<anonymous> (/tmp/tmp0pamz5po.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11010101'));\nconsole.log(find_length('11110101'));\nconsole.log(find_length('01010101'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "../../../../tmp/tmpa_ugb3_j.ts(35,432): error TS1002: Unterminated string literal.\n../../../../tmp/tmpa_ugb3_j.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpa_ugb3_j.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        }\n        else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        }\n        else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpikd_nday.js:37:12)\n    at Object.<anonymous> (/tmp/tmpikd_nday.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpcrtdcnbd.js:37:12)\n    at Object.<anonymous> (/tmp/tmpcrtdcnbd.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_1 = 0;\n  let count_0 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"1\") {\n      count_1++;\n    } else {\n      count_0++;\n    }\n    if (count_1 === count_0) {\n      max_length = Math.max(max_length, count_1 + count_0);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0101110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "4\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzmyaagbm.js:24:12)\n    at Object.<anonymous> (/tmp/tmpzmyaagbm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpexj8_bsy.js:22:12)\n    at Object.<anonymous> (/tmp/tmpexj8_bsy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123046,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzpmya7sn.js:37:12)\n    at Object.<anonymous> (/tmp/tmpzpmya7sn.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510057,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1pkm3m_0.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1pkm3m_0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let curr_diff = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        curr_diff = zero_count - one_count;\n        if (curr_diff > max_diff) {\n            max_diff = curr_diff;\n        }\n        if (curr_diff < 0) {\n            curr_diff = 0;\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0100110\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "4\n2\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('11010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnwz6lz71.js:36:12)\n    at Object.<anonymous> (/tmp/tmpnwz6lz71.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123042,
      "stdout": "3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1_smw9pn.js:22:12)\n    at Object.<anonymous> (/tmp/tmp1_smw9pn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let count = 0;\n  let max = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count++;\n    } else {\n      count--;\n    }\n    if (count < 0) {\n      count = 0;\n    }\n    if (max < count) {\n      max = count;\n    }\n  }\n  return max;\n}\n\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123062,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123064,
      "stdout": "2\n0\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp54t_fxo2.js:23:12)\n    at Object.<anonymous> (/tmp/tmp54t_fxo2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"100010101\"));\nconsole.log(find_length(\"1111000011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123064,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwg32nfft.js:37:12)\n    at Object.<anonymous> (/tmp/tmpwg32nfft.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsvjm7m56.js:23:12)\n    at Object.<anonymous> (/tmp/tmpsvjm7m56.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "1\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdszu_6us.js:23:12)\n    at Object.<anonymous> (/tmp/tmpdszu_6us.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101010101\"));\nconsole.log(find_length(\"010101010101\"));\nconsole.log(find_length(\"111111111111\"));\nconsole.log(find_length(\"0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "../../../../tmp/tmpgy4uq3o7.ts(33,438): error TS1002: Unterminated string literal.\n../../../../tmp/tmpgy4uq3o7.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmpgy4uq3o7.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"01\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpb707p1gd.js:23:12)\n    at Object.<anonymous> (/tmp/tmpb707p1gd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('10011010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx91xcve7.js:23:12)\n    at Object.<anonymous> (/tmp/tmpx91xcve7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeroCount = 0;\n    let oneCount = 0;\n    let maxDiff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeroCount++;\n        } else {\n            oneCount++;\n        }\n        if (zeroCount == oneCount) {\n            maxDiff = Math.max(maxDiff, zeroCount * 2);\n        }\n    }\n    zeroCount = 0;\n    oneCount = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeroCount++;\n        } else {\n            oneCount++;\n        }\n        if (zeroCount == oneCount) {\n            maxDiff = Math.max(maxDiff, zeroCount * 2);\n        }\n    }\n    return maxDiff;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnn_pe5nh.js:35:12)\n    at Object.<anonymous> (/tmp/tmpnn_pe5nh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0 += 1;\n        } else {\n            count_1 += 1;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0 += 1;\n        } else {\n            count_1 += 1;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110001111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "4\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmph74xqi_v.js:38:12)\n    at Object.<anonymous> (/tmp/tmph74xqi_v.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"010111\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"00\"));\nconsole.log(find_length(\"01\"));\nconsole.log(find_length(\"10\"));\nconsole.log(find_length(\"11\"));\nconsole.log(find_length(\"0011\"));\nconsole.log(find_length(\"0101\"));\nconsole.log(find_length(\"0110\"));\nconsole.log(find_length(\"1001\"));\nconsole.log(find_length(\"1010\"));\nconsole.log(find_length(\"1100\"));\nconsole.log(find_length(\"1101\"));\nconsole.log(find_length(\"1110\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"001101\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"011001\"));\nconsole.log(find_length(\"011010\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "../../../../tmp/tmpmxqqymca.ts(52,32): error TS1002: Unterminated string literal.\n../../../../tmp/tmpmxqqymca.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmpmxqqymca.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, count_zero - count_one);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"100110001\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnchkqos3.js:22:12)\n    at Object.<anonymous> (/tmp/tmpnchkqos3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count = 0;\n  let i = 0;\n  while (i < string.length) {\n    if (string[i] === \"0\") {\n      count++;\n    } else {\n      count--;\n    }\n    if (count === 0) {\n      max_length = i + 1;\n    }\n    i++;\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0aus5w3e.js:25:12)\n    at Object.<anonymous> (/tmp/tmp0aus5w3e.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('111101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n2\n2\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvayr6p3m.js:39:12)\n    at Object.<anonymous> (/tmp/tmpvayr6p3m.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10001'));\nconsole.log(find_length('1000101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "6\n4\n2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmph2y18887.js:39:12)\n    at Object.<anonymous> (/tmp/tmph2y18887.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('100010101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9bvjkqn4.js:29:12)\n    at Object.<anonymous> (/tmp/tmp9bvjkqn4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('01011101'));\nconsole.log(find_length('01010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\nconsole.log(find_length('10101'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "6\n4\n8\n0\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplonnvbcy.js:41:12)\n    at Object.<anonymous> (/tmp/tmplonnvbcy.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('010111'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('01110101'));\nconsole.log(find_length('0111010101'));\nconsole.log(find_length('011101010101'));\nconsole.log(find_length('01110101010101'));\nconsole.log(find_length('0111010101010101'));\nconsole.log(find_length('011101010101010101'));\nconsole.log(find_length('01110101010101010101'));\nconsole.log(find_length('0111010101010101010101'));\nconsole.log(find_length('011101010101010101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "2\n2\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxyuor3o6.js:55:12)\n    at Object.<anonymous> (/tmp/tmpxyuor3o6.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu925er1l.js:29:12)\n    at Object.<anonymous> (/tmp/tmpu925er1l.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('001101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "6\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdhsub3q1.js:38:12)\n    at Object.<anonymous> (/tmp/tmpdhsub3q1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "1\n4\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpra_i6gap.js:23:12)\n    at Object.<anonymous> (/tmp/tmpra_i6gap.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let result = 0;\n    let count = 0;\n    let count1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count++;\n        }\n        else {\n            count1++;\n        }\n        if (count == count1) {\n            result = Math.max(result, count * 2);\n        }\n    }\n    count = 0;\n    count1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count++;\n        }\n        else {\n            count1++;\n        }\n        if (count == count1) {\n            result = Math.max(result, count * 2);\n        }\n    }\n    return result;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100101010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123066,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwju8trv1.js:38:12)\n    at Object.<anonymous> (/tmp/tmpwju8trv1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"110101\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "../../../../tmp/tmpyyxanfvq.ts(19,743): error TS1002: Unterminated string literal.\n../../../../tmp/tmpyyxanfvq.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmpyyxanfvq.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1101110111'));\nconsole.log(find_length('1111011101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "0\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp40vgy0f4.js:37:12)\n    at Object.<anonymous> (/tmp/tmp40vgy0f4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjmpmutmy.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjmpmutmy.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"0111000100010\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123067,
      "stdout": "8\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2rlakw_p.js:37:12)\n    at Object.<anonymous> (/tmp/tmp2rlakw_p.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2ei0h4kp.js:38:12)\n    at Object.<anonymous> (/tmp/tmp2ei0h4kp.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpe42o98f0.js:36:12)\n    at Object.<anonymous> (/tmp/tmpe42o98f0.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('10010001'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1001010101'));\nconsole.log(find_length('100101010101'));\nconsole.log(find_length('10010101010101'));\nconsole.log(find_length('1001010101010101'));\nconsole.log(find_length('100101010101010101'));\nconsole.log(find_length('10010101010101010101'));\nconsole.log(find_length('1001010101010101010101'));\nconsole.log(find_length('100101010101010101010101'));\nconsole.log(find_length('10010101010101010101010101'));\nconsole.log(find_length('1001010101010101010101010101'));\nconsole.log(find_length('100101010101010101010101010101'));\nconsole.log(find_length('10010101010101010101010101010101'));\nconsole.log(find_length('1001010101010101010101010101010101'));\nconsole.log(find_length('100101010101010101010101010101010101'));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123067,
      "stdout": "../../../../tmp/tmpm77krp3r.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('100010101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpud7sli2l.js:37:12)\n    at Object.<anonymous> (/tmp/tmpud7sli2l.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp241jivbj.js:22:12)\n    at Object.<anonymous> (/tmp/tmp241jivbj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let zero_count = 0;\n  let one_count = 0;\n  let max_diff = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    if (zero_count == one_count) {\n      max_diff = Math.max(max_diff, zero_count * 2);\n    } else if (zero_count > one_count) {\n      zero_count = 0;\n      one_count = 0;\n    }\n  }\n  zero_count = 0;\n  one_count = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] == \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    if (zero_count == one_count) {\n      max_diff = Math.max(max_diff, zero_count * 2);\n    } else if (zero_count < one_count) {\n      zero_count = 0;\n      one_count = 0;\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1001101100\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111011101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "6\n8\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp38y8l41z.js:46:12)\n    at Object.<anonymous> (/tmp/tmp38y8l41z.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "8\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_3encjbd.js:38:12)\n    at Object.<anonymous> (/tmp/tmp_3encjbd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max = 0;\n  let count = 0;\n  let zeros = 0;\n  let ones = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      zeros++;\n    } else {\n      ones++;\n    }\n    if (zeros === ones) {\n      count = zeros + ones;\n      if (count > max) {\n        max = count;\n      }\n    }\n  }\n  return max;\n}\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuwrqyf6h.js:27:12)\n    at Object.<anonymous> (/tmp/tmpuwrqyf6h.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3_w2tjoj.js:22:12)\n    at Object.<anonymous> (/tmp/tmp3_w2tjoj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10001010101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpgy23xz39.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgy23xz39.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconsole.log(find_length('1000101'));\nconsole.log(find_length('110101'));\nconsole.log(find_length('100010111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "2\n0\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0tycjmg4.js:23:12)\n    at Object.<anonymous> (/tmp/tmp0tycjmg4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let arr = string.split(\"\");\n    let count_1 = 0;\n    let count_0 = 0;\n    let max_diff = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] == \"1\") {\n            count_1++;\n        }\n        else {\n            count_0++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_1 - count_0));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"01010101010101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "1\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu_8nbioq.js:24:12)\n    at Object.<anonymous> (/tmp/tmpu_8nbioq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        count = zeros - ones;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconsole.log(find_length('1000101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphtfplzte.js:28:12)\n    at Object.<anonymous> (/tmp/tmphtfplzte.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "3\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3r37keuo.js:23:12)\n    at Object.<anonymous> (/tmp/tmp3r37keuo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('110101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('01100'));\nconsole.log(find_length('0110111'));\nconsole.log(find_length('01101'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('101101'));\nconsole.log(find_length('000101'));\nconsole.log(find_length('100101'));\nconsole.log(find_length('111000111'));\nconsole.log(find_length('111000111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "4\n0\n4\n4\n4\n6\n2\n4\n6\n6\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprtcc6ras.js:46:12)\n    at Object.<anonymous> (/tmp/tmprtcc6ras.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, count_zero - count_one);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1101\"));\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123069,
      "stdout": "2\n0\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphyhny9xf.js:23:12)\n    at Object.<anonymous> (/tmp/tmphyhny9xf.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('1000101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123069,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8vh2k8f_.js:23:12)\n    at Object.<anonymous> (/tmp/tmp8vh2k8f_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let zero_count = 0;\n  let one_count = 0;\n  let max_diff = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    if (zero_count === one_count) {\n      max_diff = Math.max(max_diff, zero_count * 2);\n    }\n  }\n  zero_count = 0;\n  one_count = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      zero_count++;\n    } else {\n      one_count++;\n    }\n    if (zero_count === one_count) {\n      max_diff = Math.max(max_diff, zero_count * 2);\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0111011100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123069,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp27_9w3p6.js:38:12)\n    at Object.<anonymous> (/tmp/tmp27_9w3p6.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123069,
      "stdout": "2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjni2odhv.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjni2odhv.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100101010\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123069,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwuttxe7t.js:38:12)\n    at Object.<anonymous> (/tmp/tmpwuttxe7t.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123069,
      "stdout": "4\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9vxhv4bh.js:37:12)\n    at Object.<anonymous> (/tmp/tmp9vxhv4bh.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123070,
      "stdout": "3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpadlviyw5.js:22:12)\n    at Object.<anonymous> (/tmp/tmpadlviyw5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10101'));\nconsole.log(find_length('011100010000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "2\n1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpi4z519vj.js:23:12)\n    at Object.<anonymous> (/tmp/tmpi4z519vj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111100001111\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"01001\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\nconsole.log(find_length(\"100101010001\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123070,
      "stdout": "8\n8\n4\n4\n0\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphglpx1ag.js:42:12)\n    at Object.<anonymous> (/tmp/tmphglpx1ag.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "4\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpb47h04s1.js:37:12)\n    at Object.<anonymous> (/tmp/tmpb47h04s1.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "2\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp77t648ko.js:46:12)\n    at Object.<anonymous> (/tmp/tmp77t648ko.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n\n    count_zero = 0;\n    count_one = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "8\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppuep0m5e.js:38:12)\n    at Object.<anonymous> (/tmp/tmppuep0m5e.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero++;\n        } else {\n            one++;\n        }\n        count = zero - one;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0plct2wj.js:28:12)\n    at Object.<anonymous> (/tmp/tmp0plct2wj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        }\n        else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10111\"));\nconsole.log(find_length(\"1111\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "2\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4e0ufzo9.js:23:12)\n    at Object.<anonymous> (/tmp/tmp4e0ufzo9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp75yn14xt.js:38:12)\n    at Object.<anonymous> (/tmp/tmp75yn14xt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10111'));\nconsole.log(find_length('1111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123051,
      "stdout": "2\n3\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbnft65h1.js:23:12)\n    at Object.<anonymous> (/tmp/tmpbnft65h1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0100101010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "4\n2\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpgihmphb3.js:46:12)\n    at Object.<anonymous> (/tmp/tmpgihmphb3.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('10010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "4\n2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpo4uxgqoy.js:38:12)\n    at Object.<anonymous> (/tmp/tmpo4uxgqoy.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665510052,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpeoxjh4lr.js:22:12)\n    at Object.<anonymous> (/tmp/tmpeoxjh4lr.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max_count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if (count < 0) {\n            count = 0;\n        }\n        if (count > max_count) {\n            max_count = count;\n        }\n    }\n    return max_count;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0101101'));\nconsole.log(find_length('1111000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "3\n1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjimcayva.js:30:12)\n    at Object.<anonymous> (/tmp/tmpjimcayva.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "4\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmph1nct_0v.js:37:12)\n    at Object.<anonymous> (/tmp/tmph1nct_0v.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('11110111'));\nconsole.log(find_length('01110011'));\nconsole.log(find_length('01110111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "2\n0\n6\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmponfi0ccc.js:55:12)\n    at Object.<anonymous> (/tmp/tmponfi0ccc.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "../../../../tmp/tmpvltbo9k1.ts(33,500): error TS1002: Unterminated string literal.\n../../../../tmp/tmpvltbo9k1.ts(34,1): error TS1005: ',' expected.\n../../../../tmp/tmpvltbo9k1.ts(34,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "2\n0\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpemsvlkvx.js:38:12)\n    at Object.<anonymous> (/tmp/tmpemsvlkvx.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "4\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpo54op07q.js:38:12)\n    at Object.<anonymous> (/tmp/tmpo54op07q.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('0101101'));\nconsole.log(find_length('1111000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "3\n1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpt7cx7sbe.js:23:12)\n    at Object.<anonymous> (/tmp/tmpt7cx7sbe.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, i + 1);\n        } else if (zeros > ones) {\n            zeros = 0;\n            ones = 0;\n            i = count;\n            count++;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011010001\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1101010101\"));\nconsole.log(find_length(\"010101010101\"));\nconsole.log(find_length(\"110101010101\"));\nconsole.log(find_length(\"01010101010101\"));\nconsole.log(find_length(\"11010101010101\"));\nconsole.log(find_length(\"0101010101010101\"));\nconsole.log(find_length(\"1101010101010101\"));\nconsole.log(find_length(\"010101010101010101\"));\nconsole.log(find_length(\"110101010101010101\"));\nconsole.log(find_length(\"01010101010101010101\"));\nconsole.log(find_length(\"11010101010101010101\"));\nconsole.log(find_length(\"0101010101010101010101\"));\nconsole.log(find_length(\"1101010101010101010101\"));\nconsole.log(find_length(\"010101010101010101010101\"));\nconsole.log(find_length(\"110101010101010101010101\"));\nconsole.log(find_length(\"01010101010101010101010101\"));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "../../../../tmp/tmp81c4m3y3.ts(43,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0101010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "4\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpys46y_g8.js:37:12)\n    at Object.<anonymous> (/tmp/tmpys46y_g8.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"1101\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "1\n2\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzbj7cs0k.js:23:12)\n    at Object.<anonymous> (/tmp/tmpzbj7cs0k.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "../../../../tmp/tmppj28xlgd.ts(19,746): error TS1002: Unterminated string literal.\n../../../../tmp/tmppj28xlgd.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmppj28xlgd.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0,\n        count_0 = 0,\n        count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('11110111'));\nconsole.log(find_length('01110011'));\nconsole.log(find_length('01110111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01111111'));\nconsole.log(find_length('01\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123072,
      "stdout": "../../../../tmp/tmpwsob88v6.ts(50,28): error TS1002: Unterminated string literal.\n../../../../tmp/tmpwsob88v6.ts(51,1): error TS1005: ',' expected.\n../../../../tmp/tmpwsob88v6.ts(51,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3t9tcbd7.js:37:12)\n    at Object.<anonymous> (/tmp/tmp3t9tcbd7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123073,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmzis08jj.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmzis08jj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpb2rhc4gc.js:37:12)\n    at Object.<anonymous> (/tmp/tmpb2rhc4gc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010001'));\nconsole.log(find_length('111000111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpej2yzkph.js:22:12)\n    at Object.<anonymous> (/tmp/tmpej2yzkph.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"11000101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpp_lgc6ha.js:22:12)\n    at Object.<anonymous> (/tmp/tmpp_lgc6ha.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10011'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsw81ywr5.js:37:12)\n    at Object.<anonymous> (/tmp/tmpsw81ywr5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count === one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('1001101'));\nconsole.log(find_length('0111000100010'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "2\n8\n8\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpny1qi0wa.js:48:12)\n    at Object.<anonymous> (/tmp/tmpny1qi0wa.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i) == \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, count_zero - count_one);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "2\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp5iezpxfo.js:22:12)\n    at Object.<anonymous> (/tmp/tmp5iezpxfo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length: number = 0;\n    let count_0: number = 0;\n    let count_1: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmp2rbzij6i.ts(19,758): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2rbzij6i.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmp2rbzij6i.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpbhcsc2wa.ts(18,770): error TS1002: Unterminated string literal.\n../../../../tmp/tmpbhcsc2wa.ts(19,1): error TS1005: ',' expected.\n../../../../tmp/tmpbhcsc2wa.ts(19,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10011'));\nconsole.log(find_length('01'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpqbb7e9i5.js:23:12)\n    at Object.<anonymous> (/tmp/tmpqbb7e9i5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1101010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1s407s91.js:36:12)\n    at Object.<anonymous> (/tmp/tmp1s407s91.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n\n  count_0 = 0;\n  count_1 = 0;\n\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n\n  return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"01100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "8\n0\n4\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpr4iso7sd.js:41:12)\n    at Object.<anonymous> (/tmp/tmpr4iso7sd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, count_zero - count_one);\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "1\n1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpeze0v8o9.js:23:12)\n    at Object.<anonymous> (/tmp/tmpeze0v8o9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_length: number = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count > one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count += 1;\n        } else {\n            one_count += 1;\n        }\n        if (zero_count == one_count) {\n            max_length = Math.max(max_length, 2 * zero_count);\n        } else if (zero_count < one_count) {\n            zero_count = 0;\n            one_count = 0;\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101100\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"010001\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"000011110000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "6\n4\n2\n0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpj3qv8g03.js:48:12)\n    at Object.<anonymous> (/tmp/tmpj3qv8g03.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"110101\"));\nconsole.log(find_length(\"010101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"100\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmpcf_7ozmb.ts(49,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmpcf_7ozmb.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmpcf_7ozmb.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  let n = string.length;\n  for (let i = 0; i < n; i++) {\n    for (let j = i; j < n; j++) {\n      if (string[j] === \"0\") {\n        count_0++;\n      } else {\n        count_1++;\n      }\n      max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    count_0 = 0;\n    count_1 = 0;\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp7936_47q.js:27:12)\n    at Object.<anonymous> (/tmp/tmp7936_47q.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff: number = 0;\n    let count_zero: number = 0;\n    let count_one: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        }\n        else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i: number = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        }\n        else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvplrz89w.js:36:12)\n    at Object.<anonymous> (/tmp/tmpvplrz89w.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('11011101'));\nconsole.log(find_length('111101'));\nconsole.log(find_length('011101'));\nconsole.log(find_length('110101'));\nconsole.log(find_length('11010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "2\n2\n2\n4\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2x8u05km.js:40:12)\n    at Object.<anonymous> (/tmp/tmp2x8u05km.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconsole.log(find_length('10010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpz5mq089s.js:36:12)\n    at Object.<anonymous> (/tmp/tmpz5mq089s.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123070,
      "stdout": "3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpadlviyw5.js:22:12)\n    at Object.<anonymous> (/tmp/tmpadlviyw5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zeros = 0;\n    let ones = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        count = zeros - ones;\n        if (count < 0) {\n            count = -count;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('10011010101'));\nconsole.log(find_length('1101010101'));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "../../../../tmp/tmp_v0yx3oq.ts(26,700): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_v0yx3oq.ts(27,1): error TS1005: ',' expected.\n../../../../tmp/tmp_v0yx3oq.ts(27,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1001101'));\nconsole.log(find_length('100110101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpaoo0xq36.js:37:12)\n    at Object.<anonymous> (/tmp/tmpaoo0xq36.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_length = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        if (zeros === ones) {\n            max_length = Math.max(max_length, zeros + ones);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"111101111\"));\nconsole.log(find_length(\"0101010101\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123075,
      "stdout": "8\n0\n10\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp11sulc52.js:38:12)\n    at Object.<anonymous> (/tmp/tmp11sulc52.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  count_0 = 0;\n  count_1 = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      count_0++;\n    } else {\n      count_1++;\n    }\n    if (count_0 === count_1) {\n      max_length = Math.max(max_length, count_0 + count_1);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "6\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpr0ofri63.js:37:12)\n    at Object.<anonymous> (/tmp/tmpr0ofri63.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == \"0\") {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"01\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprnzoryl_.js:23:12)\n    at Object.<anonymous> (/tmp/tmprnzoryl_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_0 = 0;\n  let count_1 = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") count_0++;\n    else count_1++;\n    max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"1101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0ujyq9qf.js:20:12)\n    at Object.<anonymous> (/tmp/tmp0ujyq9qf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros: number = 0;\n    let ones: number = 0;\n    let max_diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros++;\n        } else {\n            ones++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010001\"));\nconsole.log(find_length(\"0110000\"));\nconsole.log(find_length(\"100101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "3\n3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkep3_fue.js:23:12)\n    at Object.<anonymous> (/tmp/tmpkep3_fue.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10001010001'));\nconsole.log(find_length('1000101000101'));\nconsole.log(find_length('10001010001010001'));\nconsole.log(find_length('1000101000101000101'));\nconsole.log(find_length('10001010001010001010001'));\nconsole.log(find_length('100010100010100010100010001'));\nconsole.log(find_length('1000101000101000101000100010001'));\nconsole.log(find_length('10001010001010001010001000100010001'));\nconsole.log(find_length('100010100010100010100010001000100010001'));\nconsole.log(find_length('1000101000101000101000100010001000100010001'));\nconsole.log(find_length('10001010001010001010001000100010001000100010001'));\nconsole.log(find_length('100010100010100010100010001000100010001000100010001'));\nconsole.log(find_length('1000101000101000101000100010001000100010001000100010001'));\nconsole.log(find_length('10001010001010001010001000100010001000100010001000100010001'));\nconsole.log(find_length('100010100010100010100010001000100010001000100010001000100010001'));\nconsole.log(find_length('1000101000101000101000100010001000100010001000100010001000100010001'));\nconsole.log(find_length('1000101000101000101000100010001000100010001000100010001\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmpueyyjr8s.ts(34,81): error TS1002: Unterminated string literal.\n../../../../tmp/tmpueyyjr8s.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmpueyyjr8s.ts(35,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvohss7q2.js:37:12)\n    at Object.<anonymous> (/tmp/tmpvohss7q2.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        }\n    }\n\n    zero_count = 0;\n    one_count = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n\n        if (zero_count === one_count) {\n            max_length = Math.max(max_length, zero_count * 2);\n        }\n    }\n\n    return max_length;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('0110001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "8\n0\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpq9zpdsah.js:39:12)\n    at Object.<anonymous> (/tmp/tmpq9zpdsah.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('1101110111'));\nconsole.log(find_length('0001110001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "0\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpa8ofqfvk.js:37:12)\n    at Object.<anonymous> (/tmp/tmpa8ofqfvk.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    let i = 0;\n    while (i < string.length) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n        i++;\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('10001010101'));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmpi90qsvvw.ts(21,731): error TS1002: Unterminated string literal.\n../../../../tmp/tmpi90qsvvw.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpi90qsvvw.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count_0 = 0;\n    let count_1 = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1001101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmp98ii6f8k.ts(21,722): error TS1002: Unterminated string literal.\n../../../../tmp/tmp98ii6f8k.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmp98ii6f8k.ts(22,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero === count_one) {\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1011101'));\nconsole.log(find_length('0101010101'));\nconsole.log(find_length('010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmp_e5kb8n8.ts(34,464): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_e5kb8n8.ts(35,1): error TS1005: ',' expected.\n../../../../tmp/tmp_e5kb8n8.ts(35,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0000\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "1\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2raewyrn.js:23:12)\n    at Object.<anonymous> (/tmp/tmp2raewyrn.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] === '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        if (count_0 === count_1) {\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzh9v_rql.js:36:12)\n    at Object.<anonymous> (/tmp/tmpzh9v_rql.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"111000111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123043,
      "stdout": "2\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbzvk5c2o.js:22:12)\n    at Object.<anonymous> (/tmp/tmpbzvk5c2o.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    if (count_zero == count_one) {\n      max_length = Math.max(max_length, count_zero + count_one);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10011010101\"));\nconsole.log(find_length(\"0101010101\"));\nconsole.log(find_length(\"1111010101\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "../../../../tmp/tmpvm7knktr.ts(22,680): error TS1002: Unterminated string literal.\n../../../../tmp/tmpvm7knktr.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpvm7knktr.ts(23,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmpn3hjzq7r.ts(19,754): error TS1002: Unterminated string literal.\n../../../../tmp/tmpn3hjzq7r.ts(20,1): error TS1005: ',' expected.\n../../../../tmp/tmpn3hjzq7r.ts(20,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n\n    count_0 = 0;\n    count_1 = 0;\n\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n\n        if (count_0 == count_1) {\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n\n    return max_diff;\n}\n\nconsole.log(find_length('1101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmpi8_8o2zm.ts(37,552): error TS1002: Unterminated string literal.\n../../../../tmp/tmpi8_8o2zm.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpi8_8o2zm.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"110101\"));\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_length(\"011101\"));\nconsole.log(find_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "../../../../tmp/tmp4c88dvpe.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp4c88dvpe.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1001101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_length('1000101'));\nconsole.log(find_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "../../../../tmp/tmp30m4xg9p.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp30m4xg9p.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count: number = 0;\n    let one_count: number = 0;\n    let max_diff: number = 0;\n    let diff: number = 0;\n    for (let i: number = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        diff = zero_count - one_count;\n        if (diff < 0) {\n            diff = -diff;\n        }\n        if (diff > max_diff) {\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "../../../../tmp/tmph_hy72_v.ts(24,711): error TS1002: Unterminated string literal.\n../../../../tmp/tmph_hy72_v.ts(25,1): error TS1005: ',' expected.\n../../../../tmp/tmph_hy72_v.ts(25,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zeros = 0;\n    let ones = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zeros += 1;\n        } else {\n            ones += 1;\n        }\n        if (zeros == ones) {\n            max_diff = Math.max(max_diff, zeros * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"0111000100010\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "4\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnm5tbjwn.js:37:12)\n    at Object.<anonymous> (/tmp/tmpnm5tbjwn.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_length = 0;\n  let zeros = 0;\n  let ones = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    if (zeros === ones) {\n      max_length = Math.max(max_length, zeros * 2);\n    }\n  }\n  zeros = 0;\n  ones = 0;\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (string[i] === \"0\") {\n      zeros += 1;\n    } else {\n      ones += 1;\n    }\n    if (zeros === ones) {\n      max_length = Math.max(max_length, zeros * 2);\n    }\n  }\n  return max_length;\n}\n\nconsole.log(find_length(\"10010001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123045,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9vq4xt_h.js:36:12)\n    at Object.<anonymous> (/tmp/tmp9vq4xt_h.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_0++;\n        } else {\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('1111'));\nconsole.log(find_length('0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "1\n4\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpg8ul0b5a.js:23:12)\n    at Object.<anonymous> (/tmp/tmpg8ul0b5a.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconsole.log(find_length('1001101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpazmm75oo.js:36:12)\n    at Object.<anonymous> (/tmp/tmpazmm75oo.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let zero_count = 0;\n    let one_count = 0;\n    let max_diff = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero_count++;\n        } else {\n            one_count++;\n        }\n        if (zero_count == one_count) {\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10001010101'));\nconsole.log(find_length('0111000100010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "8\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpi7baol8_.js:37:12)\n    at Object.<anonymous> (/tmp/tmpi7baol8_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_one * 2);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        if (count_zero == count_one) {\n            max_length = Math.max(max_length, count_zero * 2);\n        }\n    }\n    return max_length;\n}\n\nconsole.log(find_length(\"1001101100\"));\nconsole.log(find_length(\"01100\"));\nconsole.log(find_length(\"0110011\"));\nconsole.log(find_length(\"1111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123078,
      "stdout": "10\n4\n6\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbmp1nhqo.js:39:12)\n    at Object.<anonymous> (/tmp/tmpbmp1nhqo.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff = 0;\n  let count_zero = 0;\n  let count_one = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, count_zero - count_one);\n  }\n  return max_diff;\n}\nconsole.log(find_length(\"1000101\"));\nconsole.log(find_length(\"10011\"));\nconsole.log(find_length(\"01\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfs9x4ris.js:23:12)\n    at Object.<anonymous> (/tmp/tmpfs9x4ris.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let ones = 0;\n    let zeros = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '1') {\n            ones++;\n        }\n        else {\n            zeros++;\n        }\n        if (ones === zeros) {\n            max = Math.max(max, count);\n        }\n        else {\n            count++;\n        }\n    }\n    return max;\n}\nconsole.log(find_length('10010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpp2gz4iui.js:27:12)\n    at Object.<anonymous> (/tmp/tmpp2gz4iui.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let count = 0;\n    let max = 0;\n    let zero = 0;\n    let one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            zero++;\n        } else {\n            one++;\n        }\n        if (zero == one) {\n            max = Math.max(max, i + 1);\n        }\n    }\n    for (let i = string.length - 1; i >= 0; i--) {\n        if (string[i] == '0') {\n            zero--;\n        } else {\n            one--;\n        }\n        if (zero == one) {\n            max = Math.max(max, string.length - i);\n        }\n    }\n    return max;\n}\n\nconsole.log(find_length('10010101'));\nconsole.log(find_length('111101111'));\nconsole.log(find_length('01100101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "8\n9\n8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n11\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvpa86tu2.js:37:12)\n    at Object.<anonymous> (/tmp/tmpvpa86tu2.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 11,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n  let max_diff: number = 0;\n  let count_zero: number = 0;\n  let count_one: number = 0;\n  for (let i: number = 0; i < string.length; i++) {\n    if (string[i] == \"0\") {\n      count_zero++;\n    } else {\n      count_one++;\n    }\n    max_diff = Math.max(max_diff, count_zero - count_one);\n    if (count_one > count_zero) {\n      count_zero = 0;\n      count_one = 0;\n    }\n  }\n  return max_diff;\n}\n\nconsole.log(find_length(\"10010101\"));\nconsole.log(find_length(\"1111\"));\nconsole.log(find_length(\"0111000100010\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "2\n0\n5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('1000101'));\nconsole.log(find_lengthndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmp2s8217an.ts(18,779): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2s8217an.ts(19,1): error TS1005: ',' expected.\n../../../../tmp/tmp2s8217an.ts(19,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string: string): number {\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] == '0') {\n            count_zero++;\n        } else {\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\n\nconsole.log(find_length('10011010001'));\nconsole.log(find_length('111000111'));\nconsole.log(find_length('0101010101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "2\n3\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpg0bi5__k.js:23:12)\n    at Object.<anonymous> (/tmp/tmpg0bi5__k.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
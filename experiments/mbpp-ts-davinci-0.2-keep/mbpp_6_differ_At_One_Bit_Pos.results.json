{
  "name": "mbpp_6_differ_At_One_Bit_Pos",
  "language": "ts",
  "prompt": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_6_differ_At_One_Bit_Pos.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count += 1;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    return (a ^ b) && !((a ^ b) & ((a ^ b) - 1));\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    if (a == b) {\n        return false;\n    }\n    let c = a ^ b;\n    if (c & (c - 1) == 0) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpvbzsuopf.ts(7,13): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c > 0) {\n        count += c & 1;\n        c = c >> 1;\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1) == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510505,
      "stdout": "../../../../tmp/tmpzxkbumaa.ts(4,13): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    var c: number = a ^ b;\n    var count: number = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    if (count == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    if (count == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    } else {\n        return true;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c > 0) {\n        if (c & 1 == 1) {\n            count++;\n        }\n        c = c >> 1;\n    }\n    if (count == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmp71hwslm0.ts(6,17): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    let count = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    var c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    var c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return ((c & (c - 1)) == 0);\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c > 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    if (count == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    var c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1) == 0) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpqlan49m2.ts(4,13): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count += c & 1;\n        c = c >> 1;\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1) == 0) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "../../../../tmp/tmpqlan49m2.ts(4,13): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    var c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1) == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "../../../../tmp/tmpcbx51ifh.ts(4,13): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c > 0) {\n        if (c & 1) {\n            count++;\n        }\n        c = c >> 1;\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(12, 13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123549,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    if (a == b) {\n        return false;\n    }\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    let count = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    let count = 0;\n    while (c > 0) {\n        count += c & 1;\n        c = c >> 1;\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count += 1;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    if (count == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 20));\nconsole.log(differ_At_One_Bit_Pos(10, 25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    let count = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if ((c & (c - 1)) == 0) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123547,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 20));\nconsole.log(differ_At_One_Bit_Pos(10, 21));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    let count = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    if (a == b) {\n        return false;\n    }\n    else {\n        let c = a ^ b;\n        if (c & (c - 1) == 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 10));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmp1x724_zr.ts(8,17): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 20));\nconsole.log(differ_At_One_Bit_Pos(10, 21));\nconsole.log(differ_At_One_Bit_Pos(10, 22));\nconsole.log(differ_At_One_Bit_Pos(10, 23));\nconsole.log(differ_At_One_Bit_Pos(10, 24));\nconsole.log(differ_At_One_Bit_Pos(10, 25));\nconsole.log(differ_At_One_Bit_Pos(10, 26));\nconsole.log(differ_At_One_Bit_Pos(10, 27));\nconsole.log(differ_At_One_Bit_Pos(10, 28));\nconsole.log(differ_At_One_Bit_Pos(10, 29));\nconsole.log(differ_At_One_Bit_Pos(10, 30));\nconsole.log(differ_At_One_Bit_Pos(10, 31));\nconsole.log(differ_At_One_Bit_Pos(10, 32));\nconsole.log(differ_At_One_Bit_Pos(10, 33));\nconsole.log(differ_At_One_Bit_Pos(10, 34));\nconsole.log(differ_At_One_Bit_Pos(10, 35));\nconsole.log(differ_At_One_Bit_Pos(10, 36));\nconsole.log(differ_At_One_Bit_Pos(10, 37));\nconsole.log(differ_At_One_Bit_Pos(10, 38));\nconsole.log(differ_At_One_Bit_Pos(10, 39));\nconsole.log(differ_At_One_Bit_Pos(10, 40));\nconsole.log(differ_At_One_Bit_Pos(10, 41));\nconsole.log(differ_At_One_Bit_Pos(10, 42));\nconsole.log(differ_At_One_Bit_Pos(10, 43));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmpse5ftu67.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 20));\nconsole.log(differ_At_One_Bit_Pos(10, 30));\nconsole.log(differ_At_One_Bit_Pos(10, 40));\nconsole.log(differ_At_One_Bit_Pos(10, 50));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    var c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\nconsole.log(differ_At_One_Bit_Pos(10, 13));\nconsole.log(differ_At_One_Bit_Pos(10, 14));\nconsole.log(differ_At_One_Bit_Pos(10, 15));\nconsole.log(differ_At_One_Bit_Pos(10, 16));\nconsole.log(differ_At_One_Bit_Pos(10, 17));\nconsole.log(differ_At_One_Bit_Pos(10, 18));\nconsole.log(differ_At_One_Bit_Pos(10, 19));\nconsole.log(differ_At_One_Bit_Pos(10, 20));\nconsole.log(differ_At_One_Bit_Pos(10, 21));\nconsole.log(differ_At_One_Bit_Pos(10, 22));\nconsole.log(differ_At_One_Bit_Pos(10, 23));\nconsole.log(differ_At_One_Bit_Pos(10, 24));\nconsole.log(differ_At_One_Bit_Pos(10, 25));\nconsole.log(differ_At_One_Bit_Pos(10, 26));\nconsole.log(differ_At_One_Bit_Pos(10, 27));\nconsole.log(differ_At_One_Bit_Pos(10, 28));\nconsole.log(differ_At_One_Bit_Pos(10, 29));\nconsole.log(differ_At_One_Bit_Pos(10, 30));\nconsole.log(differ_At_One_Bit_Pos(10, 31));\nconsole.log(differ_At_One_Bit_Pos(10, 32));\nconsole.log(differ_At_One_Bit_Pos(10, 33));\nconsole.log(differ_At_One_Bit_Pos(10, 34));\nconsole.log(differ\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmpn8aak13a.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmpn8aak13a.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    let count = 0;\n    while (c > 0) {\n        count += c & 1;\n        c = c >> 1;\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\nconsole.log(differ_At_One_Bit_Pos(10, 13));\nconsole.log(differ_At_One_Bit_Pos(10, 14));\nconsole.log(differ_At_One_Bit_Pos(10, 15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c && !(c & (c - 1))) {\n        return true;\n    }\n    return false;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n  let c = a ^ b;\n  return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count++;\n        c = c & (c - 1);\n    }\n    if (count == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    if (c & (c - 1)) {\n        return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    let count: number = 0;\n    while (c != 0) {\n        count += 1;\n        c = c & (c - 1);\n    }\n    return count == 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(10, 20));\nconsole.log(differ_At_One_Bit_Pos(10, 21));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\nconsole.log(differ_At_One_Bit_Pos(11, 9));\nconsole.log(differ_At_One_Bit_Pos(52, 4));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the two numbers differ at one bit position only or not.\nfunction differ_At_One_Bit_Pos(a: number, b: number): boolean {\n    let c: number = a ^ b;\n    return (c & (c - 1)) == 0;\n}\nconsole.log(differ_At_One_Bit_Pos(10, 11));\nconsole.log(differ_At_One_Bit_Pos(10, 12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = differ_At_One_Bit_Pos;\n  assert.deepEqual(candidate(13, 9),true);\n  assert.deepEqual(candidate(15, 8),false);\n  assert.deepEqual(candidate(2, 4),false);\n  assert.deepEqual(candidate(2, 3),true);\n  assert.deepEqual(candidate(5, 1),true);\n  assert.deepEqual(candidate(1, 5),true);\n}\n\ntest();",
      "timestamp": 1666123546,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
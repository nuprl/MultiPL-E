{
  "name": "mbpp_737_check_str",
  "language": "ts",
  "prompt": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt = /^[aeiouAEIOU]/;\n    var result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"grape\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"clementine\"));\nconsole.log(check_str(\"mandarin\"));\nconsole.log(check_str(\"pomelo\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "../../../../tmp/tmp6g6z5svh.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmp6g6z5svh.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"litchi\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "../../../../tmp/tmphlzpapo7.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" is starting with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" is not starting with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\ncheck_str(\"Germany\");\ncheck_str(\"india\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "United States is starting with a vowel\naustralia is starting with a vowel\nGermany is not starting with a vowel\nindia is starting with a vowel\nannie is starting with a vowel\ndawood is not starting with a vowel\nElse is starting with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"car\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"pomelo\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"tomato\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mangosteen\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "../../../../tmp/tmpeyudctgu.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmpeyudctgu.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"invalid\"));\nconsole.log(check_str(\"valid\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"b\"));\nconsole.log(check_str(\"c\"));\nconsole.log(check_str(\"d\"));\nconsole.log(check_str(\"e\"));\nconsole.log(check_str(\"f\"));\nconsole.log(check_str(\"g\"));\nconsole.log(check_str(\"h\"));\nconsole.log(check_str(\"i\"));\nconsole.log(check_str(\"j\"));\nconsole.log(check_str(\"k\"));\nconsole.log(check_str(\"l\"));\nconsole.log(check_str(\"m\"));\nconsole.log(check_str(\"n\"));\nconsole.log(check_str(\"o\"));\nconsole.log(check_str(\"p\"));\nconsole.log(check_str(\"q\"));\nconsole.log(check_str(\"r\"));\nconsole.log(check_str(\"s\"));\nconsole.log(check_str(\"t\"));\nconsole.log(check_str(\"u\"));\nconsole.log(check_str(\"v\"));\nconsole.log(check_str(\"w\"));\nconsole.log(check_str(\"x\"));\nconsole.log(check_str(\"y\"));\nconsole.log(check_str(\"z\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"melon\"));\nconsole.log(check_str(\"mulberry\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"passion fruit\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"pomelo\"));\nconsole.log(check_str(\"quince\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "../../../../tmp/tmp0cez9l5o.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmp0cez9l5o.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let pattern = /^[aeiou]/i;\n  if (pattern.test(string)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let pattern = /^[aeiou]/i;\n  if (pattern.test(string)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let regex = /^[aeiou]/i;\n  if (regex.test(string)) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"eUnited States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"b\"));\nconsole.log(check_str(\"c\"));\nconsole.log(check_str(\"d\"));\nconsole.log(check_str(\"e\"));\nconsole.log(check_str(\"f\"));\nconsole.log(check_str(\"g\"));\nconsole.log(check_str(\"h\"));\nconsole.log(check_str(\"i\"));\nconsole.log(check_str(\"j\"));\nconsole.log(check_str(\"k\"));\nconsole.log(check_str(\"l\"));\nconsole.log(check_str(\"m\"));\nconsole.log(check_str(\"n\"));\nconsole.log(check_str(\"o\"));\nconsole.log(check_str(\"p\"));\nconsole.log(check_str(\"q\"));\nconsole.log(check_str(\"r\"));\nconsole.log(check_str(\"s\"));\nconsole.log(check_str(\"t\"));\nconsole.log(check_str(\"u\"));\nconsole.log(check_str(\"v\"));\nconsole.log(check_str(\"w\"));\nconsole.log(check_str(\"x\"));\nconsole.log(check_str(\"y\"));\nconsole.log(check_str(\"z\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\"));\nconsole.log(check_str(\"aabcd\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "../../../../tmp/tmp0r8x9kmq.ts(41,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmp0r8x9kmq.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp0r8x9kmq.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(`The given string ${string} starts with a vowel`);\n        return true;\n    } else {\n        console.log(`The given string ${string} does not start with a vowel`);\n        return false;\n    }\n}\n\ncheck_str(\"apple\");\ncheck_str(\"hello\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "The given string apple starts with a vowel\nThe given string hello does not start with a vowel\nThe given string annie starts with a vowel\nThe given string dawood does not start with a vowel\nThe given string Else starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "../../../../tmp/tmpjsjiy_t6.ts(44,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmpjsjiy_t6.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpjsjiy_t6.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" is starting with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" is not starting with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "United States is starting with a vowel\naustralia is starting with a vowel\nannie is starting with a vowel\ndawood is not starting with a vowel\nElse is starting with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"check\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\ncheck_str(\"EDUCBA\");\ncheck_str(\"india\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nEDUCBA starts with a vowel\nindia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let pattern = /^[aeiou]/i;\n  if (string.match(pattern)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern: RegExp = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"b\"));\nconsole.log(check_str(\"c\"));\nconsole.log(check_str(\"d\"));\nconsole.log(check_str(\"e\"));\nconsole.log(check_str(\"f\"));\nconsole.log(check_str(\"g\"));\nconsole.log(check_str(\"h\"));\nconsole.log(check_str(\"i\"));\nconsole.log(check_str(\"j\"));\nconsole.log(check_str(\"k\"));\nconsole.log(check_str(\"l\"));\nconsole.log(check_str(\"m\"));\nconsole.log(check_str(\"n\"));\nconsole.log(check_str(\"o\"));\nconsole.log(check_str(\"p\"));\nconsole.log(check_str(\"q\"));\nconsole.log(check_str(\"r\"));\nconsole.log(check_str(\"s\"));\nconsole.log(check_str(\"t\"));\nconsole.log(check_str(\"u\"));\nconsole.log(check_str(\"v\"));\nconsole.log(check_str(\"w\"));\nconsole.log(check_str(\"x\"));\nconsole.log(check_str(\"y\"));\nconsole.log(check_str(\"z\"));\nconsole.log(check_str(\"A\"));\nconsole.log(check_str(\"B\"));\nconsole.log(check_str(\"C\"));\nconsole.log(check_str(\"D\"));\nconsole.log(check_str(\"E\"));\nconsole.log(check_str(\"F\"));\nconsole.log(check_str(\"G\"));\nconsole.log(check_str(\"H\"));\nconsole.log(check_str(\"I\"));\nconsole.log(check_str(\"J\"));\nconsole.log(check_str(\"K\"));\nconsole.log(check_str(\"L\"));\nconsole.log(check_str(\"M\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "../../../../tmp/tmp4_ow9cj1.ts(48,1): error TS1005: ',' expected.\n../../../../tmp/tmp4_ow9cj1.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Grapes\"));\nconsole.log(check_str(\"Mango\"));\nconsole.log(check_str(\"Pineapple\"));\nconsole.log(check_str(\"Cherry\"));\nconsole.log(check_str(\"Strawberry\"));\nconsole.log(check_str(\"Watermelon\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Pear\"));\nconsole.log(check_str(\"Kiwi\"));\nconsole.log(check_str(\"Lemon\"));\nconsole.log(check_str(\"Coconut\"));\nconsole.log(check_str(\"Papaya\"));\nconsole.log(check_str(\"Plum\"));\nconsole.log(check_str(\"Avocado\"));\nconsole.log(check_str(\"Guava\"));\nconsole.log(check_str(\"Pomegranate\"));\nconsole.log(check_str(\"Jackfruit\"));\nconsole.log(check_str(\"Apricot\"));\nconsole.log(check_str(\"Lychee\"));\nconsole.log(check_str(\"Fig\"));\nconsole.log(check_str(\"Date\"));\nconsole.log(check_str(\"Custard apple\"));\nconsole.log(check_str(\"Passion fruit\"));\nconsole.log(check_str(\"Tangerine\"));\nconsole.log(check_str(\"Lime\"));\nconsole.log(check_str(\"Grapefruit\"));\nconsole.log(check_str(\"Blueberry\"));\nconsole.log(check_str(\"Raspberry\"));\nconsole.log(check_str(\"Blackberry\"));\nconsole.log(check_str(\"Cranberry\"));\nconsole.log(check_str(\"Elderberry\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "../../../../tmp/tmppii4cpxh.ts(43,34): error TS1002: Unterminated string literal.\n../../../../tmp/tmppii4cpxh.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmppii4cpxh.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123465,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hi\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern: RegExp = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123465,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    return false;\n}\nconsole.log(check_str(\"United States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123465,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"guava\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"Germany\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "true\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123457,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"I\"));\nconsole.log(check_str(\"U\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "../../../../tmp/tmpb4c6v85i.ts(46,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmpb4c6v85i.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpb4c6v85i.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"United States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(`The given string ${string} starts with a vowel`);\n        return true;\n    } else {\n        console.log(`The given string ${string} does not start with a vowel`);\n        return false;\n    }\n}\n\ncheck_str(\"apple\");\ncheck_str(\"hello\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "The given string apple starts with a vowel\nThe given string hello does not start with a vowel\nThe given string annie starts with a vowel\nThe given string dawood does not start with a vowel\nThe given string Else starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" is starting with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" is not starting with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"IncludeHelp\");\ncheck_str(\"website\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "IncludeHelp is starting with a vowel\nwebsite is not starting with a vowel\nannie is starting with a vowel\ndawood is not starting with a vowel\nElse is starting with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\ncheck_str(\"EDUCBA\");\ncheck_str(\"india\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nEDUCBA starts with a vowel\nindia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "../../../../tmp/tmpvnsurqz5.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpvnsurqz5.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\nconsole.log(check_str(\"Uganda\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "true\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(\"^[aeiouAEIOU]\");\n  return patt.test(string);\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"invalid\"));\nconsole.log(check_str(\"valid\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123449,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    if (result) {\n        console.log(`The string ${string} starts with a vowel`);\n    } else {\n        console.log(`The string ${string} does not start with a vowel`);\n    }\n    return result;\n}\n\ncheck_str(\"Hello\");\ncheck_str(\"Apple\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "The string Hello does not start with a vowel\nThe string Apple starts with a vowel\nThe string annie starts with a vowel\nThe string dawood does not start with a vowel\nThe string Else starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt = /^[aeiou]/i;\n    var result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"sdfsdf\"));\nconsole.log(check_str(\"asdfsdf\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var patt = /^[aeiou]/i;\n    var res = patt.test(string);\n    return res;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" is starting with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" is not starting with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"India\");\ncheck_str(\"united states\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "India is starting with a vowel\nunited states is starting with a vowel\nannie is starting with a vowel\ndawood is not starting with a vowel\nElse is starting with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"grapefruit\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx2s6pxdz.js:48:12)\n    at Object.<anonymous> (/tmp/tmpx2s6pxdz.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"A\"));\nconsole.log(check_str(\"a\"));\nconsole.log(check_str(\"E\"));\nconsole.log(check_str(\"e\"));\nconsole.log(check_str(\"I\"));\nconsole.log(check_str(\"i\"));\nconsole.log(check_str(\"O\"));\nconsole.log(check_str(\"o\"));\nconsole.log(check_str(\"U\"));\nconsole.log(check_str(\"u\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "false\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regex = /^[aeiou]/i;\n    if (regex.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"check\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  return patt.test(string);\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"United\"));\nconsole.log(check_str(\"States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (string.match(pattern)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"eabcd\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hi\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcde\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log(check_str(\"abcdE\"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"glove\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123466,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"India\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"Germany\"));\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "../../../../tmp/tmp74c82npj.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp74c82npj.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Mango\"));\nconsole.log(check_str(\"Grapes\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Pineapple\"));\nconsole.log(check_str(\"Watermelon\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"dragonfruit\"));\nconsole.log(check_str(\"elderberry\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"melon\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "../../../../tmp/tmp2ivltw5n.ts(46,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmp2ivltw5n.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp2ivltw5n.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hi\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"Germany\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123446,
      "stdout": "../../../../tmp/tmpo358uspg.ts(39,31): error TS1002: Unterminated string literal.\n../../../../tmp/tmpo358uspg.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpo358uspg.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"check\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" is starting with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" is not starting with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "United States is starting with a vowel\naustralia is starting with a vowel\nannie is starting with a vowel\ndawood is not starting with a vowel\nElse is starting with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiouAEIOU]/;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"eUnited States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"hello apple\"));\nconsole.log(check_str(\"hello Apple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"glove\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123468,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"cranberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"st\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123469,
      "stdout": "../../../../tmp/tmptf3zgl56.ts(45,26): error TS1002: Unterminated string literal.\n../../../../tmp/tmptf3zgl56.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmptf3zgl56.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt1 = /^[aeiou]/i;\n    let result = patt1.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    return patt.test(string);\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    return false;\n}\n\nconsole.log(check_str(\"united\"));\nconsole.log(check_str(\"states\"));\nconsole.log(check_str(\"india\"));\nconsole.log(check_str(\"america\"));\nconsole.log(check_str(\"united states of america\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\nfalse\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"australia\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"Germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123459,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regex = /^[aeiou]/i;\n    if (regex.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"guava\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiouAEIOU]/;\n  let result = patt.test(string);\n  return result;\n}\nconsole.log(check_str(\"United States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"Germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "false\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"peach\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123451,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "false\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "../../../../tmp/tmprmwuofn5.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmprmwuofn5.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    var regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        console.log(string + \" starts with a vowel\");\n        return true;\n    } else {\n        console.log(string + \" does not start with a vowel\");\n        return false;\n    }\n}\ncheck_str(\"United States\");\ncheck_str(\"australia\");\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "United States starts with a vowel\naustralia starts with a vowel\nannie starts with a vowel\ndawood does not start with a vowel\nElse starts with a vowel\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"abc\"));\nconsole.log(check_str(\"aabc\"));\nconsole.log(check_str(\"abcde\"));\nconsole.log(check_str(\"abcd\"));\nconsole.log(check_str(\"abcd\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\nconsole.log(check_str(\"korea\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = /^[aeiou]/i;\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regexp = new RegExp(\"^[aeiou]\");\n    if (regexp.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123471,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5p7q_ee1.js:21:12)\n    at Object.<anonymous> (/tmp/tmp5p7q_ee1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"india\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"invalid\"));\nconsole.log(check_str(\"valid\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  return patt.test(string);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123452,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let regex = /^[aeiouAEIOU]/;\n    if (regex.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"eUnited States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"globe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123472,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  return patt.test(string);\n}\nconsole.log(check_str(\"United States\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123473,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = new RegExp(/^[aeiou]/i);\n    return patt.test(string);\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123473,
      "stdout": "false\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiouAEIOU]/;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"custard apple\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123473,
      "stdout": "../../../../tmp/tmprq80d1b5.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmprq80d1b5.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"Iphone\"));\nconsole.log(check_str(\"iPad\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"hello\"));\nconsole.log(check_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123473,
      "stdout": "../../../../tmp/tmp3ile9map.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp3ile9map.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123463,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    if (patt.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"fig\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"date\"));\nconsole.log(check_str(\"dragonfruit\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"mangosteen\"));\nconsole.log(check_str(\"olive\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"quince\"));\nconsole.log(check_str(\"raspberry\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"ugli\"));\nconsole.log(check_str(\"nectarine\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"cantaloupe\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapes\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"grapes\"));\nconsole.log(check_str(\"pineapple\"));\nconsole.log(check_str(\"peach\"));\nconsole.log(check_str(\"strawberry\"));\nconsole.log(check_str(\"avocado\"));\nconsole.log(check_str(\"guava\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"blueberry\"));\nconsole.log(check_str(\"blackberry\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"cherry\"));\nconsole.log(check_str(\"apricot\"));\nconsole.log(check_str(\"pear\"));\nconsole.log(check_str(\"plum\"));\nconsole.log(check_str(\"kiwi\"));\nconsole.log(check_str(\"papaya\"));\nconsole.log(check_str(\"lemon\"));\nconsole.log(check_str(\"lime\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"grapefruit\"));\nconsole.log(check_str(\"cantaloupe\"));\nconsole.log(check_str(\"honeydew\"));\nconsole.log(check_str(\"jackfruit\"));\nconsole.log(check_str(\"lychee\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"pomegranate\"));\nconsole.log(check_str(\"tangerine\"));\nconsole.log(check_str(\"watermelon\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"coconut\"));\nconsole.log(check_str(\"d\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123473,
      "stdout": "../../../../tmp/tmp9p8j8b8f.ts(43,25): error TS1002: Unterminated string literal.\n../../../../tmp/tmp9p8j8b8f.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmp9p8j8b8f.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"mango\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "false\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"banana\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"pineapple\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = /^[aeiou]/i;\n  let result = patt.test(string);\n  return result;\n}\n\nconsole.log(check_str(\"United States\"));\nconsole.log(check_str(\"egypt\"));\nconsole.log(check_str(\"germany\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"elephant\")\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "../../../../tmp/tmpjzcfx5r9.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmpjzcfx5r9.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let pattern = /^[aeiou]/i;\n    if (pattern.test(string)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"elephant\"));\nconsole.log(check_str(\"I\"));\nconsole.log(check_str(\"A\"));\nconsole.log(check_str(\"E\"));\nconsole.log(check_str(\"O\"));\nconsole.log(check_str(\"U\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n  let patt = new RegExp(/^[aeiou]/i);\n  return patt.test(string);\n}\n\nconsole.log(check_str(\"India\"));\nconsole.log(check_str(\"united states\"));\nconsole.log(check_str(\"australia\"));\nconsole.log(check_str(\"uk\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"This is a string\"));\nconsole.log(check_str(\"This is a string\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123460,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"world\"));\nconsole.log(check_str(\"orange\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\nconsole.log(check_str(\"hello\"));\nconsole.log(check_str(\"apple\"));\nconsole.log(check_str(\"orange\"));\nconsole.log(check_str(\"banana\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1665510207,
      "stdout": "false\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given string is starting with a vowel or not using regex.\nfunction check_str(string: string): boolean {\n    let patt = /^[aeiou]/i;\n    let result = patt.test(string);\n    return result;\n}\n\nconsole.log(check_str(\"Hello\"));\nconsole.log(check_str(\"World\"));\nconsole.log(check_str(\"Apple\"));\nconsole.log(check_str(\"Orange\"));\nconsole.log(check_str(\"Banana\"));\nconsole.log(check_str(\"Mango\"));\nconsole.log(check_str(\"Grapes\"));\nconsole.log(check_str(\"Peach\"));\nconsole.log(check_str(\"Pineapple\"));\nconsole.log(check_str(\"Cherry\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_str;\n  assert.deepEqual(candidate(\"annie\"),true);\n  assert.deepEqual(candidate(\"dawood\"),false);\n  assert.deepEqual(candidate(\"Else\"),true);\n}\n\ntest();",
      "timestamp": 1666123474,
      "stdout": "false\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
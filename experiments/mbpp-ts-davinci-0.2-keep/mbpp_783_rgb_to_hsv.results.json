{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "ts",
  "prompt": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let r2: number, g2: number, b2: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n\n    if (diff == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / diff) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / diff) + 2);\n    } else {\n        h = 60 * (((r1 - g1) / diff) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (diff / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmplsjiydce.js:41:12)\n    at Object.<anonymous> (/tmp/tmplsjiydce.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = cmax;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (delta == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = (cmax * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp3wfnrsyi.js:40:12)\n    at Object.<anonymous> (/tmp/tmp3wfnrsyi.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfnh6n78p.js:35:12)\n    at Object.<anonymous> (/tmp/tmpfnh6n78p.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgjqvv8gt.js:41:12)\n    at Object.<anonymous> (/tmp/tmpgjqvv8gt.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * ((g - b) / diff);\n    } else if (max == g) {\n        h = 60 * ((b - r) / diff) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / diff) + 240;\n    }\n\n    if (h < 0) {\n        h += 360;\n    }\n\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = diff / max;\n    }\n\n    v = max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp96gsys14.js:40:12)\n    at Object.<anonymous> (/tmp/tmp96gsys14.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h: number;\n    let s: number;\n    let v: number;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfz8so32m.js:40:12)\n    at Object.<anonymous> (/tmp/tmpfz8so32m.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgl_b1s2i.js:36:12)\n    at Object.<anonymous> (/tmp/tmpgl_b1s2i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpihbstrxj.js:39:12)\n    at Object.<anonymous> (/tmp/tmpihbstrxj.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b);\n  let min = Math.min(r, g, b);\n  let h, s, v = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n    }\n\n    h /= 6;\n  }\n\n  return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpbj88nwwn.js:33:12)\n    at Object.<anonymous> (/tmp/tmpbj88nwwn.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpihbstrxj.js:39:12)\n    at Object.<anonymous> (/tmp/tmpihbstrxj.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0)\n        h = 0;\n    else if (c_max == r_prime)\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    else if (c_max == g_prime)\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    else\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n\n    if (c_max == 0)\n        s = 0;\n    else\n        s = delta / c_max;\n\n    v = c_max;\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpp9z0ct5h.js:31:12)\n    at Object.<anonymous> (/tmp/tmpp9z0ct5h.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    v = max;\n    const delta = max - min;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h = Math.round(h * 60);\n    if (h < 0) {\n        h += 360;\n    }\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp24kc97o5.js:44:12)\n    at Object.<anonymous> (/tmp/tmp24kc97o5.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpulkfbs_6.js:35:12)\n    at Object.<anonymous> (/tmp/tmpulkfbs_6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = 0;\n    let max: number = 0;\n    let delta: number = 0;\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n\n    delta = max - min;\n\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return {\n            h: h,\n            s: s,\n            v: v\n        };\n    }\n\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n\n    if (h < 0) {\n        h += 360;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwhepvwb_.js:50:12)\n    at Object.<anonymous> (/tmp/tmpwhepvwb_.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = cmax;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = v * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvczkp1l0.js:40:12)\n    at Object.<anonymous> (/tmp/tmpvczkp1l0.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let delta: number = max - min;\n\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        if (g >= b) {\n            h = 60 * ((g - b) / delta);\n        } else {\n            h = 60 * ((g - b) / delta) + 360;\n        }\n    } else if (max == g) {\n        h = 60 * ((b - r) / delta) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / delta) + 240;\n    }\n\n    v = max;\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp5b0lg8sd.js:36:12)\n    at Object.<anonymous> (/tmp/tmp5b0lg8sd.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp9e91ylo1.js:40:12)\n    at Object.<anonymous> (/tmp/tmp9e91ylo1.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpulkfbs_6.js:35:12)\n    at Object.<anonymous> (/tmp/tmpulkfbs_6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp5_s3ebb9.js:33:12)\n    at Object.<anonymous> (/tmp/tmp5_s3ebb9.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6zyo7bp3.js:36:12)\n    at Object.<anonymous> (/tmp/tmp6zyo7bp3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number, delta: number;\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpexkyhp82.js:36:12)\n    at Object.<anonymous> (/tmp/tmpexkyhp82.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1: number = r / 255;\n    let g1: number = g / 255;\n    let b1: number = b / 255;\n    let cmax: number = Math.max(r1, g1, b1);\n    let cmin: number = Math.min(r1, g1, b1);\n    let delta: number = cmax - cmin;\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpdr5yr9ta.js:40:12)\n    at Object.<anonymous> (/tmp/tmpdr5yr9ta.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, delta: number;\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    delta = cmax - cmin;\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r1)\n        h = (60 * (((g1 - b1) / delta) % 6)) % 360;\n    else if (cmax == g1)\n        h = (60 * (((b1 - r1) / delta) + 2)) % 360;\n    else\n        h = (60 * (((r1 - g1) / delta) + 4)) % 360;\n    if (cmax == 0)\n        s = 0;\n    else\n        s = (delta / cmax) * 100;\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpe6rs9wsy.js:34:12)\n    at Object.<anonymous> (/tmp/tmpe6rs9wsy.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let rr: number, gg: number, bb: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n    v = cmax;\n\n    if (diff == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / diff) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / diff) + 2);\n    } else {\n        h = 60 * (((r1 - g1) / diff) + 4);\n    }\n\n    if (diff == 0) {\n        s = 0;\n    } else {\n        s = (diff / cmax);\n    }\n\n    h = Math.round(h);\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n\n    return {h, s, v};\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpm4v650iv.js:40:12)\n    at Object.<anonymous> (/tmp/tmpm4v650iv.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0hns9l33.js:39:12)\n    at Object.<anonymous> (/tmp/tmp0hns9l33.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpeas5alu1.js:36:12)\n    at Object.<anonymous> (/tmp/tmpeas5alu1.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp3k4nuab4.js:40:12)\n    at Object.<anonymous> (/tmp/tmp3k4nuab4.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    }\n    else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    }\n    else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpzelrhbvc.js:36:12)\n    at Object.<anonymous> (/tmp/tmpzelrhbvc.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, diff: number;\n    let r2: number, g2: number, b2: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    diff = cmax - cmin;\n\n    if (diff == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / diff) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / diff) + 2);\n    } else {\n        h = 60 * (((r1 - g1) / diff) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (diff / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmplsjiydce.js:41:12)\n    at Object.<anonymous> (/tmp/tmplsjiydce.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6r4wb2i7.js:35:12)\n    at Object.<anonymous> (/tmp/tmp6r4wb2i7.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp55qn8ob5.js:40:12)\n    at Object.<anonymous> (/tmp/tmp55qn8ob5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b);\n  let min = Math.min(r, g, b);\n  let h, s, v = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0v27lon0.js:33:12)\n    at Object.<anonymous> (/tmp/tmp0v27lon0.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number;\n    let s: number;\n    let v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max === min) {\n        h = 0;\n    } else if (max === r) {\n        h = (60 * ((g - b) / diff) + 360) % 360;\n    } else if (max === g) {\n        h = (60 * ((b - r) / diff) + 120) % 360;\n    } else if (max === b) {\n        h = (60 * ((r - g) / diff) + 240) % 360;\n    }\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = (diff / max) * 100;\n    }\n    v = max * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 25500\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpienscx0a.js:33:12)\n    at Object.<anonymous> (/tmp/tmpienscx0a.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 25500 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * ((g - b) / diff);\n    } else if (max == g) {\n        h = 60 * ((b - r) / diff) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / diff) + 240;\n    }\n    if (h < 0) {\n        h += 360;\n    }\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = 1 - (min / max);\n    }\n    v = max;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpvdzw0da_.js:34:12)\n    at Object.<anonymous> (/tmp/tmpvdzw0da_.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgl_b1s2i.js:36:12)\n    at Object.<anonymous> (/tmp/tmpgl_b1s2i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h: number, s: number, v: number;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else if (b == max) {\n        h = 4 + (r - g) / delta;\n    }\n    h = Math.round(h * 60);\n    if (h < 0) {\n        h += 360;\n    }\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8yy7e0a2.js:44:12)\n    at Object.<anonymous> (/tmp/tmp8yy7e0a2.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp2pjxrbgc.js:39:12)\n    at Object.<anonymous> (/tmp/tmp2pjxrbgc.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpmefzit28.js:40:12)\n    at Object.<anonymous> (/tmp/tmpmefzit28.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfnh6n78p.js:35:12)\n    at Object.<anonymous> (/tmp/tmpfnh6n78p.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgjqvv8gt.js:41:12)\n    at Object.<anonymous> (/tmp/tmpgjqvv8gt.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    let delta = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = 1 - min / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else if (max == r && g >= b) {\n        h = 60 * ((g - b) / delta);\n    } else if (max == r && g < b) {\n        h = 60 * ((g - b) / delta) + 360;\n    } else if (max == g) {\n        h = 60 * ((b - r) / delta) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / delta) + 240;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpc1jcwvkj.js:37:12)\n    at Object.<anonymous> (/tmp/tmpc1jcwvkj.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpnrbgho7z.js:38:12)\n    at Object.<anonymous> (/tmp/tmpnrbgho7z.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6zyo7bp3.js:36:12)\n    at Object.<anonymous> (/tmp/tmp6zyo7bp3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1: number = r / 255;\n    let g1: number = g / 255;\n    let b1: number = b / 255;\n    let h: number, s: number, v: number;\n    let min: number = Math.min(r1, g1, b1);\n    let max: number = Math.max(r1, g1, b1);\n    let delta: number = max - min;\n    v = max;\n    if (delta == 0) {\n        h = 0;\n        s = 0;\n    } else {\n        s = delta / max;\n        let del_r: number = (((max - r1) / 6) + (delta / 2)) / delta;\n        let del_g: number = (((max - g1) / 6) + (delta / 2)) / delta;\n        let del_b: number = (((max - b1) / 6) + (delta / 2)) / delta;\n        if (r1 == max) {\n            h = del_b - del_g;\n        } else if (g1 == max) {\n            h = (1 / 3) + del_r - del_b;\n        } else if (b1 == max) {\n            h = (2 / 3) + del_g - del_r;\n        }\n        if (h < 0) {\n            h += 1;\n        }\n        if (h > 1) {\n            h -= 1;\n        }\n    }\n    h = Math.round(h * 360);\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6laffe74.js:48:12)\n    at Object.<anonymous> (/tmp/tmp6laffe74.js:52:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpp_or2_l4.js:36:12)\n    at Object.<anonymous> (/tmp/tmpp_or2_l4.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255, g /= 255, b /= 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwwnujpvw.js:30:12)\n    at Object.<anonymous> (/tmp/tmpwwnujpvw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n\n    delta = max - min;\n\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp9f45ex7u.js:35:12)\n    at Object.<anonymous> (/tmp/tmp9f45ex7u.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h: number;\n    let s: number;\n    let v: number;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp7pxm2z8b.js:40:12)\n    at Object.<anonymous> (/tmp/tmp7pxm2z8b.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    let delta = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpoe5xn1v6.js:42:12)\n    at Object.<anonymous> (/tmp/tmpoe5xn1v6.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let hue = 0;\n    if (delta == 0) {\n        hue = 0;\n    } else if (cmax == r1) {\n        hue = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        hue = 60 * (((b1 - r1) / delta) + 2);\n    } else {\n        hue = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    let saturation = 0;\n    if (cmax == 0) {\n        saturation = 0;\n    } else {\n        saturation = delta / cmax;\n    }\n\n    let value = cmax;\n\n    return {\n        hue: hue,\n        saturation: saturation,\n        value: value\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  hue: 0,\n  saturation: 0,\n  value: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpz0b5o5qj.js:39:12)\n    at Object.<anonymous> (/tmp/tmpz0b5o5qj.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { hue: 0, saturation: 0, value: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgjqvv8gt.js:41:12)\n    at Object.<anonymous> (/tmp/tmpgjqvv8gt.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var rr, gg, bb,\n        r = r / 255,\n        g = g / 255,\n        b = b / 255,\n        h, s,\n        v = Math.max(r, g, b),\n        diff = v - Math.min(r, g, b),\n        diffc = function (c: number) {\n            return (v - c) / 6 / diff + 1 / 2;\n        };\n\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(r);\n        gg = diffc(g);\n        bb = diffc(b);\n\n        if (r === v) {\n            h = bb - gg;\n        } else if (g === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (b === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp5lvdgx64.js:39:12)\n    at Object.<anonymous> (/tmp/tmp5lvdgx64.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r1: number, g1: number, b1: number;\n    let cmax: number, cmin: number, delta: number;\n\n    r1 = r / 255;\n    g1 = g / 255;\n    b1 = b / 255;\n\n    cmax = Math.max(r1, g1, b1);\n    cmin = Math.min(r1, g1, b1);\n    delta = cmax - cmin;\n\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r1)\n        h = 60 * (((g1 - b1) / delta) % 6);\n    else if (cmax == g1)\n        h = 60 * (((b1 - r1) / delta) + 2);\n    else\n        h = 60 * (((r1 - g1) / delta) + 4);\n\n    if (cmax == 0)\n        s = 0;\n    else\n        s = (delta / cmax) * 100;\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpr00vx3gh.js:34:12)\n    at Object.<anonymous> (/tmp/tmpr00vx3gh.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h: number;\n    let s: number;\n    let v: number;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpfrt_p4j1.js:40:12)\n    at Object.<anonymous> (/tmp/tmpfrt_p4j1.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgl_b1s2i.js:36:12)\n    at Object.<anonymous> (/tmp/tmpgl_b1s2i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    } else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    } else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp9e91ylo1.js:40:12)\n    at Object.<anonymous> (/tmp/tmp9e91ylo1.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0hns9l33.js:39:12)\n    at Object.<anonymous> (/tmp/tmp0hns9l33.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n    if (max == min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpn0cot8d5.js:33:12)\n    at Object.<anonymous> (/tmp/tmpn0cot8d5.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r === max) {\n        h = (g - b) / delta;\n    } else if (g === max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpc8m1n0hm.js:36:12)\n    at Object.<anonymous> (/tmp/tmpc8m1n0hm.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h: number, s: number, v: number;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp9axcmnq7.js:42:12)\n    at Object.<anonymous> (/tmp/tmp9axcmnq7.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n\n    let delta = c_max - c_min;\n\n    let h: number;\n    let s: number;\n    let v: number;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpsjitjsau.js:40:12)\n    at Object.<anonymous> (/tmp/tmpsjitjsau.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    } else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmphw_n52at.js:33:12)\n    at Object.<anonymous> (/tmp/tmphw_n52at.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0, 1 ],\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0hns9l33.js:39:12)\n    at Object.<anonymous> (/tmp/tmp0hns9l33.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123492,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6zyo7bp3.js:36:12)\n    at Object.<anonymous> (/tmp/tmp6zyo7bp3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let min: number = Math.min(r, g, b);\n    let max: number = Math.max(r, g, b);\n    let delta: number = max - min;\n    v = max;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgl_b1s2i.js:36:12)\n    at Object.<anonymous> (/tmp/tmpgl_b1s2i.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpgjqvv8gt.js:41:12)\n    at Object.<anonymous> (/tmp/tmpgjqvv8gt.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = (60 * ((g - b) / diff) + 360) % 360;\n    } else if (max == g) {\n        h = (60 * ((b - r) / diff) + 120) % 360;\n    } else if (max == b) {\n        h = (60 * ((r - g) / diff) + 240) % 360;\n    }\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = 1 - min / max;\n    }\n    v = max;\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwqhoo9fe.js:33:12)\n    at Object.<anonymous> (/tmp/tmpwqhoo9fe.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n\n    let s = 0;\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = delta / cmax;\n    }\n\n    let v = cmax;\n\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmphmtj410f.js:35:12)\n    at Object.<anonymous> (/tmp/tmphmtj410f.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp_okjz2dh.js:40:12)\n    at Object.<anonymous> (/tmp/tmp_okjz2dh.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number;\n    let delta: number;\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    v = c_max;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp1u_j20hd.js:41:12)\n    at Object.<anonymous> (/tmp/tmp1u_j20hd.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    } else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    } else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    } else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    } else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpd2ul3mnw.js:36:12)\n    at Object.<anonymous> (/tmp/tmpd2ul3mnw.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max === min) {\n        h = 0;\n    } else if (max === r) {\n        h = (60 * ((g - b) / diff) + 360) % 360;\n    } else if (max === g) {\n        h = (60 * ((b - r) / diff) + 120) % 360;\n    } else if (max === b) {\n        h = (60 * ((r - g) / diff) + 240) % 360;\n    }\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = (diff / max) * 100;\n    }\n    v = max * 100;\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 25500\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp2if7wxc2.js:37:12)\n    at Object.<anonymous> (/tmp/tmp2if7wxc2.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 25500 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpihbstrxj.js:39:12)\n    at Object.<anonymous> (/tmp/tmpihbstrxj.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    v = max;\n    const delta = max - min;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = 1 - min / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = (60 * ((g - b) / delta) + 360) % 360;\n    } else if (max == g) {\n        h = (60 * ((b - r) / delta) + 120) % 360;\n    } else if (max == b) {\n        h = (60 * ((r - g) / delta) + 240) % 360;\n    }\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpq4r3cnn_.js:38:12)\n    at Object.<anonymous> (/tmp/tmpq4r3cnn_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta != 0) {\n        if (c_max == r_prime) {\n            h = 60 * (((g_prime - b_prime) / delta) % 6);\n        } else if (c_max == g_prime) {\n            h = 60 * (((b_prime - r_prime) / delta) + 2);\n        } else if (c_max == b_prime) {\n            h = 60 * (((r_prime - g_prime) / delta) + 4);\n        }\n    }\n\n    if (c_max != 0) {\n        s = delta / c_max;\n    }\n\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpdce041p_.js:31:12)\n    at Object.<anonymous> (/tmp/tmpdce041p_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return [h, s, v];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510550,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpncr473vr.js:40:12)\n    at Object.<anonymous> (/tmp/tmpncr473vr.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let delta: number = max - min;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * (((g - b) / delta) % 6);\n    } else if (max == g) {\n        h = 60 * (((b - r) / delta) + 2);\n    } else if (max == b) {\n        h = 60 * (((r - g) / delta) + 4);\n    }\n    v = max / 255;\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmphh2uu879.js:33:12)\n    at Object.<anonymous> (/tmp/tmphh2uu879.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n  let h: number = 0;\n  let s: number = 0;\n  let v: number = 0;\n  let max: number = Math.max(r, g, b);\n  let min: number = Math.min(r, g, b);\n  let diff: number = max - min;\n  if (max == min) {\n    h = 0;\n  } else if (max == r) {\n    h = 60 * ((g - b) / diff);\n  } else if (max == g) {\n    h = 60 * ((b - r) / diff) + 120;\n  } else if (max == b) {\n    h = 60 * ((r - g) / diff) + 240;\n  }\n  if (h < 0) {\n    h += 360;\n  }\n  if (max == 0) {\n    s = 0;\n  } else {\n    s = 1 - (min / max);\n  }\n  v = max / 255;\n  return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp8w3vbccs.js:36:12)\n    at Object.<anonymous> (/tmp/tmp8w3vbccs.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r_prime = r / 255;\n    let g_prime = g / 255;\n    let b_prime = b / 255;\n\n    let c_max = Math.max(r_prime, g_prime, b_prime);\n    let c_min = Math.min(r_prime, g_prime, b_prime);\n    let delta = c_max - c_min;\n\n    let h = 0;\n    let s = 0;\n    let v = c_max;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else if (c_max == b_prime) {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp0hns9l33.js:39:12)\n    at Object.<anonymous> (/tmp/tmp0hns9l33.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h, s, v;\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    v = max;\n    let delta = max - min;\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = delta / max;\n    }\n    if (delta == 0) {\n        h = 0;\n    } else {\n        if (r == max) {\n            h = (g - b) / delta;\n        } else if (g == max) {\n            h = 2 + (b - r) / delta;\n        } else {\n            h = 4 + (r - g) / delta;\n        }\n    }\n    h = Math.round(h * 60);\n    if (h < 0) {\n        h += 360;\n    }\n    s = Math.round(s * 100);\n    v = Math.round(v * 100);\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpwzley3i8.js:46:12)\n    at Object.<anonymous> (/tmp/tmpwzley3i8.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    var rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpymasium6.js:44:12)\n    at Object.<anonymous> (/tmp/tmpymasium6.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n    if (max != 0) {\n        s = delta / max;\n    } else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max) {\n        h = (g - b) / delta;\n    } else if (g == max) {\n        h = 2 + (b - r) / delta;\n    } else {\n        h = 4 + (r - g) / delta;\n    }\n    h *= 60;\n    if (h < 0) {\n        h += 360;\n    }\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmppn76b74l.js:35:12)\n    at Object.<anonymous> (/tmp/tmppn76b74l.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    let h, s, v;\n\n    let min = Math.min(r, g, b);\n    let max = Math.max(r, g, b);\n    let delta = max - min;\n\n    if (max == 0)\n        s = 0;\n    else\n        s = (delta / max);\n\n    if (delta == 0)\n        h = 0;\n    else if (r == max)\n        h = (g - b) / delta;\n    else if (g == max)\n        h = 2 + (b - r) / delta;\n    else\n        h = 4 + (r - g) / delta;\n\n    h = Math.round(h * 60);\n    if (h < 0)\n        h += 360;\n    v = Math.round(max * 100);\n    s = Math.round(s * 100);\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp3ncxap2j.js:36:12)\n    at Object.<anonymous> (/tmp/tmp3ncxap2j.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rprime = r / 255;\n    let gprime = g / 255;\n    let bprime = b / 255;\n    let cmax = Math.max(rprime, gprime, bprime);\n    let cmin = Math.min(rprime, gprime, bprime);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == rprime) {\n        h = 60 * (((gprime - bprime) / delta) % 6);\n    }\n    else if (cmax == gprime) {\n        h = 60 * (((bprime - rprime) / delta) + 2);\n    }\n    else if (cmax == bprime) {\n        h = 60 * (((rprime - gprime) / delta) + 4);\n    }\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n    v = cmax * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp3gv6xhv5.js:36:12)\n    at Object.<anonymous> (/tmp/tmp3gv6xhv5.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number = 0;\n    let s: number = 0;\n    let v: number = 0;\n    let max: number = Math.max(r, g, b);\n    let min: number = Math.min(r, g, b);\n    let diff: number = max - min;\n    if (max == min) {\n        h = 0;\n    } else if (max == r) {\n        h = 60 * ((g - b) / diff);\n    } else if (max == g) {\n        h = 60 * ((b - r) / diff) + 120;\n    } else if (max == b) {\n        h = 60 * ((r - g) / diff) + 240;\n    }\n    if (h < 0) {\n        h = h + 360;\n    }\n    if (max == 0) {\n        s = 0;\n    } else {\n        s = (diff / max) * 100;\n    }\n    v = max * 100;\n    return { h: h, s: s, v: v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 25500\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp4kyxxb87.js:36:12)\n    at Object.<anonymous> (/tmp/tmp4kyxxb87.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 25500 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let r1 = r / 255;\n    let g1 = g / 255;\n    let b1 = b / 255;\n\n    let cmax = Math.max(r1, g1, b1);\n    let cmin = Math.min(r1, g1, b1);\n    let delta = cmax - cmin;\n    let h = 0;\n    let s = 0;\n    let v = 0;\n\n    if (delta == 0) {\n        h = 0;\n    }\n    else if (cmax == r1) {\n        h = 60 * (((g1 - b1) / delta) % 6);\n    }\n    else if (cmax == g1) {\n        h = 60 * (((b1 - r1) / delta) + 2);\n    }\n    else if (cmax == b1) {\n        h = 60 * (((r1 - g1) / delta) + 4);\n    }\n\n    if (cmax == 0) {\n        s = 0;\n    }\n    else {\n        s = (delta / cmax) * 100;\n    }\n\n    v = cmax * 100;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmps91z9aj4.js:40:12)\n    at Object.<anonymous> (/tmp/tmps91z9aj4.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        }else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpkeurn5zb.js:44:12)\n    at Object.<anonymous> (/tmp/tmpkeurn5zb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let rabs, gabs, babs, rr, gg, bb, h, s, v, diff, diffc, percentRoundFn;\n    rabs = r / 255;\n    gabs = g / 255;\n    babs = b / 255;\n    v = Math.max(rabs, gabs, babs),\n        diff = v - Math.min(rabs, gabs, babs);\n    diffc = c => (v - c) / 6 / diff + 1 / 2;\n    percentRoundFn = num => Math.round(num * 100) / 100;\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(rabs);\n        gg = diffc(gabs);\n        bb = diffc(babs);\n\n        if (rabs === v) {\n            h = bb - gg;\n        } else if (gabs === v) {\n            h = (1 / 3) + rr - bb;\n        } else if (babs === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: percentRoundFn(s * 100),\n        v: percentRoundFn(v * 100)\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1665510548,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 100\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmpjily12w8.js:44:12)\n    at Object.<anonymous> (/tmp/tmpjily12w8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 100 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let min: number, max: number, delta: number;\n\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    v = max;\n    delta = max - min;\n    if (max != 0)\n        s = delta / max;\n    else {\n        s = 0;\n        h = -1;\n        return { h, s, v };\n    }\n    if (r == max)\n        h = (g - b) / delta;\n    else if (g == max)\n        h = 2 + (b - r) / delta;\n    else\n        h = 4 + (r - g) / delta;\n    h *= 60;\n    if (h < 0)\n        h += 360;\n    return { h, s, v };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: NaN,\n  s: 0,\n  v: 255\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmplyfb4ekt.js:30:12)\n    at Object.<anonymous> (/tmp/tmplyfb4ekt.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: NaN, s: 0, v: 255 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nfunction rgb_to_hsv(r: number, g: number, b: number): any {\n    let h: number, s: number, v: number;\n    let r_prime: number, g_prime: number, b_prime: number;\n    let c_max: number, c_min: number, delta: number;\n\n    r_prime = r / 255;\n    g_prime = g / 255;\n    b_prime = b / 255;\n\n    c_max = Math.max(r_prime, g_prime, b_prime);\n    c_min = Math.min(r_prime, g_prime, b_prime);\n    delta = c_max - c_min;\n\n    if (delta == 0) {\n        h = 0;\n    } else if (c_max == r_prime) {\n        h = 60 * (((g_prime - b_prime) / delta) % 6);\n    } else if (c_max == g_prime) {\n        h = 60 * (((b_prime - r_prime) / delta) + 2);\n    } else {\n        h = 60 * (((r_prime - g_prime) / delta) + 4);\n    }\n\n    if (c_max == 0) {\n        s = 0;\n    } else {\n        s = delta / c_max;\n    }\n\n    v = c_max;\n\n    return {\n        h: h,\n        s: s,\n        v: v\n    };\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rgb_to_hsv;\n  assert.deepEqual(candidate(255, 255, 255),[0, 0.0, 100.0]);\n  assert.deepEqual(candidate(0, 215, 0),[120.0, 100.0, 84.31372549019608]);\n  assert.deepEqual(candidate(10, 215, 110),[149.26829268292684, 95.34883720930233, 84.31372549019608]);\n}\n\ntest();",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  h: 0,\n  s: 0,\n  v: 1\n}\n\nshould loosely deep-equal\n\n[\n  0,\n  0,\n  100\n]\n    at test (/tmp/tmp6yi7i3kt.js:40:12)\n    at Object.<anonymous> (/tmp/tmp6yi7i3kt.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { h: 0, s: 0, v: 1 },\n  expected: [ 0, 0, 100 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
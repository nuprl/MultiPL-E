{
  "name": "mbpp_97_frequency_lists",
  "language": "ts",
  "prompt": "//Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\nfunction frequency_lists(list1: number[][]): {[key: number]: number} {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = frequency_lists;\n  assert.deepEqual(candidate([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]]),{1: 1, 2: 3, 3: 1, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1});\n  assert.deepEqual(candidate([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]),{1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1});\n  assert.deepEqual(candidate([[20, 30, 40, 17], [18, 16, 14, 13], [10, 20, 30, 40]]),{20: 2, 30: 2, 40: 2, 17: 1, 18: 1, 16: 1, 14: 1, 13: 1, 10: 1});\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]]) {\n                result[list1[i][j]] += 1;\n            } else {\n                result[list1[i][j]] = 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let freq: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (freq[list1[i][j]]) {\n                freq[list1[i][j]] += 1;\n            }\n            else {\n                freq[list1[i][j]] = 1;\n            }\n        }\n    }\n    return freq;\n}\n",
    "    let dict: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (dict[list1[i][j]] === undefined) {\n                dict[list1[i][j]] = 1;\n            } else {\n                dict[list1[i][j]] += 1;\n            }\n        }\n    }\n    return dict;\n}\n",
    "    let dict: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (dict[list1[i][j]] == undefined) {\n                dict[list1[i][j]] = 1;\n            } else {\n                dict[list1[i][j]] += 1;\n            }\n        }\n    }\n    return dict;\n}\n",
    "    let frequency: {[key: number]: number} = {};\n    let flat_list: number[] = flatten(list1);\n    for (let i of flat_list) {\n        if (frequency[i]) {\n            frequency[i] += 1;\n        } else {\n            frequency[i] = 1;\n        }\n    }\n    return frequency;\n}\n",
    "    let dict: {[key: number]: number} = {};\n    for (let i: number = 0; i < list1.length; i++) {\n        for (let j: number = 0; j < list1[i].length; j++) {\n            if (dict[list1[i][j]]) {\n                dict[list1[i][j]] += 1;\n            } else {\n                dict[list1[i][j]] = 1;\n            }\n        }\n    }\n    return dict;\n}\n",
    "    let dict: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (list1[i][j] in dict) {\n                dict[list1[i][j]] += 1;\n            } else {\n                dict[list1[i][j]] = 1;\n            }\n        }\n    }\n    return dict;\n}\n",
    "    let freq_dict: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (freq_dict[list1[i][j]]) {\n                freq_dict[list1[i][j]] += 1;\n            } else {\n                freq_dict[list1[i][j]] = 1;\n            }\n        }\n    }\n    return freq_dict;\n}\n",
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]]) {\n                result[list1[i][j]] += 1;\n            } else {\n                result[list1[i][j]] = 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]]) {\n                result[list1[i][j]] += 1;\n            } else {\n                result[list1[i][j]] = 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let dict: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (dict[list1[i][j]]) {\n                dict[list1[i][j]] += 1;\n            } else {\n                dict[list1[i][j]] = 1;\n            }\n        }\n    }\n    return dict;\n}\n",
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]]) {\n                result[list1[i][j]]++;\n            } else {\n                result[list1[i][j]] = 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let freq_dict: {[key: number]: number} = {};\n    let flattened_list: number[] = list1.reduce((a, b) => a.concat(b), []);\n    for (let i = 0; i < flattened_list.length; i++) {\n        if (freq_dict[flattened_list[i]]) {\n            freq_dict[flattened_list[i]] += 1;\n        } else {\n            freq_dict[flattened_list[i]] = 1;\n        }\n    }\n    return freq_dict;\n}\n",
    "    let frequency: {[key: number]: number} = {};\n    for (let i: number = 0; i < list1.length; i++) {\n        for (let j: number = 0; j < list1[i].length; j++) {\n            if (frequency[list1[i][j]]) {\n                frequency[list1[i][j]] += 1;\n            } else {\n                frequency[list1[i][j]] = 1;\n            }\n        }\n    }\n    return frequency;\n}\n",
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]] == undefined) {\n                result[list1[i][j]] = 1;\n            } else {\n                result[list1[i][j]] += 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]]) {\n                result[list1[i][j]] += 1;\n            }\n            else {\n                result[list1[i][j]] = 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    const dict: {[key: number]: number} = {};\n    for (const list of list1) {\n        for (const num of list) {\n            if (dict[num] === undefined) {\n                dict[num] = 0;\n            }\n            dict[num] += 1;\n        }\n    }\n    return dict;\n}\n",
    "    let result: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (result[list1[i][j]]) {\n                result[list1[i][j]] += 1;\n            } else {\n                result[list1[i][j]] = 1;\n            }\n        }\n    }\n    return result;\n}\n",
    "    let freq_dict: {[key: number]: number} = {};\n    let flattened_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            flattened_list.push(list1[i][j]);\n        }\n    }\n    for (let i = 0; i < flattened_list.length; i++) {\n        if (freq_dict[flattened_list[i]]) {\n            freq_dict[flattened_list[i]] += 1;\n        } else {\n            freq_dict[flattened_list[i]] = 1;\n        }\n    }\n    return freq_dict;\n}\n",
    "    let dict: {[key: number]: number} = {};\n    for (let i = 0; i < list1.length; i++) {\n        for (let j = 0; j < list1[i].length; j++) {\n            if (dict[list1[i][j]]) {\n                dict[list1[i][j]] += 1;\n            } else {\n                dict[list1[i][j]] = 1;\n            }\n        }\n    }\n    return dict;\n}\n"
  ]
}
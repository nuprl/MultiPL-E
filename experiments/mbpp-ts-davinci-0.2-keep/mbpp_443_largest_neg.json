{
  "name": "mbpp_443_largest_neg",
  "language": "ts",
  "prompt": "//Write a python function to find the largest negative number from the given list.\nfunction largest_neg(list1: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_neg;\n  assert.deepEqual(candidate([1, 2, 3, -4, -6]),-6);\n  assert.deepEqual(candidate([1, 2, 3, -8, -9]),-9);\n  assert.deepEqual(candidate([1, 2, 3, 4, -1]),-1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n",
    "    let neg_list: number[] = list1.filter(function (num) {\n        return num < 0;\n    });\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n",
    "    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max.apply(null, neg_list);\n    }\n}\nconsole.log(largest_neg([12, -34, 40, -45, 50, -56, 60]));\n",
    "    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\n\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n",
    "    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var largest = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > largest) {\n                largest = neg_list[i];\n            }\n        }\n        return largest;\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\nconsole.log(largest_neg([1, 2, 3, 4, 5]));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        neg_list.sort();\n        return neg_list[0];\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4]));\n",
    "    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max: number = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nvar list1 = [1, 2, 3, -4, -5, -6, -7, -8, 9, 10];\nconsole.log(largest_neg(list1));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9]));\n\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([1, 2, -3, -4, 5, 6, -7, -8, 9, 10]));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\n",
    "    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nconsole.log(largest_neg([1, 2, -3, -4, -5, -6, -7, -8]));\n",
    "    var neg_list: number[] = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        var max = neg_list[0];\n        for (var i = 0; i < neg_list.length; i++) {\n            if (neg_list[i] > max) {\n                max = neg_list[i];\n            }\n        }\n        return max;\n    }\n}\nvar list1 = [12, -7, 5, 64, -14];\nconsole.log(\"Largest negative number is: \" + largest_neg(list1));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7]));\n",
    "    var max = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            if (list1[i] > max) {\n                max = list1[i];\n            }\n        }\n    }\n    return max;\n}\nvar list1 = [1, 2, -3, 4, -5, 6, -7, 8, 9];\nconsole.log(largest_neg(list1));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]));\n",
    "    var neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([1, 2, -3, -4, -5, -6, -7, -8, -9]));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    if (neg_list.length == 0) {\n        return 0;\n    }\n    else {\n        return Math.max(...neg_list);\n    }\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5]));\nconsole.log(largest_neg([1, 2, 3, 4, 5]));\n",
    "    let neg_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] < 0) {\n            neg_list.push(list1[i]);\n        }\n    }\n    neg_list.sort();\n    return neg_list[0];\n}\nconsole.log(largest_neg([-1, -2, -3, -4, -5, -6]));\n"
  ]
}
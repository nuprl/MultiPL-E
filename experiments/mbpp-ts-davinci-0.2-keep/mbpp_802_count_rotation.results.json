{
  "name": "mbpp_802_count_rotation",
  "language": "ts",
  "prompt": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpos6ode9p.js:14:12)\n    at Object.<anonymous> (/tmp/tmpos6ode9p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count = i + 1;\n      break;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpoi7270_x.js:14:12)\n    at Object.<anonymous> (/tmp/tmpoi7270_x.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2rn3onmq.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2rn3onmq.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0, high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i + 1] < arr[i]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count = i + 1;\n      break;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmps1e0vb4w.js:16:12)\n    at Object.<anonymous> (/tmp/tmps1e0vb4w.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0], min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxcehiras.js:15:12)\n    at Object.<anonymous> (/tmp/tmpxcehiras.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let count = 0;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count = i + 1;\n      break;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpos6ode9p.js:14:12)\n    at Object.<anonymous> (/tmp/tmpos6ode9p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let count = 0;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let min = arr[0];\n  let min_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      min_index = i;\n    }\n  }\n  return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpkmxgnj82.js:16:12)\n    at Object.<anonymous> (/tmp/tmpkmxgnj82.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count = i + 1;\n      break;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let i = 0;\n    while (i < arr.length - 1) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n            i++;\n        } else {\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2cnpas7l.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2cnpas7l.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0], min_index = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp099vap2u.js:15:12)\n    at Object.<anonymous> (/tmp/tmp099vap2u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let min_index = 0;\n  let min_element = arr[0];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min_element) {\n      min_element = arr[i];\n      min_index = i;\n    }\n  }\n  return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpum6b0lc7.js:16:12)\n    at Object.<anonymous> (/tmp/tmpum6b0lc7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpos6ode9p.js:14:12)\n    at Object.<anonymous> (/tmp/tmpos6ode9p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min_index = 0;\n    let min_value = arr[0];\n    for (let i = 0; i < n; i++) {\n        if (min_value > arr[i]) {\n            min_value = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124004,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmprq92ukgh.js:17:12)\n    at Object.<anonymous> (/tmp/tmprq92ukgh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpos6ode9p.js:14:12)\n    at Object.<anonymous> (/tmp/tmpos6ode9p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpos6ode9p.js:14:12)\n    at Object.<anonymous> (/tmp/tmpos6ode9p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvqo4ar1o.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvqo4ar1o.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  let min = arr[0];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      count = i;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp36_j2zpr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp36_j2zpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptgwb6ny5.js:14:12)\n    at Object.<anonymous> (/tmp/tmptgwb6ny5.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_rotation([3, 4, 5, 1, 2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp8o4jem3e.js:17:12)\n    at Object.<anonymous> (/tmp/tmp8o4jem3e.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    let n = arr.length;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124020,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124020,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpos6ode9p.js:14:12)\n    at Object.<anonymous> (/tmp/tmpos6ode9p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpfxvs22qn.js:17:12)\n    at Object.<anonymous> (/tmp/tmpfxvs22qn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvqo4ar1o.js:16:12)\n    at Object.<anonymous> (/tmp/tmpvqo4ar1o.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpzswnmrr9.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzswnmrr9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = low + Math.floor((high - low) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let count = 0;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let min = arr[0];\n  let min_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      min_index = i;\n    }\n  }\n  return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpkmxgnj82.js:16:12)\n    at Object.<anonymous> (/tmp/tmpkmxgnj82.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmphfkcxrof.js:14:12)\n    at Object.<anonymous> (/tmp/tmphfkcxrof.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        let mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxmynatlt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxmynatlt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124005,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmps1e0vb4w.js:16:12)\n    at Object.<anonymous> (/tmp/tmps1e0vb4w.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        if (arr[low] <= arr[high]) {\n            return low;\n        }\n        mid = Math.floor((low + high) / 2);\n        let next = (mid + 1) % arr.length;\n        let prev = (mid + arr.length - 1) % arr.length;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[high]) {\n            high = mid - 1;\n        } else if (arr[mid] >= arr[low]) {\n            low = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124019,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp0ij33crk.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0ij33crk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp72gfz2ui.js:16:12)\n    at Object.<anonymous> (/tmp/tmp72gfz2ui.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min = arr[0];\n    let min_index = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmps7z4nk3i.js:16:12)\n    at Object.<anonymous> (/tmp/tmps7z4nk3i.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let min_index = 0;\n    let min_value = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min_value) {\n            min_value = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpfw66bphz.js:16:12)\n    at Object.<anonymous> (/tmp/tmpfw66bphz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count = i + 1;\n      break;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmptw_qep2o.js:17:12)\n    at Object.<anonymous> (/tmp/tmptw_qep2o.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n    let n = arr.length;\n    let start = 0;\n    let end = n - 1;\n    let mid = 0;\n    while (start <= end) {\n        if (arr[start] <= arr[end]) {\n            return start;\n        }\n        mid = Math.floor((start + end) / 2);\n        let next = (mid + 1) % n;\n        let prev = (mid + n - 1) % n;\n        if (arr[mid] <= arr[next] && arr[mid] <= arr[prev]) {\n            return mid;\n        } else if (arr[mid] <= arr[end]) {\n            end = mid - 1;\n        } else if (arr[mid] >= arr[start]) {\n            start = mid + 1;\n        }\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124021,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
      "timestamp": 1666124006,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxmynatlt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxmynatlt.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
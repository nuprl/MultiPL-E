{
  "name": "mbpp_141_pancake_sort",
  "language": "ts",
  "prompt": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp9ojyni1y.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp9ojyni1y.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8ui1t4gh.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8ui1t4gh.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx == i) continue;\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmprawe545c.ts(11,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmprawe545c.ts(12,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpwhd90aab.ts(11,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpwhd90aab.ts(12,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpw8chp89w.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpw8chp89w.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpw8chp89w.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp__ol7c5k.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp__ol7c5k.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = Math.max(...nums.slice(0, n - i));\n        let maxIndex = nums.indexOf(max);\n        nums = flip(nums, maxIndex + 1);\n        nums = flip(nums, n - i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp19i48s_n.ts(7,16): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp19i48s_n.ts(8,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmppvbt33w_.ts(5,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmppvbt33w_.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppvbt33w_.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length;\n    while (i > 0) {\n        let max = nums.indexOf(Math.max(...nums.slice(0, i)));\n        if (max !== i - 1) {\n            nums = flip(nums, max);\n            nums = flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpzu57a97e.ts(7,20): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpzu57a97e.ts(8,20): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp4pw0x3ls.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp4pw0x3ls.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4pw0x3ls.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = find_max_index(nums, i);\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp0p7tuiaa.ts(4,21): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp0p7tuiaa.ts(6,7): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp0p7tuiaa.ts(7,7): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpeda50ket.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpeda50ket.ts(14,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpw8chp89w.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpw8chp89w.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpw8chp89w.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp8hjh_x03.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8hjh_x03.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8hjh_x03.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex === i) {\n            continue;\n        }\n        if (maxIndex > 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpdpvppj39.ts(16,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpdpvppj39.ts(18,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8ui1t4gh.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8ui1t4gh.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        if (maxIndex != 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpuglxajt5.ts(16,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuglxajt5.ts(18,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpw8chp89w.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpw8chp89w.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpw8chp89w.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result = nums.slice();\n    for (let i = 0; i < result.length; i++) {\n        let max = Math.max(...result.slice(0, result.length - i));\n        let maxIndex = result.indexOf(max);\n        result = flip(result, maxIndex);\n        result = flip(result, result.length - i - 1);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp7ieljg7c.ts(7,18): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp7ieljg7c.ts(8,18): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmppzfeneuh.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppzfeneuh.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp9gx06vwl.ts(12,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp9gx06vwl.ts(13,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max]) {\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpoa7shkcz.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpoa7shkcz.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp4pw0x3ls.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp4pw0x3ls.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4pw0x3ls.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0], max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index === i) {\n            i--;\n            continue;\n        }\n        if (max_index > 0) {\n            nums = flip(nums, max_index);\n        }\n        nums = flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp2tiau30n.ts(17,20): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp2tiau30n.ts(19,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n            result.push(max_index + 1);\n            result.push(i + 1);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpit5bjs44.ts(5,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpit5bjs44.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpit5bjs44.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx === i) {\n            continue;\n        }\n        let new_slice;\n        if (max_idx > 0) {\n            new_slice = nums.slice(0, max_idx + 1).reverse();\n            for (let j = 0; j <= max_idx; j++) {\n                nums[j] = new_slice[j];\n            }\n        }\n        new_slice = nums.slice(0, i + 1).reverse();\n        for (let j = 0; j <= i; j++) {\n            nums[j] = new_slice[j];\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpquwo1vc7.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpquwo1vc7.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = 0; i < nums.length; i++) {\n        let max = nums[0], maxIndex = 0;\n        for (let j = 0; j < nums.length - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpbuminwed.ts(11,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpbuminwed.ts(12,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpo52qdrne.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpo52qdrne.ts(14,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = i;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpo78stzlw.ts(11,7): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpo78stzlw.ts(12,7): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpv60skq9_.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpv60skq9_.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmppzfeneuh.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppzfeneuh.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = find_max_index(nums, i);\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp8mukqwbe.ts(4,21): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8mukqwbe.ts(5,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8mukqwbe.ts(6,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    const n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j < n - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpp5dlttna.ts(13,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp5dlttna.ts(14,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp_3l2si0p.ts(4,25): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmp_3l2si0p.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp_3l2si0p.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "../../../../tmp/tmpgxg60f_w.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpgxg60f_w.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length; i > 1; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp1oqcl8u3.ts(4,25): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmp1oqcl8u3.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp1oqcl8u3.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let len = nums.length;\n    for (let i = 0; i < len; i++) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j < len - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, len - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp8x6tour0.ts(13,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8x6tour0.ts(14,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 0; i--) {\n    let max = nums[0];\n    let maxIndex = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > max) {\n        max = nums[j];\n        maxIndex = j;\n      }\n    }\n    if (maxIndex !== i) {\n      flip(nums, maxIndex);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpsv106b4a.ts(13,7): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpsv106b4a.ts(14,7): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let len = nums.length;\n    for (let i = 0; i < len; i++) {\n        let max = Math.max(...nums.slice(0, len - i));\n        let max_index = nums.indexOf(max);\n        nums = flip(nums, max_index);\n        nums = flip(nums, len - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpfp8t5beo.ts(7,16): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpfp8t5beo.ts(8,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp4pw0x3ls.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp4pw0x3ls.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4pw0x3ls.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result = nums.slice();\n    for (let i = result.length - 1; i >= 0; i--) {\n        let max = Math.max(...result.slice(0, i + 1));\n        let max_index = result.indexOf(max);\n        result = flip(result, max_index);\n        result = flip(result, i);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp5cum43j7.ts(7,18): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp5cum43j7.ts(8,18): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j < n - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp5ilxbqoj.ts(13,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp5ilxbqoj.ts(14,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmptkm0ha7x.ts(4,25): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmptkm0ha7x.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmptkm0ha7x.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpmv24j9bn.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpmv24j9bn.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpdogjq_lo.ts(9,24): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpstlbeks2.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpstlbeks2.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex === i) {\n            continue;\n        }\n        if (maxIndex > 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpdpvppj39.ts(16,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpdpvppj39.ts(18,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp4pw0x3ls.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp4pw0x3ls.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4pw0x3ls.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 0; i--) {\n    let max = i;\n    for (let j = 0; j < i; j++) {\n      if (nums[j] > nums[max]) {\n        max = j;\n      }\n    }\n    if (max !== i) {\n      flip(nums, max);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp0kgjkrp0.ts(11,7): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp0kgjkrp0.ts(12,7): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmph3h1_qp4.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmph3h1_qp4.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp8rpw6lnk.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8rpw6lnk.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8rpw6lnk.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i > 0; i--) {\n    let maxIndex = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[maxIndex]) {\n        maxIndex = j;\n      }\n    }\n    flip(nums, maxIndex);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpfygsq29o.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpfygsq29o.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index === i) {\n            continue;\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmpghjngqda.ts(15,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpghjngqda.ts(16,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let max_index: number = nums.indexOf(Math.max(...nums));\n        let max_element: number = nums.splice(max_index, 1)[0];\n        nums.unshift(max_element);\n        result.push(max_index + 1);\n        nums.unshift(nums.pop());\n        result.push(nums.length);\n    }\n    return result;\n}\n\nconsole.log(pancake_sort([1, 5, 4, 3, 2]));\nconsole.log(pancake_sort([1, 2, 3]));\nconsole.log(pancake_sort([3, 2, 4, 1]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "[\n  2, 5, 2, 5, 2,\n  5, 2, 5, 2, 5\n]\n[ 3, 3, 2, 3, 2, 3 ]\n[\n  3, 4, 2, 4,\n  2, 4, 2, 4\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  5,\n  2,\n  5,\n  2,\n  5,\n  2,\n  5,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  15,\n  25,\n  38,\n  69,\n  79\n]\n    at test (/tmp/tmpod2w1__g.js:21:12)\n    at Object.<anonymous> (/tmp/tmpod2w1__g.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    2, 5, 2, 5, 2,\n    5, 2, 5, 2, 5\n  ],\n  expected: [ 15, 25, 38, 69, 79 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp4pw0x3ls.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp4pw0x3ls.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4pw0x3ls.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx == i) {\n            continue;\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmp18za3qew.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp18za3qew.ts(8,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp18za3qew.ts(9,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        if (maxIndex != 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpa61vtbcf.ts(16,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpa61vtbcf.ts(18,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp8rpw6lnk.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8rpw6lnk.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8rpw6lnk.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index === i - 1) {\n            continue;\n        }\n        if (max_index > 0) {\n            flip(nums, max_index);\n        }\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmplz03vgpb.ts(14,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmplz03vgpb.ts(16,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i > 0; i--) {\n    let max_idx = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmpd7l3noz6.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpd7l3noz6.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max(nums, i);\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpmr_3f6qj.ts(4,23): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmpmr_3f6qj.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpmr_3f6qj.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = max; i > 0; i--) {\n        let index: number = nums.indexOf(i);\n        if (index == i - 1) {\n            continue;\n        }\n        if (index > 0) {\n            result.push(index + 1);\n            nums = flip(nums, index + 1);\n        }\n        result.push(i);\n        nums = flip(nums, i);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp98xej442.ts(12,20): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp98xej442.ts(15,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    const result: number[] = [];\n    for (let i = nums.length - 1; i >= 0; i--) {\n        const max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n            result.push(max_index + 1);\n            result.push(i + 1);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp_16kvk3g.ts(5,27): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp_16kvk3g.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp_16kvk3g.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp10fp5h2c.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp10fp5h2c.ts(14,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp4pw0x3ls.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp4pw0x3ls.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4pw0x3ls.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp39za35oi.ts(12,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp39za35oi.ts(13,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmp4_aoqjag.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4_aoqjag.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmppzfeneuh.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppzfeneuh.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = find_max_index(nums, i);\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp8mukqwbe.ts(4,21): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8mukqwbe.ts(5,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8mukqwbe.ts(6,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmp4_aoqjag.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4_aoqjag.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpy2p4zll4.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpy2p4zll4.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpy2p4zll4.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8ui1t4gh.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8ui1t4gh.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n    let temp: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    let l: number;\n    let m: number;\n    let n: number;\n    let o: number;\n    let p: number;\n    let q: number;\n    let r: number;\n    let s: number;\n    let t: number;\n    let u: number;\n    let v: number;\n    let w: number;\n    let x: number;\n    let y: number;\n    let z: number;\n    let aa: number;\n    let bb: number;\n    let cc: number;\n    let dd: number;\n    let ee: number;\n    let ff: number;\n    let gg: number;\n    let hh: number;\n    let ii: number;\n    let jj: number;\n    let kk: number;\n    let ll: number;\n    let mm: number;\n    let nn: number;\n    let oo: number;\n    let pp: number;\n    let qq: number;\n    let rr: number;\n    let ss: number;\n    let tt: number;\n    let uu: number;\n    let vv: number;\n    let ww: number;\n    let xx: number;\n    let yy: number;\n    let zz: number;\n    let aaa: number;\n    let bbb: number;\n    let ccc: number;\n    let ddd: number;\n    let eee: number;\n    let fff: number;\n    let ggg: number;\n    let hhh: number;\n    let iii: number;\n    let jjj: number;\n    let kkk: number;\n    let lll: number;\n    let mmm: number;\n    let nnn: number;\n    let ooo: number;\n    let ppp\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpjvsh2hhi.ts(79,8): error TS1005: '}' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        if (max_index != n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmppga4vj7u.ts(12,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppga4vj7u.ts(13,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpykmhde3o.ts(11,16): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpykmhde3o.ts(12,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (let i = 0; i < nums.length - 1; i++) {\n      if (nums[i] > nums[i + 1]) {\n        sorted = false;\n        nums = flip(nums, i + 1);\n      }\n    }\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmp5tjpis9w.ts(9,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpdogjq_lo.ts(9,24): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let max_index = nums.indexOf(max);\n        nums = flip(nums, max_index);\n        nums = flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpzvwwa8t7.ts(6,16): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpzvwwa8t7.ts(7,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let max_index = nums.indexOf(Math.max(...nums));\n        if (max_index != nums.length - 1) {\n            result.push(max_index + 1);\n            nums = flip(nums, max_index);\n            result.push(nums.length - i);\n            nums = flip(nums, nums.length - i - 1);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpc3cce0xt.ts(9,20): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpc3cce0xt.ts(11,20): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpyzqz2ql4.ts(9,17): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    // Start from the complete\n    // array and one by one\n    // reduce current size by one\n    for (let curr_size = n; curr_size > 1; --curr_size) {\n        // Find index of the\n        // maximum element in\n        // arr[0..curr_size-1]\n        let mi = findMax(nums, curr_size);\n\n        // Move the maximum element\n        // to end of current array\n        // if it's not already at\n        // the end\n        if (mi != curr_size - 1) {\n            // To move at the end,\n            // first move maximum\n            // number to beginning\n            flip(nums, mi);\n\n            // Now move the maximum\n            // number to end by\n            // reversing current array\n            flip(nums, curr_size - 1);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmp1houshpa.ts(11,18): error TS2304: Cannot find name 'findMax'.\n../../../../tmp/tmp1houshpa.ts(21,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp1houshpa.ts(26,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n\n    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] > max_value) {\n            max_value = nums[i];\n            max_value_index = i;\n        }\n    }\n\n    result.push(max_value_index + 1);\n    result.push(max_index + 1);\n\n    return result;\n}\n\nconsole.log(pancake_sort([3, 2, 4, 1]));\nconsole.log(pancake_sort([1, 2, 3]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "[ 3, 4 ]\n[ 3, 3 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  15,\n  25,\n  38,\n  69,\n  79\n]\n    at test (/tmp/tmpmytyxduk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmytyxduk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 5 ],\n  expected: [ 15, 25, 38, 69, 79 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpjj8svpx_.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpjj8svpx_.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpzse0eak5.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpzse0eak5.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length; i > 1; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp1oqcl8u3.ts(4,25): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmp1oqcl8u3.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp1oqcl8u3.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpbb_baaac.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpbb_baaac.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpeda50ket.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpeda50ket.ts(14,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpmv24j9bn.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpmv24j9bn.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx === i) {\n            continue;\n        }\n        let new_slice;\n        if (max_idx > 0) {\n            new_slice = nums.slice(0, max_idx + 1).reverse();\n            for (let j = 0; j <= max_idx; j++) {\n                nums[j] = new_slice[j];\n            }\n        }\n        new_slice = nums.slice(0, i + 1).reverse();\n        for (let j = 0; j <= i; j++) {\n            nums[j] = new_slice[j];\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let curr_size = nums.length;\n    while (curr_size > 1) {\n        let max_idx = findMax(nums, curr_size);\n        if (max_idx != curr_size - 1) {\n            flip(nums, max_idx);\n            flip(nums, curr_size - 1);\n        }\n        curr_size--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpuqcn7kno.ts(5,23): error TS2304: Cannot find name 'findMax'.\n../../../../tmp/tmpuqcn7kno.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuqcn7kno.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmp66jved_9.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp66jved_9.ts(14,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx === i) {\n            continue;\n        }\n        let new_slice;\n        if (max_idx > 0) {\n            new_slice = flip(nums, max_idx + 1);\n        }\n        new_slice = flip(new_slice, i + 1);\n        nums = new_slice;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpaa13d0v2.ts(15,25): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpaa13d0v2.ts(17,21): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index === i) {\n            i--;\n        } else {\n            if (max_index > 0) {\n                nums = flip(nums, max_index);\n            }\n            nums = flip(nums, i);\n            i--;\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpkson3v81.ts(17,24): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpkson3v81.ts(19,20): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124234,
      "stdout": "../../../../tmp/tmpgxg60f_w.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpgxg60f_w.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmp4_aoqjag.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp4_aoqjag.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, nums.length - i);\n        flip(nums, max_index);\n        flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmp1ib4bv2t.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp1ib4bv2t.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp1ib4bv2t.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  let curr_size = nums.length;\n  while (curr_size > 1) {\n    let max_idx = findMax(nums, curr_size);\n    if (max_idx != curr_size - 1) {\n      flip(nums, max_idx);\n      flip(nums, curr_size - 1);\n    }\n    curr_size--;\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmprr13v1oo.ts(5,19): error TS2304: Cannot find name 'findMax'.\n../../../../tmp/tmprr13v1oo.ts(7,7): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmprr13v1oo.ts(8,7): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpjj8svpx_.ts(11,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpjj8svpx_.ts(12,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmppvbt33w_.ts(5,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmppvbt33w_.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppvbt33w_.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmppzfeneuh.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmppzfeneuh.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp8rpw6lnk.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8rpw6lnk.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8rpw6lnk.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmp3qpfj1sc.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp3qpfj1sc.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp3qpfj1sc.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max]) {\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124235,
      "stdout": "../../../../tmp/tmpoa7shkcz.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpoa7shkcz.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let max_index = nums.indexOf(max);\n        if (max_index == nums.length - i - 1) {\n            continue;\n        }\n        if (max_index != 0) {\n            result.push(max_index + 1);\n            nums = flip(nums, max_index + 1);\n        }\n        result.push(nums.length - i);\n        nums = flip(nums, nums.length - i);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpaem3ydo0.ts(12,20): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpaem3ydo0.ts(15,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i - 1) {\n            flip(nums, max_idx);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpfure19w9.ts(5,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmpfure19w9.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpfure19w9.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length - 1;\n    while (i > 0) {\n        let max_idx = find_max(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmp_a2xy64d.ts(5,23): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmp_a2xy64d.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp_a2xy64d.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp9ojyni1y.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp9ojyni1y.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpsfmd0s71.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpsfmd0s71.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = 0; i < nums.length; i++) {\n        let max_idx = find_max_idx(nums, i);\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpl6fht8v4.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmpl6fht8v4.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpl6fht8v4.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpp_zzy4h2.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpp_zzy4h2.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_zzy4h2.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmpmv24j9bn.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpmv24j9bn.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmp888v20j6.ts(4,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmp888v20j6.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp888v20j6.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n    let temp: number;\n    let temp_index: number;\n    let temp_value: number;\n    let temp_value_index: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    for (i = 0; i < nums.length; i++) {\n        max_value = nums[max_index];\n        max_value_index = max_index;\n        for (j = 0; j < max_index; j++) {\n            if (nums[j] > max_value) {\n                max_value = nums[j];\n                max_value_index = j;\n            }\n        }\n        if (max_value_index != max_index) {\n            temp = nums[0];\n            temp_index = 0;\n            temp_value = nums[max_value_index];\n            temp_value_index = max_value_index;\n            for (k = 0; k < max_value_index; k++) {\n                nums[k] = nums[k + 1];\n            }\n            nums[max_value_index] = temp;\n            for (k = max_value_index; k > 0; k--) {\n                nums[k] = nums[k - 1];\n            }\n            nums[0] = temp_value;\n            result.push(max_value_index + 1);\n            result.push(max_index + 1);\n        }\n        max_index--;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  5,\n  1,\n  4,\n  1,\n  3\n]\n\nshould loosely deep-equal\n\n[\n  15,\n  25,\n  38,\n  69,\n  79\n]\n    at test (/tmp/tmpq9yodcnu.js:46:12)\n    at Object.<anonymous> (/tmp/tmpq9yodcnu.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 5, 1, 4, 1, 3 ],\n  expected: [ 15, 25, 38, 69, 79 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpuz_uryx7.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpuz_uryx7.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = find_max(nums, i);\n    if (max_idx != i) {\n      flip(nums, max_idx);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmp5rntw015.ts(4,19): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmp5rntw015.ts(6,7): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp5rntw015.ts(7,7): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpw8chp89w.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpw8chp89w.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpw8chp89w.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let index: number = nums.indexOf(Math.max(...nums));\n        result.push(index + 1);\n        result.push(max - i);\n        nums = flip(nums, index + 1);\n        nums = flip(nums, max - i);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpd2tabxxj.ts(9,16): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpd2tabxxj.ts(10,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124238,
      "stdout": "../../../../tmp/tmph3h1_qp4.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmph3h1_qp4.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmp9_ivar6q.ts(15,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp9_ivar6q.ts(16,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmp8pqe1oim.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8pqe1oim.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8pqe1oim.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpw8chp89w.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpw8chp89w.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpw8chp89w.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex === i) {\n            i--;\n            continue;\n        }\n        if (maxIndex > 0) {\n            nums = flip(nums, maxIndex);\n        }\n        nums = flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpz80fq37f.ts(18,20): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpz80fq37f.ts(20,16): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let curr_size = nums.length;\n    while (curr_size > 1) {\n        // Find index of the maximum element in\n        // arr[0..curr_size-1]\n        let mi = findMax(nums, curr_size);\n        // Move the maximum element to end of current array\n        // if it's not already at the end\n        if (mi != curr_size - 1) {\n            // To move at the end, first move maximum number\n            // to beginning\n            flip(nums, mi);\n            // Now move the maximum number to end by reversing\n            // current array\n            flip(nums, curr_size - 1);\n        }\n        // Reduce the current size by one so that\n        // we don't touch sorted part\n        curr_size--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpipf5jpu5.ts(7,18): error TS2304: Cannot find name 'findMax'.\n../../../../tmp/tmpipf5jpu5.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpipf5jpu5.ts(16,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let i = nums.length - 1;\n    while (i > 0) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx == i) {\n            i--;\n            continue;\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpydxl_wbq.ts(5,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmpydxl_wbq.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpydxl_wbq.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let maxIndex: number = nums.length - 1;\n    let maxValue: number = nums[maxIndex];\n    let maxValueIndex: number = maxIndex;\n\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > maxValue) {\n            maxValue = nums[i];\n            maxValueIndex = i;\n        }\n    }\n\n    result.push(maxValueIndex + 1);\n    result.push(maxIndex + 1);\n\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  15,\n  25,\n  38,\n  69,\n  79\n]\n    at test (/tmp/tmp_rq62e7d.js:20:12)\n    at Object.<anonymous> (/tmp/tmp_rq62e7d.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 2, 5 ],\n  expected: [ 15, 25, 38, 69, 79 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpzse0eak5.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpzse0eak5.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpsoq3fs8q.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpsoq3fs8q.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    const n = nums.length;\n    for (let i = n - 1; i > 0; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmplkfen1tl.ts(11,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmplkfen1tl.ts(12,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpsoq3fs8q.ts(10,5): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpsoq3fs8q.ts(11,5): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    while (n > 1) {\n        let max_index = find_max_index(nums, n);\n        if (max_index != n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmp8ml3g50w.ts(5,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8ml3g50w.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8ml3g50w.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let max_index: number = find_max(nums, max - i);\n        if (max_index != max - i - 1) {\n            flip(nums, max_index);\n            flip(nums, max - i - 1);\n            result.push(max_index + 1);\n            result.push(max - i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpdgvtlccv.ts(6,33): error TS2304: Cannot find name 'find_max'.\n../../../../tmp/tmpdgvtlccv.ts(8,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpdgvtlccv.ts(9,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    const result: number[] = [];\n    let max: number = nums.length;\n    while (max > 0) {\n        let index: number = nums.indexOf(max);\n        if (index !== max - 1) {\n            if (index !== 0) {\n                result.push(index + 1);\n                nums = flip(nums, index + 1);\n            }\n            result.push(max);\n            nums = flip(nums, max);\n        }\n        max--;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpfmtvw7jr.ts(10,24): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpfmtvw7jr.ts(13,20): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpeda50ket.ts(13,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpeda50ket.ts(14,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpp_kg1sx2.ts(10,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpp_kg1sx2.ts(11,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124237,
      "stdout": "../../../../tmp/tmp8rpw6lnk.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmp8rpw6lnk.ts(6,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmp8rpw6lnk.ts(7,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1665509863,
      "stdout": "../../../../tmp/tmpnh2r5w5c.ts(4,25): error TS2304: Cannot find name 'find_max_index'.\n../../../../tmp/tmpnh2r5w5c.ts(5,9): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpnh2r5w5c.ts(6,9): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    const result: number[] = [];\n    let max: number = nums.length;\n    while (max > 1) {\n        let index: number = nums.indexOf(max);\n        if (index !== max - 1) {\n            if (index !== 0) {\n                result.push(index + 1);\n                nums = flip(nums, index + 1);\n            }\n            result.push(max);\n            nums = flip(nums, max);\n        }\n        max--;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124242,
      "stdout": "../../../../tmp/tmpekncb0zw.ts(10,24): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpekncb0zw.ts(13,20): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i - 1) {\n            flip(nums, max_idx);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
      "timestamp": 1666124240,
      "stdout": "../../../../tmp/tmpfure19w9.ts(5,23): error TS2304: Cannot find name 'find_max_idx'.\n../../../../tmp/tmpfure19w9.ts(7,13): error TS2304: Cannot find name 'flip'.\n../../../../tmp/tmpfure19w9.ts(8,13): error TS2304: Cannot find name 'flip'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
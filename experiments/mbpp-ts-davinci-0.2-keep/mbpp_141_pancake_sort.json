{
  "name": "mbpp_141_pancake_sort",
  "language": "ts",
  "prompt": "//Write a function to sort a list of elements.\nfunction pancake_sort(nums: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx == i) continue;\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = Math.max(...nums.slice(0, n - i));\n        let maxIndex = nums.indexOf(max);\n        nums = flip(nums, maxIndex + 1);\n        nums = flip(nums, n - i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 0) {\n        let max = nums.indexOf(Math.max(...nums.slice(0, i)));\n        if (max !== i - 1) {\n            nums = flip(nums, max);\n            nums = flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = find_max_index(nums, i);\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex === i) {\n            continue;\n        }\n        if (maxIndex > 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        if (maxIndex != 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result = nums.slice();\n    for (let i = 0; i < result.length; i++) {\n        let max = Math.max(...result.slice(0, result.length - i));\n        let maxIndex = result.indexOf(max);\n        result = flip(result, maxIndex);\n        result = flip(result, result.length - i - 1);\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max]) {\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0], max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index === i) {\n            i--;\n            continue;\n        }\n        if (max_index > 0) {\n            nums = flip(nums, max_index);\n        }\n        nums = flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n            result.push(max_index + 1);\n            result.push(i + 1);\n        }\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx === i) {\n            continue;\n        }\n        let new_slice;\n        if (max_idx > 0) {\n            new_slice = nums.slice(0, max_idx + 1).reverse();\n            for (let j = 0; j <= max_idx; j++) {\n                nums[j] = new_slice[j];\n            }\n        }\n        new_slice = nums.slice(0, i + 1).reverse();\n        for (let j = 0; j <= i; j++) {\n            nums[j] = new_slice[j];\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max = nums[0], maxIndex = 0;\n        for (let j = 0; j < nums.length - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = i;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    if (max_index !== i) {\n      flip(nums, max_index);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = find_max_index(nums, i);\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    const n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j < n - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    let len = nums.length;\n    for (let i = 0; i < len; i++) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j < len - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, len - i - 1);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max = nums[0];\n    let maxIndex = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > max) {\n        max = nums[j];\n        maxIndex = j;\n      }\n    }\n    if (maxIndex !== i) {\n      flip(nums, maxIndex);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    let len = nums.length;\n    for (let i = 0; i < len; i++) {\n        let max = Math.max(...nums.slice(0, len - i));\n        let max_index = nums.indexOf(max);\n        nums = flip(nums, max_index);\n        nums = flip(nums, len - i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result = nums.slice();\n    for (let i = result.length - 1; i >= 0; i--) {\n        let max = Math.max(...result.slice(0, i + 1));\n        let max_index = result.indexOf(max);\n        result = flip(result, max_index);\n        result = flip(result, i);\n    }\n    return result;\n}\n",
    "    let n = nums.length;\n    for (let i = 0; i < n; i++) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j < n - i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex === i) {\n            continue;\n        }\n        if (maxIndex > 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max = i;\n    for (let j = 0; j < i; j++) {\n      if (nums[j] > nums[max]) {\n        max = j;\n      }\n    }\n    if (max !== i) {\n      flip(nums, max);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let maxIndex = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[maxIndex]) {\n        maxIndex = j;\n      }\n    }\n    flip(nums, maxIndex);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index === i) {\n            continue;\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let max_index: number = nums.indexOf(Math.max(...nums));\n        let max_element: number = nums.splice(max_index, 1)[0];\n        nums.unshift(max_element);\n        result.push(max_index + 1);\n        nums.unshift(nums.pop());\n        result.push(nums.length);\n    }\n    return result;\n}\n\nconsole.log(pancake_sort([1, 5, 4, 3, 2]));\nconsole.log(pancake_sort([1, 2, 3]));\nconsole.log(pancake_sort([3, 2, 4, 1]));\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx == i) {\n            continue;\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        if (maxIndex != 0) {\n            flip(nums, maxIndex);\n        }\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index === i - 1) {\n            continue;\n        }\n        if (max_index > 0) {\n            flip(nums, max_index);\n        }\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_idx = 0;\n    for (let j = 0; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max(nums, i);\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = max; i > 0; i--) {\n        let index: number = nums.indexOf(i);\n        if (index == i - 1) {\n            continue;\n        }\n        if (index > 0) {\n            result.push(index + 1);\n            nums = flip(nums, index + 1);\n        }\n        result.push(i);\n        nums = flip(nums, i);\n    }\n    return result;\n}\n",
    "    const result: number[] = [];\n    for (let i = nums.length - 1; i >= 0; i--) {\n        const max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n            result.push(max_index + 1);\n            result.push(i + 1);\n        }\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 0; i--) {\n    let max_index = find_max_index(nums, i);\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n    let temp: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    let l: number;\n    let m: number;\n    let n: number;\n    let o: number;\n    let p: number;\n    let q: number;\n    let r: number;\n    let s: number;\n    let t: number;\n    let u: number;\n    let v: number;\n    let w: number;\n    let x: number;\n    let y: number;\n    let z: number;\n    let aa: number;\n    let bb: number;\n    let cc: number;\n    let dd: number;\n    let ee: number;\n    let ff: number;\n    let gg: number;\n    let hh: number;\n    let ii: number;\n    let jj: number;\n    let kk: number;\n    let ll: number;\n    let mm: number;\n    let nn: number;\n    let oo: number;\n    let pp: number;\n    let qq: number;\n    let rr: number;\n    let ss: number;\n    let tt: number;\n    let uu: number;\n    let vv: number;\n    let ww: number;\n    let xx: number;\n    let yy: number;\n    let zz: number;\n    let aaa: number;\n    let bbb: number;\n    let ccc: number;\n    let ddd: number;\n    let eee: number;\n    let fff: number;\n    let ggg: number;\n    let hhh: number;\n    let iii: number;\n    let jjj: number;\n    let kkk: number;\n    let lll: number;\n    let mmm: number;\n    let nnn: number;\n    let ooo: number;\n    let ppp",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        if (max_index != n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = 0;\n        for (let i = 1; i < n; i++) {\n            if (nums[i] > nums[max_index]) {\n                max_index = i;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, n - 1);\n        n--;\n    }\n    return nums;\n}\n",
    "  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (let i = 0; i < nums.length - 1; i++) {\n      if (nums[i] > nums[i + 1]) {\n        sorted = false;\n        nums = flip(nums, i + 1);\n      }\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                nums = flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let max_index = nums.indexOf(max);\n        nums = flip(nums, max_index);\n        nums = flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let max_index = nums.indexOf(Math.max(...nums));\n        if (max_index != nums.length - 1) {\n            result.push(max_index + 1);\n            nums = flip(nums, max_index);\n            result.push(nums.length - i);\n            nums = flip(nums, nums.length - i - 1);\n        }\n    }\n    return result;\n}\n",
    "    let sorted = false;\n    while (!sorted) {\n        sorted = true;\n        for (let i = 0; i < nums.length - 1; i++) {\n            if (nums[i] > nums[i + 1]) {\n                sorted = false;\n                flip(nums, i + 1);\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    // Start from the complete\n    // array and one by one\n    // reduce current size by one\n    for (let curr_size = n; curr_size > 1; --curr_size) {\n        // Find index of the\n        // maximum element in\n        // arr[0..curr_size-1]\n        let mi = findMax(nums, curr_size);\n\n        // Move the maximum element\n        // to end of current array\n        // if it's not already at\n        // the end\n        if (mi != curr_size - 1) {\n            // To move at the end,\n            // first move maximum\n            // number to beginning\n            flip(nums, mi);\n\n            // Now move the maximum\n            // number to end by\n            // reversing current array\n            flip(nums, curr_size - 1);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n\n    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] > max_value) {\n            max_value = nums[i];\n            max_value_index = i;\n        }\n    }\n\n    result.push(max_value_index + 1);\n    result.push(max_index + 1);\n\n    return result;\n}\n\nconsole.log(pancake_sort([3, 2, 4, 1]));\nconsole.log(pancake_sort([1, 2, 3]));",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = find_max(nums, i);\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx !== i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx === i) {\n            continue;\n        }\n        let new_slice;\n        if (max_idx > 0) {\n            new_slice = nums.slice(0, max_idx + 1).reverse();\n            for (let j = 0; j <= max_idx; j++) {\n                nums[j] = new_slice[j];\n            }\n        }\n        new_slice = nums.slice(0, i + 1).reverse();\n        for (let j = 0; j <= i; j++) {\n            nums[j] = new_slice[j];\n        }\n    }\n    return nums;\n}\n",
    "    let curr_size = nums.length;\n    while (curr_size > 1) {\n        let max_idx = findMax(nums, curr_size);\n        if (max_idx != curr_size - 1) {\n            flip(nums, max_idx);\n            flip(nums, curr_size - 1);\n        }\n        curr_size--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        if (max_idx === i) {\n            continue;\n        }\n        let new_slice;\n        if (max_idx > 0) {\n            new_slice = flip(nums, max_idx + 1);\n        }\n        new_slice = flip(new_slice, i + 1);\n        nums = new_slice;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0];\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        if (max_index === i) {\n            i--;\n        } else {\n            if (max_index > 0) {\n                nums = flip(nums, max_index);\n            }\n            nums = flip(nums, i);\n            i--;\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 1; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_index = find_max_index(nums, nums.length - i);\n        flip(nums, max_index);\n        flip(nums, nums.length - i - 1);\n    }\n    return nums;\n}\n",
    "  let curr_size = nums.length;\n  while (curr_size > 1) {\n    let max_idx = findMax(nums, curr_size);\n    if (max_idx != curr_size - 1) {\n      flip(nums, max_idx);\n      flip(nums, curr_size - 1);\n    }\n    curr_size--;\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let i = nums.length;\n    while (i > 1) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i - 1) {\n            flip(nums, max_index);\n            flip(nums, i - 1);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max]) {\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < nums.length; i++) {\n        let max = Math.max(...nums.slice(0, nums.length - i));\n        let max_index = nums.indexOf(max);\n        if (max_index == nums.length - i - 1) {\n            continue;\n        }\n        if (max_index != 0) {\n            result.push(max_index + 1);\n            nums = flip(nums, max_index + 1);\n        }\n        result.push(nums.length - i);\n        nums = flip(nums, nums.length - i);\n    }\n    return result;\n}\n",
    "    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i - 1) {\n            flip(nums, max_idx);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while (i > 0) {\n        let max_idx = find_max(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n        i--;\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = i;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length; i > 1; i--) {\n        let max_index = 0;\n        for (let j = 0; j < i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        let max_idx = find_max_idx(nums, i);\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i) {\n            flip(nums, max_idx);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max_index: number = nums.length - 1;\n    let max_value: number = nums[max_index];\n    let max_value_index: number = max_index;\n    let temp: number;\n    let temp_index: number;\n    let temp_value: number;\n    let temp_value_index: number;\n    let i: number;\n    let j: number;\n    let k: number;\n    for (i = 0; i < nums.length; i++) {\n        max_value = nums[max_index];\n        max_value_index = max_index;\n        for (j = 0; j < max_index; j++) {\n            if (nums[j] > max_value) {\n                max_value = nums[j];\n                max_value_index = j;\n            }\n        }\n        if (max_value_index != max_index) {\n            temp = nums[0];\n            temp_index = 0;\n            temp_value = nums[max_value_index];\n            temp_value_index = max_value_index;\n            for (k = 0; k < max_value_index; k++) {\n                nums[k] = nums[k + 1];\n            }\n            nums[max_value_index] = temp;\n            for (k = max_value_index; k > 0; k--) {\n                nums[k] = nums[k - 1];\n            }\n            nums[0] = temp_value;\n            result.push(max_value_index + 1);\n            result.push(max_index + 1);\n        }\n        max_index--;\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = find_max(nums, i);\n    if (max_idx != i) {\n      flip(nums, max_idx);\n      flip(nums, i);\n    }\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let index: number = nums.indexOf(Math.max(...nums));\n        result.push(index + 1);\n        result.push(max - i);\n        nums = flip(nums, index + 1);\n        nums = flip(nums, max - i);\n    }\n    return result;\n}\n",
    "  for (let i = nums.length - 1; i >= 1; i--) {\n    let max_idx = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_idx]) {\n        max_idx = j;\n      }\n    }\n    flip(nums, max_idx);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex == i) {\n            continue;\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index !== i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while (i > 0) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex === i) {\n            i--;\n            continue;\n        }\n        if (maxIndex > 0) {\n            nums = flip(nums, maxIndex);\n        }\n        nums = flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n",
    "    let curr_size = nums.length;\n    while (curr_size > 1) {\n        // Find index of the maximum element in\n        // arr[0..curr_size-1]\n        let mi = findMax(nums, curr_size);\n        // Move the maximum element to end of current array\n        // if it's not already at the end\n        if (mi != curr_size - 1) {\n            // To move at the end, first move maximum number\n            // to beginning\n            flip(nums, mi);\n            // Now move the maximum number to end by reversing\n            // current array\n            flip(nums, curr_size - 1);\n        }\n        // Reduce the current size by one so that\n        // we don't touch sorted part\n        curr_size--;\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while (i > 0) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx == i) {\n            i--;\n            continue;\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let maxIndex: number = nums.length - 1;\n    let maxValue: number = nums[maxIndex];\n    let maxValueIndex: number = maxIndex;\n\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > maxValue) {\n            maxValue = nums[i];\n            maxValueIndex = i;\n        }\n    }\n\n    result.push(maxValueIndex + 1);\n    result.push(maxIndex + 1);\n\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = i;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    const n = nums.length;\n    for (let i = n - 1; i > 0; i--) {\n        let max_idx = 0;\n        for (let j = 1; j <= i; j++) {\n            if (nums[j] > nums[max_idx]) {\n                max_idx = j;\n            }\n        }\n        flip(nums, max_idx);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "  for (let i = nums.length - 1; i > 0; i--) {\n    let max_index = 0;\n    for (let j = 1; j <= i; j++) {\n      if (nums[j] > nums[max_index]) {\n        max_index = j;\n      }\n    }\n    flip(nums, max_index);\n    flip(nums, i);\n  }\n  return nums;\n}\n",
    "    let n = nums.length;\n    while (n > 1) {\n        let max_index = find_max_index(nums, n);\n        if (max_index != n - 1) {\n            flip(nums, max_index);\n            flip(nums, n - 1);\n        }\n        n--;\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    let max: number = nums.length;\n    for (let i = 0; i < max; i++) {\n        let max_index: number = find_max(nums, max - i);\n        if (max_index != max - i - 1) {\n            flip(nums, max_index);\n            flip(nums, max - i - 1);\n            result.push(max_index + 1);\n            result.push(max - i);\n        }\n    }\n    return result;\n}\n",
    "    const result: number[] = [];\n    let max: number = nums.length;\n    while (max > 0) {\n        let index: number = nums.indexOf(max);\n        if (index !== max - 1) {\n            if (index !== 0) {\n                result.push(index + 1);\n                nums = flip(nums, index + 1);\n            }\n            result.push(max);\n            nums = flip(nums, max);\n        }\n        max--;\n    }\n    return result;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max = nums[0];\n        let maxIndex = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > max) {\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if (maxIndex !== i) {\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i > 0; i--) {\n        let max_index = 0;\n        for (let j = 0; j <= i; j++) {\n            if (nums[j] > nums[max_index]) {\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        if (max_index != i) {\n            flip(nums, max_index);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for (let i = nums.length - 1; i >= 0; i--) {\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    const result: number[] = [];\n    let max: number = nums.length;\n    while (max > 1) {\n        let index: number = nums.indexOf(max);\n        if (index !== max - 1) {\n            if (index !== 0) {\n                result.push(index + 1);\n                nums = flip(nums, index + 1);\n            }\n            result.push(max);\n            nums = flip(nums, max);\n        }\n        max--;\n    }\n    return result;\n}\n",
    "    let n = nums.length;\n    for (let i = n; i > 1; i--) {\n        let max_idx = find_max_idx(nums, i);\n        if (max_idx != i - 1) {\n            flip(nums, max_idx);\n            flip(nums, i - 1);\n        }\n    }\n    return nums;\n}\n"
  ]
}
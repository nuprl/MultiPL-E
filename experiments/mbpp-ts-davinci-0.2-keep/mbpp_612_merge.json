{
  "name": "mbpp_612_merge",
  "language": "ts",
  "prompt": "//Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\nfunction merge(lst: any): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = merge;\n  assert.deepEqual(candidate([[\"x\", \"y\"], [\"a\", \"b\"], [\"m\", \"n\"]]),[[\"x\", \"a\", \"m\"], [\"y\", \"b\", \"n\"]]);\n  assert.deepEqual(candidate([[1, 2], [3, 4], [5, 6], [7, 8]]),[[1, 3, 5, 7], [2, 4, 6, 8]]);\n  assert.deepEqual(candidate([[\"x\", \"y\", \"z\"], [\"a\", \"b\", \"c\"], [\"m\", \"n\", \"o\"]]),[[\"x\", \"a\", \"m\"], [\"y\", \"b\", \"n\"], [\"z\", \"c\", \"o\"]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1 = [];\n    let lst2 = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    var lst1 = [];\n    var lst2 = [];\n    for (var i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let firstList: any = [];\n    let secondList: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        firstList.push(lst[i][0]);\n        secondList.push(lst[i][1]);\n    }\n    return [firstList, secondList];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let lst1 = [];\n    let lst2 = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let firstList = [];\n    let secondList = [];\n    for (let i = 0; i < lst.length; i++) {\n        firstList.push(lst[i][0]);\n        secondList.push(lst[i][1]);\n    }\n    return [firstList, secondList];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let firstList: any = [];\n    let secondList: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        firstList.push(lst[i][0]);\n        secondList.push(lst[i][1]);\n    }\n    return [firstList, secondList];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    let result: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    result.push(first);\n    result.push(second);\n    return result;\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "  let first: any = [];\n  let second: any = [];\n  for (let i = 0; i < lst.length; i++) {\n    first.push(lst[i][0]);\n    second.push(lst[i][1]);\n  }\n  return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let firstList: any = [];\n    let secondList: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        firstList.push(lst[i][0]);\n        secondList.push(lst[i][1]);\n    }\n    return [firstList, secondList];\n}\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1 = [];\n    let lst2 = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    var first: any = [];\n    var second: any = [];\n    for (var i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1,2], [3,4], [5,6]]));\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6], [7, 8]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let firstList: any = [];\n    let secondList: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        firstList.push(lst[i][0]);\n        secondList.push(lst[i][1]);\n    }\n    return [firstList, secondList];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "  let first = [];\n  let second = [];\n  for (let i = 0; i < lst.length; i++) {\n    first.push(lst[i][0]);\n    second.push(lst[i][1]);\n  }\n  return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1 = [];\n    let lst2 = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let lst1 = [];\n    let lst2 = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let first: any = [];\n    let second: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n",
    "    let first = [];\n    let second = [];\n    for (let i = 0; i < lst.length; i++) {\n        first.push(lst[i][0]);\n        second.push(lst[i][1]);\n    }\n    return [first, second];\n}\n",
    "    let lst1: any = [];\n    let lst2: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        lst1.push(lst[i][0]);\n        lst2.push(lst[i][1]);\n    }\n    return [lst1, lst2];\n}\nconsole.log(merge([[1, 2], [3, 4], [5, 6]]));\n"
  ]
}
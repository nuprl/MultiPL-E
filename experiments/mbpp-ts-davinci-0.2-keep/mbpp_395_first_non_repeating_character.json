{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "ts",
  "prompt": "//Write a python function to find the first non-repeated character in a given string.\nfunction first_non_repeating_character(str1: string): string | undefined {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = first_non_repeating_character;\n  assert.deepEqual(candidate(\"abcabc\"),undefined);\n  assert.deepEqual(candidate(\"abc\"),\"a\");\n  assert.deepEqual(candidate(\"ababc\"),\"c\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let char: string | undefined;\n    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            char = str[i];\n            break;\n        }\n    }\n    return char;\n}\n\nconsole.log(first_non_repeating_character('abacddbec'));\nconsole.log(first_non_repeating_character('abcdef'));\n",
    "    let arr: string[] = str1.split('');\n    let result: string | undefined;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(first_non_repeating_character('abcdab'));\nconsole.log(first_non_repeating_character('abcd'));\n",
    "    let len = str1.length;\n    let char;\n    let charCount = {};\n    for (let i = 0; i < len; i++) {\n        char = str1[i];\n        if (charCount[char]) {\n            charCount[char]++;\n        }\n        else {\n            charCount[char] = 1;\n        }\n    }\n    for (let j in charCount) {\n        if (charCount[j] == 1) {\n            return j;\n        }\n    }\n}\nconsole.log(first_non_repeating_character('abacddbec'));\n",
    "    let result: string | undefined;\n    let char_count: { [key: string]: number } = {};\n    for (let i = 0; i < str1.length; i++) {\n        if (char_count[str1[i]] === undefined) {\n            char_count[str1[i]] = 1;\n        } else {\n            char_count[str1[i]] += 1;\n        }\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (char_count[str1[i]] === 1) {\n            result = str1[i];\n            break;\n        }\n    }\n    return result;\n}\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n    return undefined;\n}\n\nconsole.log(first_non_repeating_character('abcdab'));\nconsole.log(first_non_repeating_character('abcdabc'));\nconsole.log(first_non_repeating_character('abcdabcd'));\n",
    "  let len = str1.length;\n  let char;\n  for (let i = 0; i < len; i++) {\n    char = str1.charAt(i);\n    if (str1.indexOf(char) === i && str1.indexOf(char, i + 1) === -1) {\n      return char;\n    }\n  }\n}\n",
    "    let result: string | undefined;\n    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            result = str[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(first_non_repeating_character(\"abcdabcd\"));\nconsole.log(first_non_repeating_character(\"abcdabcdabcd\"));\nconsole.log(first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"));\nconsole.log(first_non_repeating_character(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"));\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n    return undefined;\n}\nconsole.log(first_non_repeating_character('abcdab'));\nconsole.log(first_non_repeating_character('abcd'));\nconsole.log(first_non_repeating_character('aabbcc'));\nconsole.log(first_non_repeating_character('aabbdbcc'));\n",
    "    let len = str1.length;\n    let char: string;\n    let charCount: number;\n    for (let i = 0; i < len; i++) {\n        char = str1[i];\n        charCount = 0;\n        for (let j = 0; j < len; j++) {\n            if (str1[j] === char) {\n                charCount += 1;\n            }\n        }\n        if (charCount < 2) {\n            return char;\n        }\n    }\n    return undefined;\n}\n\nconsole.log(first_non_repeating_character('the quick brown fox jumps then quickly blow air'));\nconsole.log(first_non_repeating_character('the quick brown fox jumps then quickly blow air'));\nconsole.log(first_non_repeating_character('abacddbec'));\nconsole.log(first_non_repeating_character('abacddbec'));\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n    return undefined;\n}\n\nconsole.log(first_non_repeating_character('abacddbec'));\nconsole.log(first_non_repeating_character('abcdef'));\nconsole.log(first_non_repeating_character('hello world, eh?'));\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n    return undefined;\n}\n\nconsole.log(first_non_repeating_character('abcdef'));\nconsole.log(first_non_repeating_character('abacdef'));\n",
    "    let str = str1;\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return undefined;\n}\n",
    "    let result: string | undefined;\n    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            result = str[i];\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(first_non_repeating_character(\"abcab\"));\nconsole.log(first_non_repeating_character(\"abab\"));\nconsole.log(first_non_repeating_character(\"aabbbc\"));\nconsole.log(first_non_repeating_character(\"aabbdbc\"));\n",
    "    let count: number, i: number, len: number, char: string;\n\n    len = str1.length;\n    for (i = 0; i < len; i++) {\n        char = str1[i];\n        count = 0;\n        for (let j = 0; j < len; j++) {\n            if (str1[j] === char) {\n                count += 1;\n            }\n        }\n        if (count < 2) {\n            return char;\n        }\n    }\n    return undefined;\n}\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n}\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n}\n",
    "  for (let i = 0; i < str1.length; i++) {\n    if (str1.indexOf(str1[i]) === str1.lastIndexOf(str1[i])) {\n      return str1[i];\n    }\n  }\n}\n\nconsole.log(first_non_repeating_character(\"abcdabcd\"));\nconsole.log(first_non_repeating_character(\"abcd\"));\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n    return undefined;\n}\n\nconsole.log(first_non_repeating_character('abacddbec'));\n",
    "    let str = str1;\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charAt(i);\n        if (str.indexOf(c) == i && str.indexOf(c, i + 1) == -1) {\n            return c;\n        }\n    }\n    return undefined;\n}\n",
    "    let str = str1.toLowerCase();\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str[i]) === str.lastIndexOf(str[i])) {\n            return str[i];\n        }\n    }\n    return undefined;\n}\nconsole.log(first_non_repeating_character(\"abcab\"));\nconsole.log(first_non_repeating_character(\"abab\"));\nconsole.log(first_non_repeating_character(\"aabbbc\"));\nconsole.log(first_non_repeating_character(\"aabbdbc\"));\n"
  ]
}
{
  "name": "mbpp_755_second_smallest",
  "language": "ts",
  "prompt": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n0\n0\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpyc0fq552.js:22:12)\n    at Object.<anonymous> (/tmp/tmpyc0fq552.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number | undefined;\n    let secondMin: number | undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min || min === undefined) {\n            secondMin = min;\n            min = numbers[i];\n        } else if (numbers[i] < secondMin || secondMin === undefined) {\n            secondMin = numbers[i];\n        }\n    }\n    return secondMin;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpdfgcxmfj.js:20:12)\n    at Object.<anonymous> (/tmp/tmpdfgcxmfj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp0oi2a9fo.js:14:12)\n    at Object.<anonymous> (/tmp/tmp0oi2a9fo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let filtered = numbers.filter(n => n != first);\n    return Math.min(...filtered);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpo7kjoflo.js:12:12)\n    at Object.<anonymous> (/tmp/tmpo7kjoflo.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    let secondMin = Math.min(...numbers);\n    return secondMin;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmphxhv4p2q.js:14:12)\n    at Object.<anonymous> (/tmp/tmphxhv4p2q.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n0\n0\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let newArray = numbers.filter(x => x !== min);\n    return Math.min(...newArray);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmplqzu9txi.js:12:12)\n    at Object.<anonymous> (/tmp/tmplqzu9txi.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([5, 4, 3, 2, 1]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n0\n0\n2\n2\n2\n-Infinity\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpvinp1t_i.js:24:12)\n    at Object.<anonymous> (/tmp/tmpvinp1t_i.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first: number | undefined = undefined;\n    let second: number | undefined = undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first || first === undefined) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second || second === undefined) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpaawr4rmg.js:20:12)\n    at Object.<anonymous> (/tmp/tmpaawr4rmg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp506omibc.js:22:12)\n    at Object.<anonymous> (/tmp/tmp506omibc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpucvkjhox.js:13:12)\n    at Object.<anonymous> (/tmp/tmpucvkjhox.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpp04jhmwx.js:17:12)\n    at Object.<anonymous> (/tmp/tmpp04jhmwx.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.min(...numbers.filter(n => n > min));\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpr0lkwrr6.js:12:12)\n    at Object.<anonymous> (/tmp/tmpr0lkwrr6.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.min(...numbers.filter(n => n > min));\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpr0lkwrr6.js:12:12)\n    at Object.<anonymous> (/tmp/tmpr0lkwrr6.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number | undefined;\n    let secondMin: number | undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min || min === undefined) {\n            secondMin = min;\n            min = numbers[i];\n        } else if (numbers[i] < secondMin || secondMin === undefined) {\n            secondMin = numbers[i];\n        }\n    }\n    return secondMin;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpdfgcxmfj.js:20:12)\n    at Object.<anonymous> (/tmp/tmpdfgcxmfj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = numbers[0];\n    let secondSmallest = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < smallest) {\n            secondSmallest = smallest;\n            smallest = numbers[i];\n        } else if (numbers[i] < secondSmallest) {\n            secondSmallest = numbers[i];\n        }\n    }\n    return secondSmallest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpo7t4izl0.js:20:12)\n    at Object.<anonymous> (/tmp/tmpo7t4izl0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let firstIndex = numbers.indexOf(first);\n    numbers.splice(firstIndex, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp5hhk_4hq.js:13:12)\n    at Object.<anonymous> (/tmp/tmp5hhk_4hq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = numbers[0];\n    let secondSmallest = numbers[1];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < smallest) {\n            secondSmallest = smallest;\n            smallest = numbers[i];\n        } else if (numbers[i] < secondSmallest) {\n            secondSmallest = numbers[i];\n        }\n    }\n    return secondSmallest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpm5hqqff0.js:20:12)\n    at Object.<anonymous> (/tmp/tmpm5hqqff0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = numbers[0];\n    let second_smallest = numbers[1];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < smallest) {\n            second_smallest = smallest;\n            smallest = numbers[i];\n        } else if (numbers[i] < second_smallest) {\n            second_smallest = numbers[i];\n        }\n    }\n    return second_smallest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpdsxt_9kc.js:20:12)\n    at Object.<anonymous> (/tmp/tmpdsxt_9kc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp506omibc.js:22:12)\n    at Object.<anonymous> (/tmp/tmp506omibc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpucvkjhox.js:13:12)\n    at Object.<anonymous> (/tmp/tmpucvkjhox.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Infinity;\n    let second = Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp49bb9u04.js:20:12)\n    at Object.<anonymous> (/tmp/tmp49bb9u04.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number = Math.min(...numbers);\n    let second_min: number = Math.min(...numbers.filter(x => x > min));\n    return second_min;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\nInfinity\nInfinity\nInfinity\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp9u8qqbar.js:18:12)\n    at Object.<anonymous> (/tmp/tmp9u8qqbar.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpws6z4fw3.js:13:12)\n    at Object.<anonymous> (/tmp/tmpws6z4fw3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpws6z4fw3.js:13:12)\n    at Object.<anonymous> (/tmp/tmpws6z4fw3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let secondMin = Math.min(...numbers.filter(x => x > min));\n    return secondMin;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmps3_qeykr.js:12:12)\n    at Object.<anonymous> (/tmp/tmps3_qeykr.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp6uyzkxog.js:18:12)\n    at Object.<anonymous> (/tmp/tmp6uyzkxog.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpn73avox0.js:17:12)\n    at Object.<anonymous> (/tmp/tmpn73avox0.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.min(...numbers.filter(n => n !== min));\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp1b2dz25m.js:12:12)\n    at Object.<anonymous> (/tmp/tmp1b2dz25m.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.min(...numbers.filter(n => n > min));\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpr0lkwrr6.js:12:12)\n    at Object.<anonymous> (/tmp/tmpr0lkwrr6.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Number.MAX_VALUE;\n    let second = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Number.MAX_VALUE) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpb15de0s2.js:13:12)\n    at Object.<anonymous> (/tmp/tmpb15de0s2.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([5, 4, 3, 2, 1]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\nundefined\nundefined\n2\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first = Math.min(...numbers);\n  let second = Math.max(...numbers);\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < second && numbers[i] !== first) {\n      second = numbers[i];\n    }\n  }\n  return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpx1u1cxwn.js:22:12)\n    at Object.<anonymous> (/tmp/tmpx1u1cxwn.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let min: number = Math.min(...numbers);\n  let min2: number = Math.max(...numbers);\n  for (let i: number = 0; i < numbers.length; i++) {\n    if (numbers[i] < min2 && numbers[i] > min) {\n      min2 = numbers[i];\n    }\n  }\n  return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp6ka0_m6w.js:17:12)\n    at Object.<anonymous> (/tmp/tmp6ka0_m6w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first: number | undefined;\n    let second: number | undefined;\n    numbers.forEach(function (number) {\n        if (first === undefined || number < first) {\n            second = first;\n            first = number;\n        } else if (second === undefined || number < second) {\n            second = number;\n        }\n    });\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpm_orljam.js:20:12)\n    at Object.<anonymous> (/tmp/tmpm_orljam.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([5, 4, 3, 2, 1]));\nconsole.log(second_smallest([1, 2, 3, 4, 5]));\nconsole.log(second_smallest([]));\nconsole.log(second_smallest([1, 1, 1, 1, 1]));\nconsole.log(second_smallest([-2, -4, -6, -8, -10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "-2\n-2\n-2\n2\nInfinity\n2\n2\nInfinity\n1\n-8\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpyf9hyp3t.js:22:12)\n    at Object.<anonymous> (/tmp/tmpyf9hyp3t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let firstIndex = numbers.indexOf(first);\n    numbers.splice(firstIndex, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp3ukujbnd.js:14:12)\n    at Object.<anonymous> (/tmp/tmp3ukujbnd.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "-2\n0\n0\nundefined\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = numbers[0];\n    let secondSmallest = undefined;\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] < smallest) {\n            secondSmallest = smallest;\n            smallest = numbers[i];\n        } else if (secondSmallest === undefined || numbers[i] < secondSmallest) {\n            secondSmallest = numbers[i];\n        }\n    }\n    return secondSmallest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpgw68v2ed.js:20:12)\n    at Object.<anonymous> (/tmp/tmpgw68v2ed.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Infinity;\n    let second = Infinity;\n    numbers.forEach(function (number) {\n        if (number < first) {\n            second = first;\n            first = number;\n        } else if (number < second && number != first) {\n            second = number;\n        }\n    });\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpor_oyxvc.js:22:12)\n    at Object.<anonymous> (/tmp/tmpor_oyxvc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpzocmp_ra.js:17:12)\n    at Object.<anonymous> (/tmp/tmpzocmp_ra.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([5, 4, 3, 2, 1]));\nconsole.log(second_smallest([1, 2, -8, -2]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n0\n0\nInfinity\nInfinity\n2\n-2\n0\n0\nInfinity\nInfinity\nInfinity\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp41c9gtcw.js:29:12)\n    at Object.<anonymous> (/tmp/tmp41c9gtcw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    if (numbers.length < 2) {\n        return undefined;\n    }\n    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n0\n0\n2\nundefined\nundefined\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpyhl187h1.js:26:12)\n    at Object.<anonymous> (/tmp/tmpyhl187h1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpws6z4fw3.js:13:12)\n    at Object.<anonymous> (/tmp/tmpws6z4fw3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpt3dm5ya5.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt3dm5ya5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let min1 = Number.MAX_VALUE;\n  let min2 = Number.MAX_VALUE;\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < min1) {\n      min2 = min1;\n      min1 = numbers[i];\n    } else if (numbers[i] < min2) {\n      min2 = numbers[i];\n    }\n  }\n  return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpljwmjmfn.js:20:12)\n    at Object.<anonymous> (/tmp/tmpljwmjmfn.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp7vd0_c50.js:14:12)\n    at Object.<anonymous> (/tmp/tmp7vd0_c50.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpn73avox0.js:17:12)\n    at Object.<anonymous> (/tmp/tmpn73avox0.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first = Math.min(...numbers);\n  let second = Math.max(...numbers);\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < second && numbers[i] > first) {\n      second = numbers[i];\n    }\n  }\n  return second;\n}\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpf7ekbnfy.js:18:12)\n    at Object.<anonymous> (/tmp/tmpf7ekbnfy.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp506omibc.js:22:12)\n    at Object.<anonymous> (/tmp/tmp506omibc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let second_min = Math.min(...numbers.filter(x => x > min));\n    return second_min;\n}\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpjyce5se6.js:13:12)\n    at Object.<anonymous> (/tmp/tmpjyce5se6.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp0oi2a9fo.js:14:12)\n    at Object.<anonymous> (/tmp/tmp0oi2a9fo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first: number | undefined;\n    let second: number | undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first || first === undefined) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second || second === undefined) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpqirqkjcm.js:20:12)\n    at Object.<anonymous> (/tmp/tmpqirqkjcm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Infinity;\n    let second = Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Infinity) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    if (numbers.length < 2) {\n        return undefined;\n    }\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpopaiqq56.js:20:12)\n    at Object.<anonymous> (/tmp/tmpopaiqq56.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first: number | undefined;\n    let second: number | undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first || first === undefined) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second || second === undefined) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpqirqkjcm.js:20:12)\n    at Object.<anonymous> (/tmp/tmpqirqkjcm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let min1 = Number.MAX_VALUE;\n  let min2 = Number.MAX_VALUE;\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < min1) {\n      min2 = min1;\n      min1 = numbers[i];\n    } else if (numbers[i] < min2) {\n      min2 = numbers[i];\n    }\n  }\n  return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpe3zavqmf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpe3zavqmf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = numbers[0];\n    let second_smallest = numbers[0];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < smallest) {\n            second_smallest = smallest;\n            smallest = numbers[i];\n        }\n        else if (numbers[i] < second_smallest) {\n            second_smallest = numbers[i];\n        }\n    }\n    return second_smallest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpdk5j7m6a.js:20:12)\n    at Object.<anonymous> (/tmp/tmpdk5j7m6a.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number = Math.min(...numbers);\n    let min2: number = Math.max(...numbers);\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp4997rogc.js:18:12)\n    at Object.<anonymous> (/tmp/tmp4997rogc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n0\n0\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpugvi37ty.js:22:12)\n    at Object.<anonymous> (/tmp/tmpugvi37ty.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number = Math.min(...numbers);\n    let second_min: number = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    if (second_min === Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second_min;\n    }\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n0\n0\nundefined\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first = Math.min(...numbers);\n  let second = Math.max(...numbers);\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < second && numbers[i] != first) {\n      second = numbers[i];\n    }\n  }\n  return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpx34h5rzf.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx34h5rzf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let firstIndex = numbers.indexOf(first);\n    numbers.splice(firstIndex, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp5hhk_4hq.js:13:12)\n    at Object.<anonymous> (/tmp/tmp5hhk_4hq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n0\n0\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpp04jhmwx.js:17:12)\n    at Object.<anonymous> (/tmp/tmpp04jhmwx.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([5, 4, 3, 2, 1]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n0\n0\nundefined\nundefined\n2\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Infinity;\n    let second = Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        let num = numbers[i];\n        if (num <= first) {\n            second = first;\n            first = num;\n        } else if (num < second) {\n            second = num;\n        }\n    }\n    if (second === Infinity) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpouq5uvma.js:24:12)\n    at Object.<anonymous> (/tmp/tmpouq5uvma.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = Math.min(...numbers);\n    let second_smallest = numbers.filter(x => x > smallest);\n    return Math.min(...second_smallest);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpo1j41lvp.js:12:12)\n    at Object.<anonymous> (/tmp/tmpo1j41lvp.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first: number | undefined;\n    let second: number | undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first || first === undefined) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second || second === undefined) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "-2\n-2\n-2\n2\nundefined\nundefined\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpb7v91eqs.js:26:12)\n    at Object.<anonymous> (/tmp/tmpb7v91eqs.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpucvkjhox.js:13:12)\n    at Object.<anonymous> (/tmp/tmpucvkjhox.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first = numbers[0];\n  let second = numbers[0];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < first) {\n      second = first;\n      first = numbers[i];\n    } else if (numbers[i] < second) {\n      second = numbers[i];\n    }\n  }\n  return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpxiax0t4h.js:20:12)\n    at Object.<anonymous> (/tmp/tmpxiax0t4h.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let min = Math.min(...numbers);\n  let min2 = Math.max(...numbers);\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < min2 && numbers[i] > min) {\n      min2 = numbers[i];\n    }\n  }\n  return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpnjic6_rq.js:17:12)\n    at Object.<anonymous> (/tmp/tmpnjic6_rq.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first = Math.min(...numbers);\n  let second = Math.max(...numbers);\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < second && numbers[i] !== first) {\n      second = numbers[i];\n    }\n  }\n  if (second === Math.max(...numbers)) {\n    return undefined;\n  } else {\n    return second;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp0oi2a9fo.js:14:12)\n    at Object.<anonymous> (/tmp/tmp0oi2a9fo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "-2\n0\n0\n2\n2\n-Infinity\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpjuaq2rys.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjuaq2rys.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first = Math.min(...numbers);\n  let second = Math.max(...numbers);\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] < second && numbers[i] > first) {\n      second = numbers[i];\n    }\n  }\n  return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp7fkls9e7.js:17:12)\n    at Object.<anonymous> (/tmp/tmp7fkls9e7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let index = numbers.indexOf(first);\n    numbers.splice(index, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpws6z4fw3.js:13:12)\n    at Object.<anonymous> (/tmp/tmpws6z4fw3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmppf7wwdaq.js:14:12)\n    at Object.<anonymous> (/tmp/tmppf7wwdaq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpucvkjhox.js:13:12)\n    at Object.<anonymous> (/tmp/tmpucvkjhox.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp0cyzlf2o.js:18:12)\n    at Object.<anonymous> (/tmp/tmp0cyzlf2o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "-2\n0\n0\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = Math.min(...numbers);\n    let secondSmallest = Math.max(...numbers);\n\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < secondSmallest && numbers[i] > smallest) {\n            secondSmallest = numbers[i];\n        }\n    }\n\n    return secondSmallest;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "-2\n0\n0\n2\n2\n-Infinity\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp8c2l4lru.js:23:12)\n    at Object.<anonymous> (/tmp/tmp8c2l4lru.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp0oi2a9fo.js:14:12)\n    at Object.<anonymous> (/tmp/tmp0oi2a9fo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Number.MAX_VALUE;\n    let second = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Number.MAX_VALUE) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp0oi2a9fo.js:14:12)\n    at Object.<anonymous> (/tmp/tmp0oi2a9fo.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "-2\n-2\n-2\n2\n1.7976931348623157e+308\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpn8rbdr0r.js:25:12)\n    at Object.<anonymous> (/tmp/tmpn8rbdr0r.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let min: number | undefined;\n  let secondMin: number | undefined;\n  for (let i = 0; i < numbers.length; i++) {\n    if (min === undefined) {\n      min = numbers[i];\n    } else if (numbers[i] < min) {\n      secondMin = min;\n      min = numbers[i];\n    } else if (secondMin === undefined) {\n      secondMin = numbers[i];\n    } else if (numbers[i] < secondMin) {\n      secondMin = numbers[i];\n    }\n  }\n  return secondMin;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp8_797xge.js:26:12)\n    at Object.<anonymous> (/tmp/tmp8_797xge.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "-2\n0\n0\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let smallest = Math.min(...numbers);\n    let second_smallest = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_smallest && numbers[i] > smallest) {\n            second_smallest = numbers[i];\n        }\n    }\n    return second_smallest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp88bl41v1.js:17:12)\n    at Object.<anonymous> (/tmp/tmp88bl41v1.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Infinity;\n    let second = Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second) {\n            second = numbers[i];\n        }\n    }\n    if (second === Infinity) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpmlwh5tgb.js:23:12)\n    at Object.<anonymous> (/tmp/tmpmlwh5tgb.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let num of numbers) {\n        if (num < second && num > first) {\n            second = num;\n        }\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpp8c7dj_m.js:18:12)\n    at Object.<anonymous> (/tmp/tmpp8c7dj_m.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "-2\n0\n0\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number = Math.min(...numbers);\n    let second_min: number = Math.max(...numbers);\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpjag9xfwf.js:17:12)\n    at Object.<anonymous> (/tmp/tmpjag9xfwf.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n  let first: number | undefined;\n  let second: number | undefined;\n  numbers.forEach((n: number) => {\n    if (first === undefined || n < first) {\n      second = first;\n      first = n;\n    } else if (second === undefined || n < second) {\n      second = n;\n    }\n  });\n  return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx3juubn0.js:21:12)\n    at Object.<anonymous> (/tmp/tmpx3juubn0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpcaeak6jh.js:13:12)\n    at Object.<anonymous> (/tmp/tmpcaeak6jh.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    if (min2 === Math.max(...numbers)) {\n        return undefined;\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.min(...numbers.filter(x => x > min));\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpyc_r8ost.js:12:12)\n    at Object.<anonymous> (/tmp/tmpyc_r8ost.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    } else {\n        return second;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] > first) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124061,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpt3dm5ya5.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt3dm5ya5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpucvkjhox.js:13:12)\n    at Object.<anonymous> (/tmp/tmpucvkjhox.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmp2ay4p24g.js:17:12)\n    at Object.<anonymous> (/tmp/tmp2ay4p24g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min: number | undefined = undefined;\n    let secondMin: number | undefined = undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (min === undefined || numbers[i] < min) {\n            secondMin = min;\n            min = numbers[i];\n        } else if (secondMin === undefined || numbers[i] < secondMin) {\n            secondMin = numbers[i];\n        }\n    }\n    return secondMin;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "-2\n-2\n-2\n2\nundefined\nundefined\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpn6xcidvo.js:26:12)\n    at Object.<anonymous> (/tmp/tmpn6xcidvo.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpx0gl4h8p.js:12:12)\n    at Object.<anonymous> (/tmp/tmpx0gl4h8p.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Infinity;\n    let second = Infinity;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Infinity) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let firstIndex = numbers.indexOf(first);\n    numbers.splice(firstIndex, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124060,
      "stdout": "-2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmp3ukujbnd.js:14:12)\n    at Object.<anonymous> (/tmp/tmp3ukujbnd.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1665509680,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely deep-equal\n\n-0.5\n    at test (/tmp/tmpq636uf58.js:20:12)\n    at Object.<anonymous> (/tmp/tmpq636uf58.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected: -0.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124063,
      "stdout": "-2\n0\n0\nundefined\nundefined\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let min1: number = Math.min(...numbers);\n    let min2: number = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min1) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\nundefined\n    at test (/tmp/tmpe_ecbbhh.js:17:12)\n    at Object.<anonymous> (/tmp/tmpe_ecbbhh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: undefined,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n    let first = Number.MAX_VALUE;\n    let second = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Number.MAX_VALUE) {\n        return undefined;\n    }\n    return second;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
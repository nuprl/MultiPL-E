{
  "name": "mbpp_578_interleave_lists",
  "language": "ts",
  "prompt": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_578_interleave_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i: number = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < list1.length; i++) {\n    result.push(list1[i]);\n    result.push(list2[i]);\n    result.push(list3[i]);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i: number = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleave_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleave_list.push(list1[i]);\n        interleave_list.push(list2[i]);\n        interleave_list.push(list3[i]);\n    }\n    return interleave_list;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i], list2[i], list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < list1.length; i++) {\n    result.push(list1[i]);\n    result.push(list2[i]);\n    result.push(list3[i]);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i: number = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i], list2[i], list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i], list2[i], list3[i]);\n    }\n    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i], list2[i], list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i], list2[i], list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i], list2[i], list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i], list2[i], list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let newList: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        newList.push(list1[i]);\n        newList.push(list2[i]);\n        newList.push(list3[i]);\n    }\n    return newList;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved.push(list1[i]);\n        interleaved.push(list2[i]);\n        interleaved.push(list3[i]);\n    }\n    return interleaved;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let interleaved_list: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        interleaved_list.push(list1[i]);\n        interleaved_list.push(list2[i]);\n        interleaved_list.push(list3[i]);\n    }\n    return interleaved_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i]);\n        result.push(list2[i]);\n        result.push(list3[i]);\n    }\n    return result;\n}\n\nconsole.log(interleave_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1666123570,
      "stdout": "[\n  1, 4, 7, 2, 5,\n  8, 3, 6, 9\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to interleave 3 lists of the same length into a single flat list.\nfunction interleave_lists(list1: number[], list2: number[], list3: number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i], list2[i], list3[i]);\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = interleave_lists;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7], [10, 20, 30, 40, 50, 60, 70], [100, 200, 300, 400, 500, 600, 700]),[1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700]);\n  assert.deepEqual(candidate([10, 20], [15, 2], [5, 10]),[10, 15, 5, 20, 2, 10]);\n  assert.deepEqual(candidate([11, 44], [10, 15], [20, 5]),[11, 10, 20, 44, 15, 5]);\n}\n\ntest();",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
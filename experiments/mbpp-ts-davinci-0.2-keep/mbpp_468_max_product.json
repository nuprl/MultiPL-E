{
  "name": "mbpp_468_max_product",
  "language": "ts",
  "prompt": "//Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfunction max_product(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product;\n  assert.deepEqual(candidate([3, 100, 4, 5, 150, 6]),3000);\n  assert.deepEqual(candidate([4, 42, 55, 68, 80]),50265600);\n  assert.deepEqual(candidate([10, 22, 9, 33, 21, 50, 41, 60]),2460);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let maxProduct = 1;\n    let currentProduct = 1;\n    for (let i = 0; i < arr.length; i++) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    currentProduct = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    return maxProduct;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        max = Math.max(max, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    return max;\n}\n",
    "    let maxProduct = 1;\n    let currProduct = 1;\n    let prev = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] > prev) {\n            currProduct *= arr[i];\n        } else {\n            maxProduct = Math.max(maxProduct, currProduct);\n            currProduct = 1;\n        }\n        prev = arr[i];\n    }\n    return Math.max(maxProduct, currProduct);\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        max_product = Math.max(max_product, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    product = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        product *= arr[i];\n        max_product = Math.max(max_product, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    return max_product;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n    if (max_so_far < max_ending_here) {\n      max_so_far = max_ending_here;\n    }\n  }\n  return max_so_far;\n}\n",
    "    let max_so_far = 1;\n    let min_so_far = 1;\n    let max_product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (max_so_far > max_product) {\n            max_product = max_so_far;\n        }\n    }\n    return max_product;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\nconsole.log(max_product([5, 4, 3, 2, 1]));\nconsole.log(max_product([1, 2, 3, 4, -5]));\nconsole.log(max_product([-5, -4, -3, -2, -1]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11, -12]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11, -12, 13]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11, -12, 13, -14]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11, -12, 13, -14, 15]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11, -12, 13, -14, 15, -16]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, -10, 11, -12, 13, -14, 15,",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let maxProduct = 1;\n    let currentProduct = 1;\n    for (let i = 0; i < arr.length; i++) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    currentProduct = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    return maxProduct;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let dp = new Array(arr.length).fill(0);\n    dp[0] = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j]) {\n                dp[i] = Math.max(dp[i], dp[j] * arr[i]);\n            }\n        }\n        max = Math.max(max, dp[i]);\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let current = 0;\n  for (let i = 0; i < arr.length; i++) {\n    current = current * arr[i];\n    if (current > max) {\n      max = current;\n    }\n    if (current === 0) {\n      current = 1;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 0;\n    let n = arr.length;\n    for (let i = 0; i < n; i++) {\n        let product = 1;\n        for (let j = i; j < n; j++) {\n            product *= arr[j];\n            max_product = Math.max(max_product, product);\n        }\n    }\n    return max_product;\n}\n",
    "    let max_product = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_so_far = Math.max(arr[i], max_so_far + arr[i]);\n        max_product = Math.max(max_product, max_so_far);\n    }\n    return max_product;\n}\n",
    "    let max = arr[0];\n    let min = arr[0];\n    let result = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        let temp = max;\n        max = Math.max(Math.max(max * arr[i], min * arr[i]), arr[i]);\n        min = Math.min(Math.min(temp * arr[i], min * arr[i]), arr[i]);\n        if (max > result) {\n            result = max;\n        }\n    }\n    return result;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n\n    return max_so_far;\n}\n",
    "    let max_product: number = 1;\n    let product: number = 1;\n    for (let i: number = 0; i < arr.length; i++) {\n        product = product * arr[i];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\nconsole.log(max_product([1, 2, 3, 4, -5]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12, 13,",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max = 1;\n    let min = 1;\n    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max = max * arr[i];\n            min = Math.min(min * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max = 1;\n            min = 1;\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], 1);\n            min = temp * arr[i];\n        }\n        if (result < max) {\n            result = max;\n        }\n    }\n    return result;\n}\n\nconsole.log(max_product([-1, -3, -10, 0, 60]));\nconsole.log(max_product([-2, -3, 0, -2, -40]));\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                max = Math.max(max, arr[i] * arr[j]);\n            }\n        }\n    }\n    return max;\n}\n",
    "  let max = 0;\n  let product = 1;\n  let i = 0;\n  let j = 0;\n  while (i < arr.length) {\n    if (arr[i] > arr[j]) {\n      product *= arr[i];\n      i++;\n    } else {\n      product = 1;\n      j = i;\n      i++;\n    }\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(max_product([1, 2, 3, 4, 5, 0,",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 1;\n    let min_so_far = 1;\n    let max_ending_here = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n            if (max_ending_here == 1) {\n                flag = 0;\n            }\n        }\n        if (flag == 1) {\n            max_so_far = Math.max(max_so_far, max_ending_here);\n        }\n    }\n    if (max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let max_so_far = 1;\n  let min_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_so_far = max_so_far * arr[i];\n      min_so_far = Math.min(min_so_far * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_so_far = 1;\n      min_so_far = 1;\n    } else {\n      let temp = max_so_far;\n      max_so_far = Math.max(min_so_far * arr[i], 1);\n      min_so_far = temp * arr[i];\n    }\n    if (max < max_so_far) max = max_so_far;\n  }\n  return max;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        max_product = Math.max(max_product, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    product = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        product *= arr[i];\n        max_product = Math.max(max_product, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    return max_product;\n}\n",
    "    let max_product = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let product = 1;\n        for (let j = i; j < arr.length; j++) {\n            product *= arr[j];\n            max_product = Math.max(max_product, product);\n        }\n    }\n    return max_product;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max;\n}\n",
    "    let max_so_far = 1;\n    let min_so_far = 1;\n    let result = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (result < max_so_far) {\n            result = max_so_far;\n        }\n    }\n    return result;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n\n    return max_so_far;\n}\n",
    "    let max_so_far = 1;\n    let min_so_far = 1;\n    let max_ending_here = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n            if (max_ending_here == 1) {\n                flag = 0;\n            }\n        }\n        if (flag == 1) {\n            max_so_far = Math.max(max_so_far, max_ending_here);\n        }\n    }\n    if (max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "  let max_product = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product = product * arr[i];\n    max_product = Math.max(product, max_product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product = product * arr[i];\n    max_product = Math.max(product, max_product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max_product;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([0, -1, 3, 100]));\nconsole.log(max_product([-1, -1, -2, -3]));\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\nconsole.log(max_product([1, 2, 3, 4, -5]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10, 11]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10, 11, 12]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10, 11, 12, 13]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, -7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(max_product([1, 2, 3, 4,",
    "  let max_product = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product = product * arr[i];\n    max_product = Math.max(max_product, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max_product;\n}\n",
    "    let max: number = 0;\n    let min: number = 0;\n    let result: number = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max = Math.max(max * arr[i], arr[i]);\n            min = Math.min(min * arr[i], arr[i]);\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], arr[i]);\n            min = Math.min(temp * arr[i], arr[i]);\n        }\n        result = Math.max(result, max);\n    }\n    return result;\n}\n",
    "    let max = 1;\n    let min = 1;\n    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max = max * arr[i];\n            min = Math.min(min * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max = 1;\n            min = 1;\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], 1);\n            min = temp * arr[i];\n        }\n        if (result < max) {\n            result = max;\n        }\n    }\n    return result;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([0, -1, 3, 100, 70, 50]));\nconsole.log(max_product([-1, -3, -4, 2]));\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "  let max_product = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product = product * arr[i];\n    max_product = Math.max(max_product, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product = product * arr[i];\n    max_product = Math.max(max_product, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max_product;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 0;\n    let max_so_far = 1;\n    let min_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if (max_so_far > max_product) {\n            max_product = max_so_far;\n        }\n    }\n\n    return max_product;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    return max_so_far;\n}\n",
    "  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let product = 1;\n    for (let j = i; j < arr.length; j++) {\n      product *= arr[j];\n      max = Math.max(max, product);\n    }\n  }\n  return max;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    let i = 0;\n    let j = 0;\n    while (i < arr.length) {\n        if (arr[i] > arr[j]) {\n            product *= arr[i];\n            if (product > max_product) {\n                max_product = product;\n            }\n            i++;\n        } else {\n            product = 1;\n            j = i;\n            i++;\n        }\n    }\n    return max_product;\n}\n",
    "    let max = 0;\n    let product = 1;\n    let i = 0;\n    let j = 0;\n    while (i < arr.length) {\n        if (arr[i] > arr[j]) {\n            product *= arr[i];\n            i++;\n        } else {\n            product /= arr[j];\n            j++;\n        }\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let max_so_far = 1;\n    let min_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (max < max_so_far) {\n            max = max_so_far;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "  let maxProduct = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > maxProduct) {\n      maxProduct = product;\n    }\n  }\n  return maxProduct;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\nconsole.log(max_product([1, 2, 3, 4, -5]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10, 11]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10, 11, 12]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(max_product([1, 2, 3, 4, -5, -6,",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product = product * arr[i];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([-1, -2, -9, -6]));\n",
    "  let max_product = 0;\n  let max_so_far = 1;\n  let min_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_so_far *= arr[i];\n      min_so_far = Math.min(min_so_far * arr[i], 1);\n    } else if (arr[i] === 0) {\n      max_so_far = 1;\n      min_so_far = 1;\n    } else {\n      let temp = max_so_far;\n      max_so_far = Math.max(min_so_far * arr[i], 1);\n      min_so_far = temp * arr[i];\n    }\n    if (max_so_far > max_product) {\n      max_product = max_so_far;\n    }\n  }\n  return max_product;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([-1, -2, -3, -4]));\nconsole.log(max_product([-1, -2, -3, 0, 7]));\nconsole.log(max_product([-1, -2, -3, 0, -7]));\nconsole.log(max_product([-1, -2, -3, 0, -7, -1]));\nconsole.log(max_product([6, -3, -10, 0, 2]));\nconsole.log(max_product([-1, -3, -10, 0, 60]));\nconsole.log(max_product([-2, -3, 0, -2, -40]));\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        max_product = Math.max(product, max_product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    product = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        product *= arr[i];\n        max_product = Math.max(product, max_product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    return max_product;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n    if (max_so_far < max_ending_here) max_so_far = max_ending_here;\n  }\n  return max_so_far;\n}\n\nconsole.log(max_product([6, -3, -10, 0, 2]));\nconsole.log(max_product([-1, -3, -10, 0, 60]));\nconsole.log(max_product([-2, -3, 0, -2, -40]));\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let min = 0;\n    let result = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max = Math.max(max * arr[i], arr[i]);\n            min = Math.min(min * arr[i], arr[i]);\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], arr[i]);\n            min = Math.min(temp * arr[i], arr[i]);\n        }\n        result = Math.max(result, max);\n    }\n    return result;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product = product * arr[i];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let product = 1;\n        for (let j = i; j < arr.length; j++) {\n            product *= arr[j];\n            if (product > max) {\n                max = product;\n            }\n        }\n    }\n    return max;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product *= arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = arr[0];\n    let min = arr[0];\n    let result = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        let temp = max;\n        max = Math.max(Math.max(max * arr[i], min * arr[i]), arr[i]);\n        min = Math.min(Math.min(temp * arr[i], min * arr[i]), arr[i]);\n        if (max > result) {\n            result = max;\n        }\n    }\n    return result;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max_product = 1;\n  let min_product = 1;\n  let max_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_product *= arr[i];\n      min_product = Math.min(min_product * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_product = 1;\n      min_product = 1;\n    } else {\n      let temp = max_product;\n      max_product = Math.max(min_product * arr[i], 1);\n      min_product = temp * arr[i];\n    }\n    if (max_so_far < max_product) max_so_far = max_product;\n  }\n  return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max = 0;\n    let curr = 0;\n    for (let i = 0; i < arr.length; i++) {\n        curr = arr[i];\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[j] > arr[i]) {\n                curr *= arr[j];\n            }\n        }\n        if (curr > max) {\n            max = curr;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 1;\n    let min_so_far = 1;\n    let max_ending_here = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n            if (max_ending_here == 1) {\n                flag = 0;\n            }\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let product = 1;\n    let i = 0;\n    let j = 0;\n    while (j < arr.length) {\n        if (arr[j] > arr[i]) {\n            product *= arr[j];\n            max_product = Math.max(max_product, product);\n            j++;\n        } else {\n            product = 1;\n            i = j;\n            j++;\n        }\n    }\n    return max_product;\n}\n",
    "    let max_product = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_so_far = Math.max(arr[i], max_so_far * arr[i]);\n        max_product = Math.max(max_so_far, max_product);\n    }\n    return max_product;\n}\n",
    "  let max = 0;\n  let max_so_far = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > max_so_far) {\n      max_so_far = arr[i];\n      max = max_so_far * max;\n    } else {\n      max = max_so_far * max;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    let i = 0;\n    let j = 0;\n    while (i < arr.length) {\n        if (arr[i] > arr[j]) {\n            product *= arr[i];\n            i++;\n        } else {\n            product /= arr[j];\n            j++;\n        }\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n  let flag = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n      flag = 1;\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n    if (max_so_far < max_ending_here) {\n      max_so_far = max_ending_here;\n    }\n  }\n  if (flag == 0 && max_so_far == 1) {\n    return 0;\n  }\n  return max_so_far;\n}\n",
    "    let max = 0;\n    let curr = 0;\n    for (let i = 0; i < arr.length; i++) {\n        curr = arr[i];\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[j] > arr[i]) {\n                curr *= arr[j];\n            }\n        }\n        max = Math.max(max, curr);\n    }\n    return max;\n}\n",
    "    let max_product = 1;\n    let max_so_far = 1;\n    let min_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (max_product < max_so_far) {\n            max_product = max_so_far;\n        }\n    }\n    return max_product;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_product = 0;\n    let max_so_far = 0;\n    let min_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = Math.max(max_so_far * arr[i], arr[i]);\n            min_so_far = Math.min(min_so_far * arr[i], arr[i]);\n        } else if (arr[i] === 0) {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], arr[i]);\n            min_so_far = Math.min(temp * arr[i], arr[i]);\n        }\n        if (max_so_far > max_product) {\n            max_product = max_so_far;\n        }\n    }\n    return max_product;\n}\n\nconsole.log(max_product([-1, -3, -10, 0, 60]));\nconsole.log(max_product([-2, -3, 0, -2, -40]));\n",
    "  let max = 0;\n  let min = 0;\n  let result = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max = Math.max(max * arr[i], arr[i]);\n      min = Math.min(min * arr[i], arr[i]);\n    } else {\n      let temp = max;\n      max = Math.max(min * arr[i], arr[i]);\n      min = Math.min(temp * arr[i], arr[i]);\n    }\n    result = Math.max(result, max);\n  }\n  return result;\n}\n",
    "  let max = 0;\n  let min = 0;\n  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max = Math.max(max * arr[i], arr[i]);\n      min = Math.min(min * arr[i], arr[i]);\n    } else {\n      let temp = max;\n      max = Math.max(min * arr[i], arr[i]);\n      min = Math.min(temp * arr[i], arr[i]);\n    }\n    result = Math.max(result, max);\n  }\n  return result;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max_product = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product = product * arr[i];\n    if (product > max_product) {\n      max_product = product;\n    }\n  }\n  return max_product;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([4, 3, 2, 1]));\nconsole.log(max_product([0, -1, -2, -3]));\nconsole.log(max_product([-4, -3, -2, -1]));\nconsole.log(max_product([-1, -2, -3, 0]));\nconsole.log(max_product([-4, -3, -2, -1, 60]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7, -8]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7, -8, -9]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7, -8, -9, -10]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7, -8, -9, -10, -11]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7, -8, -9, -10, -11, -12]));\nconsole.log(max_product([-4, -3, -2, -1, -5, -6, -7, -8, -9, -10, -11, -12, -13]));\n",
    "    let max = 0;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        max_so_far = max_so_far * arr[i];\n        if (max < max_so_far) {\n            max = max_so_far;\n        }\n        if (arr[i] === 0) {\n            max_so_far = 1;\n        }\n    }\n    max_so_far = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_so_far = max_so_far * arr[i];\n        if (max < max_so_far) {\n            max = max_so_far;\n        }\n        if (arr[i] === 0) {\n            max_so_far = 1;\n        }\n    }\n    return max;\n}\n",
    "    let max = 1;\n    let min = 1;\n    let result = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max *= arr[i];\n            min *= arr[i];\n        } else if (arr[i] === 0) {\n            max = 1;\n            min = 1;\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], 1);\n            min = temp * arr[i];\n        }\n        if (result < max) {\n            result = max;\n        }\n    }\n    return result;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;\n}\n",
    "    let max = arr[0];\n    let min = arr[0];\n    let result = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        let temp = max;\n        max = Math.max(Math.max(max * arr[i], min * arr[i]), arr[i]);\n        min = Math.min(Math.min(temp * arr[i], min * arr[i]), arr[i]);\n        if (max > result) {\n            result = max;\n        }\n    }\n    return result;\n}\n",
    "    let max = 1;\n    let min = 1;\n    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max *= arr[i];\n            min = Math.min(min * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max = 1;\n            min = 1;\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], 1);\n            min = temp * arr[i];\n        }\n        if (result < max) {\n            result = max;\n        }\n    }\n    return result;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            product *= arr[i];\n            max_product = Math.max(product, max_product);\n        } else {\n            product = 1;\n        }\n    }\n    return max_product;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        max = Math.max(max, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    product = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        product *= arr[i];\n        max = Math.max(max, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        max = Math.max(max, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    product = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        product *= arr[i];\n        max = Math.max(max, product);\n        if (product === 0) {\n            product = 1;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) product = 1;\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product *= arr[i];\n    max = Math.max(max, product);\n    if (product === 0) product = 1;\n  }\n  return max;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n\n    if (max_so_far < max_ending_here) {\n      max_so_far = max_ending_here;\n    }\n  }\n\n  return max_so_far;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([0, -1, -2, -3]));\nconsole.log(max_product([-1, -2, -3, 0]));\nconsole.log(max_product([-1, -2, -3, 4]));\nconsole.log(max_product([-1, -2, -3, -4]));\nconsole.log(max_product([0, -1, -2, -3, -4]));\nconsole.log(max_product([-1, -2, -3, -4, 0]));\nconsole.log(max_product([-1, -2, -3, -4, -5]));\nconsole.log(max_product([-1, -2, -3, -4, -5, -6]));\nconsole.log(max_product([-1, -2, -3, -4, -5, -6, -7]));\nconsole.log(max_product([-1, -2, -3, -4, -5, -6, -7, -8",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let max_so_far = 1;\n    let min_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (max < max_so_far) {\n            max = max_so_far;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[j] > arr[i]) {\n                max = Math.max(max, arr[i] * arr[j]);\n            }\n        }\n    }\n    return max;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n  let flag = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n      flag = 1;\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n    if (max_so_far < max_ending_here) {\n      max_so_far = max_ending_here;\n    }\n  }\n  if (flag == 0 && max_so_far == 1) {\n    return 0;\n  }\n  return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n\nconsole.log(max_product([-1, -3, -10, 0, 60]));\nconsole.log(max_product([-2, -3, 0, -2, -40]));\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;\n}\n",
    "  let max_product = 1;\n  let min_product = 1;\n  let max_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_product = max_product * arr[i];\n      min_product = Math.min(min_product * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_product = 1;\n      min_product = 1;\n    } else {\n      let temp = max_product;\n      max_product = Math.max(min_product * arr[i], 1);\n      min_product = temp * arr[i];\n    }\n    if (max_so_far < max_product) {\n      max_so_far = max_product;\n    }\n  }\n  return max_so_far;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([0, -1, -3, 100]));\nconsole.log(max_product([-1, -1, -2, 4, 3]));\n",
    "    let maxProduct = 0;\n    let currentProduct = 1;\n    for (let i = 0; i < arr.length; i++) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    return maxProduct;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let maxProduct = 0;\n    let currentProduct = 1;\n    for (let i = 0; i < arr.length; i++) {\n        currentProduct *= arr[i];\n        if (currentProduct > maxProduct) {\n            maxProduct = currentProduct;\n        }\n    }\n    return maxProduct;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_so_far = Math.max(arr[i], max_so_far * arr[i]);\n        max = Math.max(max, max_so_far);\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\n",
    "  let max = 0;\n  let current = 0;\n  for (let i = 0; i < arr.length; i++) {\n    current = arr[i];\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] > arr[i]) {\n        current *= arr[j];\n      }\n    }\n    if (current > max) {\n      max = current;\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5])); // 60\nconsole.log(max_product([5, 4, 3, 2, 1])); // 6\nconsole.log(max_product([1, 5, 4, 3])); // 60\nconsole.log(max_product([3, 4, 5, 1])); // 60\nconsole.log(max_product([1, 10, 2, 6, 5, 3])); // 300\nconsole.log(max_product([10, 1, 2, 3, 4, 10])); // 400\nconsole.log(max_product([1, 2, 3, 0, -1, -2, -3])); // 18\nconsole.log(max_product([-1, -2, -3, 0, 1, 2, 3])); // 18\nconsole.log(max_product([-1, -2, -3, -4, -5])); // 120\nconsole.log(max_product([-5, -4, -3, -2, -1])); // -6\nconsole.log(max_product([-1, -5, -4, -3])); // -6\nconsole.log(max_product([-3, -4, -5, -1])); // -6\nconsole.log(max_product([-1, -10, -2, -6, -5, -3])); // -30\nconsole.log(max_product([-10, -1, -2, -3, -4, -10])); // -40\nconsole.log(max_product([-1, -2, -3, 0, 1, 2, 3])); // 18\nconsole.log(max_product",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 0;\n    let max_so_far = 0;\n    let min_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = Math.max(max_so_far * arr[i], arr[i]);\n            min_so_far = Math.min(min_so_far * arr[i], arr[i]);\n        } else if (arr[i] === 0) {\n            max_so_far = 0;\n            min_so_far = 0;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], arr[i]);\n            min_so_far = Math.min(temp * arr[i], arr[i]);\n        }\n        if (max_so_far > max_product) {\n            max_product = max_so_far;\n        }\n    }\n    return max_product;\n}\n",
    "  let max = 0;\n  let temp = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] > arr[i]) {\n        temp = arr[i] * arr[j];\n        if (temp > max) {\n          max = temp;\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconsole.log(max_product([1, 5, 10, 8, 9]));\n",
    "    let maxProduct = 1;\n    let currentProduct = 1;\n    for (let i = 0; i < arr.length; i++) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    currentProduct = 1;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        currentProduct *= arr[i];\n        maxProduct = Math.max(maxProduct, currentProduct);\n        if (currentProduct === 0) {\n            currentProduct = 1;\n        }\n    }\n    return maxProduct;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 1;\n    let min_so_far = 1;\n    let max_product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (max_product < max_so_far) {\n            max_product = max_so_far;\n        }\n    }\n    return max_product;\n}\n",
    "  let max = 0;\n  let max_so_far = 1;\n  let min_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_so_far = max_so_far * arr[i];\n      min_so_far = Math.min(min_so_far * arr[i], 1);\n    } else if (arr[i] === 0) {\n      max_so_far = 1;\n      min_so_far = 1;\n    } else {\n      let temp = max_so_far;\n      max_so_far = Math.max(min_so_far * arr[i], 1);\n      min_so_far = temp * arr[i];\n    }\n    if (max < max_so_far) {\n      max = max_so_far;\n    }\n  }\n  return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_product = 0;\n    let current_product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        current_product *= arr[i];\n        if (current_product > max_product) {\n            max_product = current_product;\n        }\n    }\n    return max_product;\n}\n",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n    if (max_so_far < max_ending_here) max_so_far = max_ending_here;\n  }\n  return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    return max_so_far;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    let i = 0;\n    let j = 0;\n    while (i < arr.length) {\n        if (arr[i] > arr[j]) {\n            product *= arr[i];\n            i++;\n        } else {\n            product = product / arr[j];\n            j++;\n        }\n        max_product = Math.max(max_product, product);\n    }\n    return max_product;\n}\n\nconsole.log(max_product([1, 2, 3, 4, 5]));\nconsole.log(max_product([5, 4, 3, 2, 1]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(max_product([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3]));\nconsole.log(max_product([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9,",
    "  let max = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product *= arr[i];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product = product * arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "  let max_ending_here = 1;\n  let min_ending_here = 1;\n  let max_so_far = 1;\n  let flag = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      max_ending_here = max_ending_here * arr[i];\n      min_ending_here = Math.min(min_ending_here * arr[i], 1);\n      flag = 1;\n    } else if (arr[i] == 0) {\n      max_ending_here = 1;\n      min_ending_here = 1;\n    } else {\n      let temp = max_ending_here;\n      max_ending_here = Math.max(min_ending_here * arr[i], 1);\n      min_ending_here = temp * arr[i];\n    }\n\n    if (max_so_far < max_ending_here) {\n      max_so_far = max_ending_here;\n    }\n  }\n\n  if (flag == 0 && max_so_far == 1) {\n    return 0;\n  }\n\n  return max_so_far;\n}\n\nconsole.log(max_product([1, 2, 3, 4]));\nconsole.log(max_product([0, -1, 3, 100, 70, 50]));\nconsole.log(max_product([-1, -1, -2, -3]));",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    if (flag == 0 && max_so_far == 1)\n        return 0;\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max = 1;\n    let min = 1;\n    let result = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max *= arr[i];\n            min = Math.min(min * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max = 1;\n            min = 1;\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], 1);\n            min = temp * arr[i];\n        }\n        if (result < max) {\n            result = max;\n        }\n    }\n    return result;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n        if (product > max) {\n            max = product;\n        }\n    }\n    return max;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let max_so_far = 1;\n    let min_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_so_far = max_so_far * arr[i];\n            min_so_far = Math.min(min_so_far * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_so_far = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_so_far;\n            max_so_far = Math.max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n        if (max_product < max_so_far) {\n            max_product = max_so_far;\n        }\n    }\n    return max_product;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 0;\n    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product = product * arr[i];\n        if (product > max_product) {\n            max_product = product;\n        }\n    }\n    return max_product;\n}\n",
    "    let max = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_so_far = Math.max(arr[i], max_so_far * arr[i]);\n        max = Math.max(max, max_so_far);\n    }\n    return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max = 0;\n    let min = 0;\n    let result = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max = Math.max(max * arr[i], arr[i]);\n            min = Math.min(min * arr[i], arr[i]);\n        } else {\n            let temp = max;\n            max = Math.max(min * arr[i], arr[i]);\n            min = Math.min(temp * arr[i], arr[i]);\n        }\n        result = Math.max(result, max);\n    }\n    return result;\n}\n",
    "  let max = 0;\n  let curr = 1;\n  for (let i = 0; i < arr.length; i++) {\n    curr *= arr[i];\n    max = Math.max(max, curr);\n    if (curr === 0) {\n      curr = 1;\n    }\n  }\n  curr = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    curr *= arr[i];\n    max = Math.max(max, curr);\n    if (curr === 0) {\n      curr = 1;\n    }\n  }\n  return max;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    let flag = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (flag == 0 && max_so_far == 1) {\n        return 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_ending_here = 1;\n    let min_ending_here = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = Math.min(min_ending_here * arr[i], 1);\n        } else if (arr[i] == 0) {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = Math.max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_product = 1;\n    let min_product = 1;\n    let max_so_far = 1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > 0) {\n            max_product = max_product * arr[i];\n            min_product = Math.min(min_product * arr[i], 1);\n        } else if (arr[i] === 0) {\n            max_product = 1;\n            min_product = 1;\n        } else {\n            let temp = max_product;\n            max_product = Math.max(min_product * arr[i], 1);\n            min_product = temp * arr[i];\n        }\n        if (max_so_far < max_product) {\n            max_so_far = max_product;\n        }\n    }\n    return max_so_far;\n}\n",
    "  let max_product = 0;\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    product = product * arr[i];\n    max_product = Math.max(max_product, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  product = 1;\n  for (let i = arr.length - 1; i >= 0; i--) {\n    product = product * arr[i];\n    max_product = Math.max(max_product, product);\n    if (product === 0) {\n      product = 1;\n    }\n  }\n  return max_product;\n}\n",
    "  let max = 0;\n  let min = 0;\n  let result = Number.MIN_SAFE_INTEGER;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < 0) {\n      let temp = max;\n      max = min;\n      min = temp;\n    }\n    max = Math.max(arr[i], max * arr[i]);\n    min = Math.min(arr[i], min * arr[i]);\n    result = Math.max(result, max);\n  }\n  return result;\n}\n\nconsole.log(max_product([-1, -3, -10, 0, 60]));\nconsole.log(max_product([-2, -3, 0, -2, -40]));\n"
  ]
}
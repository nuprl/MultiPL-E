{
  "name": "mbpp_755_second_smallest",
  "language": "ts",
  "prompt": "//Write a function to find the second smallest number in a list.\nfunction second_smallest(numbers: any): number | undefined {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = second_smallest;\n  assert.deepEqual(candidate([1, 2, -8, -2, 0, -2]),-2);\n  assert.deepEqual(candidate([1, 1, -0.5, 0, 2, -2, -2]),-0.5);\n  assert.deepEqual(candidate([2, 2]),undefined);\n  assert.deepEqual(candidate([2, 2, 2]),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let min = Math.min(...numbers);\n    let second_min = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second_min && numbers[i] > min) {\n            second_min = numbers[i];\n        }\n    }\n    return second_min;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n",
    "    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n",
    "    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n",
    "    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n",
    "    let min: number | undefined;\n    let secondMin: number | undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min || min === undefined) {\n            secondMin = min;\n            min = numbers[i];\n        } else if (numbers[i] < secondMin || secondMin === undefined) {\n            secondMin = numbers[i];\n        }\n    }\n    return secondMin;\n}\n",
    "    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(Math.min(...numbers));\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n",
    "    let first = Math.min(...numbers);\n    let indexOfFirst = numbers.indexOf(first);\n    numbers.splice(indexOfFirst, 1);\n    let second = Math.min(...numbers);\n    return second;\n}\n",
    "    let first = Math.min(...numbers);\n    let filtered = numbers.filter(n => n != first);\n    return Math.min(...filtered);\n}\n",
    "    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n",
    "    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n",
    "    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n",
    "    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    return Math.min(...numbers);\n}\n",
    "    let min1 = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min1) {\n            min2 = min1;\n            min1 = numbers[i];\n        } else if (numbers[i] < min2) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n",
    "    let min = Math.min(...numbers);\n    let index = numbers.indexOf(min);\n    numbers.splice(index, 1);\n    let secondMin = Math.min(...numbers);\n    return secondMin;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\n",
    "    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\n",
    "    let min = Math.min(...numbers);\n    let newArray = numbers.filter(x => x !== min);\n    return Math.min(...newArray);\n}\n",
    "    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] != first) {\n            second = numbers[i];\n        }\n    }\n    if (second == Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n",
    "    let min = Math.min(...numbers);\n    let min2 = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < min2 && numbers[i] > min) {\n            min2 = numbers[i];\n        }\n    }\n    return min2;\n}\n\nconsole.log(second_smallest([1, 2, -8, -2, 0]));\nconsole.log(second_smallest([1, 1, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([1, 1, 1, 0, 0, 0, 2, -2, -2]));\nconsole.log(second_smallest([2, 2]));\nconsole.log(second_smallest([2]));\nconsole.log(second_smallest([5, 4, 3, 2, 1]));\nconsole.log(second_smallest([]));\n",
    "    let first = Math.min(...numbers);\n    let second = Math.max(...numbers);\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < second && numbers[i] !== first) {\n            second = numbers[i];\n        }\n    }\n    if (second === Math.max(...numbers)) {\n        return undefined;\n    }\n    return second;\n}\n",
    "    let first: number | undefined = undefined;\n    let second: number | undefined = undefined;\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] < first || first === undefined) {\n            second = first;\n            first = numbers[i];\n        } else if (numbers[i] < second || second === undefined) {\n            second = numbers[i];\n        }\n    }\n    return second;\n}\n"
  ]
}
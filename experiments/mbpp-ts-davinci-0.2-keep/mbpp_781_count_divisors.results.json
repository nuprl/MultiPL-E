{
  "name": "mbpp_781_count_divisors",
  "language": "ts",
  "prompt": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_781_count_divisors.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(6));\nconsole.log(count_divisors(7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\nconsole.log(count_divisors(14));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(16));\nconsole.log(count_divisors(17));\nconsole.log(count_divisors(18));\nconsole.log(count_divisors(19));\nconsole.log(count_divisors(20));\nconsole.log(count_divisors(21));\nconsole.log(count_divisors(22));\nconsole.log(count_divisors(23));\nconsole.log(count_divisors(24));\nconsole.log(count_divisors(25));\nconsole.log(count_divisors(26));\nconsole.log(count_divisors(27));\nconsole.log(count_divisors(28));\nconsole.log(count_divisors(29));\nconsole.log(count_divisors(30));\nconsole.log(count_divisors(31));\nconsole.log(count_divisors(32));\nconsole.log(count_divisors(33));\nconsole.log(count_divisors(34));\nconsole.log(count_divisors(35));\nconsole.log(count_divisors(36));\nconsole.log(count_divisors(37));\nconsole.log(count_divisors(38));\nconsole.log(count_divisors(39));\nconsole.log(count_divisors(40));\nconsole.log(count_divisors(41));\nconsole.log(count_divisors(42));\nconsole.log(count\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "../../../../tmp/tmp_jlu4zto.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmp_jlu4zto.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\nconsole.log(count_divisors(4));\nconsole.log(count_divisors(5));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "false\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for(let i = 1; i <= n; i++) {\n        if(n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count += 1;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\nconsole.log(count_divisors(14));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(16));\nconsole.log(count_divisors(17));\nconsole.log(count_divisors(18));\nconsole.log(count_divisors(19));\nconsole.log(count_divisors(20));\nconsole.log(count_divisors(21));\nconsole.log(count_divisors(22));\nconsole.log(count_divisors(23));\nconsole.log(count_divisors(24));\nconsole.log(count_divisors(25));\nconsole.log(count_divisors(26));\nconsole.log(count_divisors(27));\nconsole.log(count_divisors(28));\nconsole.log(count_divisors(29));\nconsole.log(count_divisors(30));\nconsole.log(count_divisors(31));\nconsole.log(count_divisors(32));\nconsole.log(count_divisors(33));\nconsole.log(count_divisors(34));\nconsole.log(count_divisors(35));\nconsole.log(count_divisors(36));\nconsole.log(count_divisors(37));\nconsole.log(count_divisors(38));\nconsole.log(count_divisors(39));\nconsole.log(count_divisors(40));\nconsole.log(count_divisors(41));\nconsole.log(count_divisors(42));\nconsole.log(count_div\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "../../../../tmp/tmpdysd4ln5.ts(49,1): error TS1005: ',' expected.\n../../../../tmp/tmpdysd4ln5.ts(49,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\nconsole.log(count_divisors(14));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(16));\nconsole.log(count_divisors(17));\nconsole.log(count_divisors(18));\nconsole.log(count_divisors(19));\nconsole.log(count_divisors(20));\nconsole.log(count_divisors(21));\nconsole.log(count_divisors(22));\nconsole.log(count_divisors(23));\nconsole.log(count_divisors(24));\nconsole.log(count_divisors(25));\nconsole.log(count_divisors(26));\nconsole.log(count_divisors(27));\nconsole.log(count_divisors(28));\nconsole.log(count_divisors(29));\nconsole.log(count_divisors(30));\nconsole.log(count_divisors(31));\nconsole.log(count_divisors(32));\nconsole.log(count_divisors(33));\nconsole.log(count_divisors(34));\nconsole.log(count_divisors(35));\nconsole.log(count_divisors(36));\nconsole.log(count_divisors(37));\nconsole.log(count_divisors(38));\nconsole.log(count_divisors(39));\nconsole.log(count_divisors(40));\nconsole.log(count_divisors(41));\nconsole.log(count_divisors(42));\nconsole.log(count\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "../../../../tmp/tmp_jlu4zto.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmp_jlu4zto.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(9));\nconsole.log(count_divisors(6));\nconsole.log(count_divisors(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let divisors = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            divisors++;\n        }\n    }\n    return divisors % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\nconsole.log(count_divisors(14));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(16));\nconsole.log(count_divisors(17));\nconsole.log(count_divisors(18));\nconsole.log(count_divisors(19));\nconsole.log(count_divisors(20));\nconsole.log(count_divisors(21));\nconsole.log(count_divisors(22));\nconsole.log(count_divisors(23));\nconsole.log(count_divisors(24));\nconsole.log(count_divisors(25));\nconsole.log(count_divisors(26));\nconsole.log(count_divisors(27));\nconsole.log(count_divisors(28));\nconsole.log(count_divisors(29));\nconsole.log(count_divisors(30));\nconsole.log(count_divisors(31));\nconsole.log(count_divisors(32));\nconsole.log(count_divisors(33));\nconsole.log(count_divisors(34));\nconsole.log(count_divisors(35));\nconsole.log(count_divisors(36));\nconsole.log(count_divisors(37));\nconsole.log(count_divisors(38));\nconsole.log(count_divisors(39));\nconsole.log(count_divisors(40));\nconsole.log(count_divisors(41));\nconsole.log(count_divisors(42));\nconsole.log(count\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "../../../../tmp/tmp_jlu4zto.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmp_jlu4zto.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(4));\nconsole.log(count_divisors(5));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "false\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(15));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(6));\nconsole.log(count_divisors(8));\nconsole.log(count_divisors(9));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\nconsole.log(count_divisors(14));\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(16));\nconsole.log(count_divisors(17));\nconsole.log(count_divisors(18));\nconsole.log(count_divisors(19));\nconsole.log(count_divisors(20));\nconsole.log(count_divisors(21));\nconsole.log(count_divisors(22));\nconsole.log(count_divisors(23));\nconsole.log(count_divisors(24));\nconsole.log(count_divisors(25));\nconsole.log(count_divisors(26));\nconsole.log(count_divisors(27));\nconsole.log(count_divisors(28));\nconsole.log(count_divisors(29));\nconsole.log(count_divisors(30));\nconsole.log(count_divisors(31));\nconsole.log(count_divisors(32));\nconsole.log(count_divisors(33));\nconsole.log(count_divisors(34));\nconsole.log(count_divisors(35));\nconsole.log(count_divisors(36));\nconsole.log(count_divisors(37));\nconsole.log(count_divisors(38));\nconsole.log(count_divisors(39));\nconsole.log(count_divisors(40));\nconsole.log(count_divisors(41));\nconsole.log(count_divisors(42));\nconsole.log(count\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "../../../../tmp/tmp_jlu4zto.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmp_jlu4zto.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(9));\nconsole.log(count_divisors(6));\nconsole.log(count_divisors(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count += 1;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(8));\nconsole.log(count_divisors(7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123113,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\nconsole.log(count_divisors(15));\nconsole.log(count_divisors(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123113,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123113,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(12));\nconsole.log(count_divisors(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123113,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(count_divisors(10));\nconsole.log(count_divisors(11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1666123112,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\nfunction count_divisors(n: number): boolean {\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            count++;\n        }\n    }\n    return count % 2 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_divisors;\n  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(100),false);\n  assert.deepEqual(candidate(125),true);\n}\n\ntest();",
      "timestamp": 1665510020,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "ts",
  "prompt": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = [];\n    var str2: string[] = str1.split(\"\");\n    for (var i = 0; i < str2.length; i++) {\n        if (str2[i] == \"a\" || str2[i] == \"e\" || str2[i] == \"i\" || str2[i] == \"o\" || str2[i] == \"u\") {\n            vowels.push(str2[i]);\n        }\n    }\n    for (var i = 0; i < str2.length; i++) {\n        if (str2[i] == \"a\" || str2[i] == \"e\" || str2[i] == \"i\" || str2[i] == \"o\" || str2[i] == \"u\") {\n            str2[i] = vowels.pop();\n        }\n    }\n    return str2.join(\"\");\n}\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "aA\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpdxjky8uu.js:22:12)\n    at Object.<anonymous> (/tmp/tmpdxjky8uu.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i: number = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "oHolel Wrld\noPythn\newu3oresrc\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp8ort390v.js:27:12)\n    at Object.<anonymous> (/tmp/tmp8ort390v.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_list: string[] = str1.split('');\n\n    let left: number = 0;\n    let right: number = str1.length - 1;\n    while (left < right) {\n\n        if (vowels.indexOf(str_list[left]) !== -1\n            && vowels.indexOf(str_list[right]) !== -1) {\n\n            let temp: string = str_list[left];\n            str_list[left] = str_list[right];\n            str_list[right] = temp;\n\n            left += 1;\n            right -= 1;\n        }\n\n        if (vowels.indexOf(str_list[left]) === -1)\n            left += 1;\n\n        if (vowels.indexOf(str_list[right]) === -1)\n            right -= 1;\n    }\n    return str_list.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) != -1 && vowels.indexOf(strArr[j]) != -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) != -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) != -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('aEiOuY'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYyY'));\nconsole.log(reverse_vowels('aEiOuYyYy'));\nconsole.log(reverse_vowels('aEiOuYyYyY'));\nconsole.log(reverse_vowels('aEiOuYyYyYy'));\nconsole.log(reverse_vowels('aEiOuYyYyYyY'));\nconsole.log(reverse_vowels('a\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510568,
      "stdout": "../../../../tmp/tmprtu44lgx.ts(43,30): error TS1002: Unterminated string literal.\n../../../../tmp/tmprtu44lgx.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmprtu44lgx.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string = 'aeiouAEIOU';\n    var str1_array: string[] = str1.split('');\n    var temp: string;\n    var i: number = 0;\n    var j: number = str1_array.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str1_array[i]) != -1 && vowels.indexOf(str1_array[j]) != -1) {\n            temp = str1_array[i];\n            str1_array[i] = str1_array[j];\n            str1_array[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str1_array[i]) != -1 && vowels.indexOf(str1_array[j]) == -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str1_array[i]) == -1 && vowels.indexOf(str1_array[j]) != -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str1_array.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_arr: string[] = str1.split(\"\");\n    var temp: string;\n    var i: number = 0;\n    var j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) != -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) != -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Hello Python\"));\nconsole.log(reverse_vowels(\"Hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Hollo Werld\nHollo Pythen\nHolle\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('Github is the second best thing that happend to programmers, after the keyboard!'));\nconsole.log(reverse_vowels('Why do you ask?'));\nconsole.log(reverse_vowels('Always wanted to visit zurich.'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Holle\nPython\nuoiea\nGathob es the secand best thang thot hoppend ta pragrimmers, ofter the kiybuird!\nWhy da yuo osk?\nilwuys wintid to vesat zarAch.\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "uoiea\nholle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "oHolel Wrld\noPythn\newu3oresrc\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmppspjn0wc.js:27:12)\n    at Object.<anonymous> (/tmp/tmppspjn0wc.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split('');\n    let temp_list: string[] = [];\n    let temp_str: string = '';\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list = temp_list.reverse();\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_str += temp_list.shift();\n        } else {\n            temp_str += str_list[i];\n        }\n    }\n    return temp_str;\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = [];\n    let result: string = '';\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            vowels.push(str1[i]);\n        }\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            result += vowels.pop();\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "holle\nleotcede\nuoiea\naA\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpzc5upl9o.js:28:12)\n    at Object.<anonymous> (/tmp/tmpzc5upl9o.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let temp_arr: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            temp_arr.push(str_arr[i]);\n        }\n    }\n    temp_arr.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            str_arr[i] = temp_arr[j];\n            j++;\n        }\n    }\n    temp_str = str_arr.join(\"\");\n    return temp_str;\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello world'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('world'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('aEiOuY'));\nconsole.log(reverse_vowels('aEiOuYb'));\nconsole.log(reverse_vowels('aEiOuYbC'));\nconsole.log(reverse_vowels('aEiOuYbCd'));\nconsole.log(reverse_vowels('aEiOuYbCdE'));\nconsole.log(reverse_vowels('aEiOuYbCdEf'));\nconsole.log(reverse_vowels('aEiOuYbCdEfG'));\nconsole.log(reverse_vowels('aEiOuYbCdEfGh'));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "hollo werld\nuoiea\nholle\nworld\nuOiEa\nuOiEaY\nuOiEaYb\nuOiEaYbC\nuOiEaYbCd\nEuOiEYbCda\nEuOiEYbCdaf\nEuOiEYbCdafG\nEuOiEYbCdafGh\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    let temp: string;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels(''));\nconsole.log(reverse_vowels('b'));\nconsole.log(reverse_vowels('bc'));\nconsole.log(reverse_vowels('bcd'));\nconsole.log(reverse_vowels('bcde'));\nconsole.log(reverse_vowels('bcdef'));\nconsole.log(reverse_vowels('bcdefg'));\nconsole.log(reverse_vowels('bcdefgh'));\nconsole.log(reverse_vowels('bcdefghi'));\nconsole.log(reverse_vowels('bcdefghij'));\nconsole.log(reverse_vowels\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "../../../../tmp/tmph5hp1ixj.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmph5hp1ixj.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "oHolel Wrld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp_zf8ihny.js:25:12)\n    at Object.<anonymous> (/tmp/tmp_zf8ihny.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str1: string[] = str1.split(\"\");\n    var temp: string;\n    var i: number;\n    var j: number;\n    for (i = 0, j = str1.length - 1; i < j; i++ , j--) {\n        if (vowels.indexOf(str1[i]) != -1) {\n            if (vowels.indexOf(str1[j]) != -1) {\n                temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n            }\n        }\n        else if (vowels.indexOf(str1[j]) != -1) {\n            j--;\n        }\n    }\n    return str1.join(\"\");\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"machine\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmpmm3q_iku.ts(4,9): error TS2403: Subsequent variable declarations must have the same type.  Variable 'str1' must be of type 'string', but here has type 'string[]'.\n../../../../tmp/tmpmm3q_iku.ts(12,17): error TS2542: Index signature in type 'String' only permits reading.\n../../../../tmp/tmpmm3q_iku.ts(13,17): error TS2542: Index signature in type 'String' only permits reading.\n../../../../tmp/tmpmm3q_iku.ts(21,17): error TS2339: Property 'join' does not exist on type 'string'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "uoiea\nholle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"aeiouAEIOU\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiou\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiouAEIOU\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiouAEIOUaeiou\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiouAEIOUaeiouAEIOU\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"));\nconsole.log(reverse_vowels(\"aeiouAEIOUaeiouAEIOUaeiouAEI\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmpf1kgptk5.ts(38,57): error TS1002: Unterminated string literal.\n../../../../tmp/tmpf1kgptk5.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmpf1kgptk5.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j++;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpstnstve9.js:29:12)\n    at Object.<anonymous> (/tmp/tmpstnstve9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j++;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\n\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"machine\"));\nconsole.log(reverse_vowels(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "python\nmechina\nholle\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpw_5tlsrr.js:30:12)\n    at Object.<anonymous> (/tmp/tmpw_5tlsrr.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Python\nw3resuorce\nuoiea\nUOIEA\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        } else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('rhythm'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "uoiea\nholle\nleotcede\nrhythm\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        } else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str: string[] = str1.split('');\n    var temp: string[] = [];\n    var t: number = 0;\n    for (var i: number = 0; i < str.length; i++) {\n        if (vowels.indexOf(str[i].toLowerCase()) != -1) {\n            temp[t] = str[i];\n            t++;\n        }\n    }\n    t = 0;\n    for (var i: number = 0; i < str.length; i++) {\n        if (vowels.indexOf(str[i].toLowerCase()) != -1) {\n            str[i] = temp[temp.length - 1 - t];\n            t++;\n        }\n    }\n    return str.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('Reverse'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Hollo Werld\nPython\nReverse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_vowels: string[] = [];\n    let temp_consonants: string[] = [];\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) != -1) {\n            temp_vowels.push(str_list[i]);\n        }\n        else {\n            temp_consonants.push(str_list[i]);\n        }\n    }\n    temp_vowels.reverse();\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) != -1) {\n            str_list[i] = temp_vowels.shift();\n        }\n    }\n    return str_list.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpib0lanru.js:29:12)\n    at Object.<anonymous> (/tmp/tmpib0lanru.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str1.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        } else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('AEIOU'));\nconsole.log(reverse_vowels('why'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('A'));\nconsole.log(reverse_vowels(' '));\nconsole.log(reverse_vowels('.'));\nconsole.log(reverse_vowels('a.'));\nconsole.log(reverse_vowels('a.A'));\nconsole.log(reverse_vowels('a.A.'));\nconsole.log(reverse_vowels('a.A.a'));\nconsole.log(reverse_vowels('a.A.a.'));\nconsole.log(reverse_vowels('a.A.a.A'));\nconsole.log(reverse_vowels('a.A.a.A.'));\nconsole.log(reverse_vowels('a.A.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmpw9pphg9b.ts(39,33): error TS1002: Unterminated string literal.\n../../../../tmp/tmpw9pphg9b.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpw9pphg9b.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        if (i < j) {\n            [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"abcde\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "python\nw3resuorce\nuoiea\nUOIEA\nebcda\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    let result: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        result += c_arr[i];\n        if (v_arr[i] !== undefined) {\n            result += v_arr[i];\n        }\n    }\n    return result;\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Holole Wrld\nPoythn\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Poythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp45u_iuud.js:31:12)\n    at Object.<anonymous> (/tmp/tmp45u_iuud.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Poythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split(\"\");\n    var temp_var: string;\n    var i: number;\n    var j: number;\n\n    i = 0;\n    j = str_list.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) == -1) {\n            i += 1;\n            continue;\n        }\n\n        if (vowels.indexOf(str_list[j].toLowerCase()) == -1) {\n            j -= 1;\n            continue;\n        }\n\n        temp_var = str_list[i];\n        str_list[i] = str_list[j];\n        str_list[j] = temp_var;\n        i += 1;\n        j -= 1;\n    }\n    return str_list.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            [str_arr[i], str_arr[j]] = [str_arr[j], str_arr[i]];\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('hello'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "python\nmechina\nholle\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('aeiouAEIOU'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('aEiOuY'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYyY'));\nconsole.log(reverse_vowels('aEiOuYyYy'));\nconsole.log(reverse_vowels('aEiOuYyYyY'));\nconsole.log(reverse_vowels('aEiOuYyYyYy'));\nconsole.log(reverse_vowels('aEiOuYyYyYyY'));\nconsole.log(reverse\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmp63wzmf6j.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmp63wzmf6j.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('aEiOuY'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vowels('aEiOuYy'));\nconsole.log(reverse_vow\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "../../../../tmp/tmpdj3n2in1.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpdj3n2in1.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) == -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) == -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr = v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "oHolel Wrld\noPythn\nAa\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp3nwx5wz4.js:27:12)\n    at Object.<anonymous> (/tmp/tmp3nwx5wz4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string = 'aeiouAEIOU';\n    var temp: string[] = str1.split('');\n    var i: number = 0;\n    var j: number = str1.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(temp[i]) != -1 && vowels.indexOf(temp[j]) != -1) {\n            var temp_var: string = temp[i];\n            temp[i] = temp[j];\n            temp[j] = temp_var;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(temp[i]) == -1) {\n            i++;\n        }\n        else if (vowels.indexOf(temp[j]) == -1) {\n            j--;\n        }\n    }\n    return temp.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"machine\"));\nconsole.log(reverse_vowels(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "python\nmechina\nholle\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j += 1;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpfc05e5ek.js:29:12)\n    at Object.<anonymous> (/tmp/tmpfc05e5ek.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            j--;\n        }\n        else {\n            i++;\n        }\n    }\n    return str_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"abcde\"));\nconsole.log(reverse_vowels(\"aEiOu\"));\nconsole.log(reverse_vowels(\"aEiOuY\"));\nconsole.log(reverse_vowels(\"abcdeY\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nuoiea\nUOIEA\nebcda\nuOiEa\nuOiEaY\nebcdaY\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j].toLowerCase()) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split(\"\");\n    var temp_var: string;\n    var i: number, j: number;\n    i = 0;\n    j = str_list.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n            if (vowels.indexOf(str_list[j].toLowerCase()) != -1) {\n                temp_var = str_list[i];\n                str_list[i] = str_list[j];\n                str_list[j] = temp_var;\n                i += 1;\n                j -= 1;\n            }\n            else {\n                j -= 1;\n            }\n        }\n        else {\n            i += 1;\n        }\n    }\n    return str_list.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"e\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\ne\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp_arr: string[] = [];\n    let temp_str: string = '';\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            temp_arr.push(str_arr[i]);\n        }\n    }\n    temp_arr = temp_arr.reverse();\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            str_arr[i] = temp_arr.shift();\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello World'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "oHolel Wrld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpgwlbkdwx.js:25:12)\n    at Object.<anonymous> (/tmp/tmpgwlbkdwx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "ohell\neloteced\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpcj9ppdyd.js:26:12)\n    at Object.<anonymous> (/tmp/tmpcj9ppdyd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else {\n            if (vowels.indexOf(str_arr[i]) === -1) {\n                i++;\n            }\n            if (vowels.indexOf(str_arr[j]) === -1) {\n                j--;\n            }\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) == -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) == -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = [];\n    let result: string = '';\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            vowels.push(str1[i]);\n        }\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            result = result + vowels.pop();\n        } else {\n            result = result + str1[i];\n        }\n    }\n    return result;\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "uoiea\npython\naA\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpmgnt711l.js:27:12)\n    at Object.<anonymous> (/tmp/tmpmgnt711l.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    let result: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            result += v_arr.shift();\n        }\n        else {\n            result += c_arr.shift();\n        }\n    }\n    return result;\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) == -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) == -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) != -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) != -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"abcde\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "python\nw3resuorce\nuoiea\nUOIEA\nebcda\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "holle\nleotcede\nuoiea\nwhy\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) == -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) == -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.includes(str_arr[i])) {\n            v_arr.push(str_arr[i]);\n        } else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "ohell\neloteced\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpeyw453rr.js:26:12)\n    at Object.<anonymous> (/tmp/tmpeyw453rr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "holle\nleotcede\nuoiea\nwhy\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else {\n            if (vowels.indexOf(strArr[i]) === -1) {\n                i++;\n            }\n            if (vowels.indexOf(strArr[j]) === -1) {\n                j--;\n            }\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aeiou'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "python\nmechina\nuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('w3resource'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Holle\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp_arr: string[] = [];\n    let temp_str: string = '';\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            temp_arr.push(str_arr[i]);\n        }\n    }\n    temp_arr = temp_arr.reverse();\n    let j: number = 0;\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            str_arr[i] = temp_arr[j];\n            j++;\n        }\n    }\n    temp_str = str_arr.join('');\n    return temp_str;\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        if (i < j) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "python\nw3resuorce\nuoiea\nUOIEA\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_var: string;\n    let i: number = 0;\n    let j: number = str_list.length - 1;\n\n    while (i < j) {\n\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n\n            if (vowels.indexOf(str_list[j].toLowerCase()) != -1) {\n                temp_var = str_list[i];\n                str_list[i] = str_list[j];\n                str_list[j] = temp_var;\n                i += 1;\n                j -= 1;\n            }\n            else {\n                j -= 1;\n            }\n        }\n        else {\n            i += 1;\n        }\n    }\n    return str_list.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Hollo Werld\nPython\nw3resuorce\nuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"machine\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aeiouAEIOU\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "python\nmechina\nuoiea\nUOIEAuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split(\"\");\n    var temp_var: string;\n    var i: number, j: number = str_list.length - 1;\n    for (i = 0; i < j; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n            while (j > i) {\n                if (vowels.indexOf(str_list[j].toLowerCase()) != -1) {\n                    temp_var = str_list[i];\n                    str_list[i] = str_list[j];\n                    str_list[j] = temp_var;\n                    j--;\n                    break;\n                }\n                j--;\n            }\n        }\n    }\n    return str_list.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python Exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Hollo Werld\nPythen ixercEsos\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) != -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j]) != -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split('');\n    let temp_list: string[] = [];\n    let temp_str: string = '';\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list = temp_list.reverse();\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            str_list[i] = temp_list.shift();\n        }\n    }\n    temp_str = str_list.join('');\n    return temp_str;\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('hello'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "python\nmechina\nholle\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    let result: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        result += c_arr[i];\n        if (v_arr[i] !== undefined) {\n            result += v_arr[i];\n        }\n    }\n    return result;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "holel\nletocede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Poythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp8m9ih9lt.js:30:12)\n    at Object.<anonymous> (/tmp/tmp8m9ih9lt.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Poythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aA\"));\nconsole.log(reverse_vowels(\"\"));\nconsole.log(reverse_vowels(\"abcde\"));\nconsole.log(reverse_vowels(\"aEiOu\"));\nconsole.log(reverse_vowels(\"aEiOuY\"));\nconsole.log(reverse_vowels(\"aEiOuYy\"));\nconsole.log(reverse_vowels(\"aEiOuYyA\"));\nconsole.log(reverse_vowels(\"aEiOuYyAe\"));\nconsole.log(reverse_vowels(\"aEiOuYyAeI\"));\nconsole.log(reverse_vowels(\"aEiOuYyAeIo\"));\nconsole.log(reverse_vowels(\"aEiOuYyAeIoU\"));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "Python\nw3resuorce\nuoiea\nAa\n\nebcda\nuOiEa\nuOiEaY\nuOiEaYy\nAuOiEYya\neAuOiYyEa\nIeAuOYyiEa\noIeAuYyOiEa\nUoIeAYyuOiEa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split('');\n    var temp_var: string;\n    var i: number, j: number;\n    for (i = 0, j = str_list.length - 1; i < j; i++ , j--) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            if (vowels.indexOf(str_list[j]) !== -1) {\n                temp_var = str_list[i];\n                str_list[i] = str_list[j];\n                str_list[j] = temp_var;\n                i++;\n            }\n        }\n        else if (vowels.indexOf(str_list[j]) !== -1) {\n            j--;\n        }\n    }\n    return str_list.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"machine\"));\nconsole.log(reverse_vowels(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "python\nmichane\nhello\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpitgiyg_3.js:29:12)\n    at Object.<anonymous> (/tmp/tmpitgiyg_3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) === -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"rhythm\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "holle\nleotcede\nuoiea\nrhythm\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_list: string[] = str1.split('');\n    let v_list: string[] = [];\n    let t_list: string[] = [];\n    let result: string = '';\n\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            v_list.push(str_list[i]);\n        }\n    }\n    v_list = v_list.reverse();\n    for (let x = 0; x < str_list.length; x++) {\n        if (vowels.indexOf(str_list[x]) !== -1) {\n            t_list.push(v_list.shift());\n        } else {\n            t_list.push(str_list[x]);\n        }\n    }\n    result = t_list.join('');\n    return result;\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('ab'));\nconsole.log(reverse_vowels('aAa'));\nconsole.log(reverse_vowels('aAaA'));\nconsole.log(reverse_vowels('aAaAa'));\nconsole.log(reverse_vowels('aAaAaA'));\nconsole.log(reverse_vowels('aAaAaAa'));\nconsole.log(reverse_vowels('aAaAaAaA'));\nconsole.log(reverse_vowels('aAaAaAaAa'));\nconsole.log(reverse_vowels('aAaAaAaAaA'));\nconsole.log(reverse_vowels('aAaAaAaAaAa'));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "holle\nleotcede\nuoiea\nAa\na\nab\naAa\nAaAa\naAaAa\nAaAaAa\naAaAaAa\nAaAaAaAa\naAaAaAaAa\nAaAaAaAaAa\naAaAaAaAaAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j++;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp23_gj87r.js:29:12)\n    at Object.<anonymous> (/tmp/tmp23_gj87r.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_arr: string[] = str1.split('');\n    var temp: string;\n    var i: number = 0;\n    var j: number = str_arr.length - 1;\n\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        } else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\neppla\nholle\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('ab'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('a\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "../../../../tmp/tmpk8artf7l.ts(42,30): error TS1002: Unterminated string literal.\n../../../../tmp/tmpk8artf7l.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpk8artf7l.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string = 'aeiouAEIOU';\n    var str2: string = '';\n    for (var i = 0; i < str1.length; i++) {\n        if (vowels.indexOf(str1[i]) !== -1) {\n            str2 = str1[i] + str2;\n        }\n    }\n    var str3: string = '';\n    for (var i = 0; i < str1.length; i++) {\n        if (vowels.indexOf(str1[i]) !== -1) {\n            str3 = str3 + str2[0];\n            str2 = str2.slice(1);\n        }\n        else {\n            str3 = str3 + str1[i];\n        }\n    }\n    return str3;\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"rhythm\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "uoiea\nholle\nleotcede\nrhythm\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"aeiou\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\neppla\nholle\nuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "Holle\nLeotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    let res: string = \"\";\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            res += v_arr.shift();\n        }\n        else {\n            res += c_arr.shift();\n        }\n    }\n    return res;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpbjixburg.js:33:12)\n    at Object.<anonymous> (/tmp/tmpbjixburg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        if (i < j) {\n            [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"\"));\nconsole.log(reverse_vowels(\"qwerty\"));\nconsole.log(reverse_vowels(\"aeiouAEIOU\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\nw3resuorce\nuoiea\n\nqwerty\nUOIEAuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('gym'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\nmechina\nuoiea\nuOiEa\ngym\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string = '';\n    let j: number = strArr.length - 1;\n    for (let i: number = 0; i < j; i++) {\n        if (vowels.indexOf(strArr[i]) !== -1) {\n            while (vowels.indexOf(strArr[j]) === -1) {\n                j--;\n            }\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\nmechina\nuoiea\nUOIEAuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"rhythm\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "uoiea\nholle\nleotcede\nrhythm\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\nw3resuorce\nuoiea\nUOIEA\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n\n        while (i < j && vowels.indexOf(strArr[i]) == -1)\n            i++;\n\n        while (i < j && vowels.indexOf(strArr[j]) == -1)\n            j--;\n\n        [strArr[i], strArr[j]] = [strArr[j], strArr[i]];\n        i++;\n        j--;\n    }\n\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"machine\"));\nconsole.log(reverse_vowels(\"hello\"));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "python\nmechina\nholle\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_array: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_array.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_array[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_array[j].toLowerCase()) !== -1) {\n                temp = str_array[i];\n                str_array[i] = str_array[j];\n                str_array[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_array.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else {\n            if (vowels.indexOf(str_arr[i]) === -1) {\n                i++;\n            }\n            if (vowels.indexOf(str_arr[j]) === -1) {\n                j--;\n            }\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123559,
      "stdout": "uoiea\nholle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123559,
      "stdout": "python\nmechina\nuoiea\nUOIEAuoiea\nuOiEa\nUOIEAuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str1.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        } else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "uoiea\nholle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_list: string[] = str1.split('');\n    let v_list: string[] = [];\n    let c_list: string[] = [];\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            v_list.push(str_list[i]);\n        }\n        else {\n            c_list.push(str_list[i]);\n        }\n    }\n    v_list.reverse();\n    for (let i = 0; i < c_list.length; i++) {\n        v_list.splice(2 * i + 1, 0, c_list[i]);\n    }\n    return v_list.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python Exercises\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123560,
      "stdout": "oHolel Wrld\nePiyetEhon xrcss\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmprsxa8_x_.js:26:12)\n    at Object.<anonymous> (/tmp/tmprsxa8_x_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) != -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j]) != -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "python\neppla\nholle\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j].toLowerCase()) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split('');\n    let temp_list: string[] = [];\n    let temp_str: string = '';\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list = temp_list.reverse();\n    let k: number = 0;\n    for (let j = 0; j < str_list.length; j++) {\n        if (vowels.indexOf(str_list[j].toLowerCase()) !== -1) {\n            str_list[j] = temp_list[k];\n            k += 1;\n        }\n    }\n    temp_str = str_list.join('');\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_vowels: string[] = [];\n    let temp_index: number[] = [];\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n            temp_vowels.push(str_list[i]);\n            temp_index.push(i);\n        }\n    }\n    for (let i = 0; i < temp_vowels.length; i++) {\n        str_list[temp_index[i]] = temp_vowels[temp_vowels.length - 1 - i];\n    }\n    return str_list.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n\n    while (i < j) {\n\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "oHell\neTomatos\niRAvIreso eVewels n  Strng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpswj_cs7m.js:29:12)\n    at Object.<anonymous> (/tmp/tmpswj_cs7m.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello! How are you?'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hullo! Hew aro yoe?\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "uoiea\nholle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        temp = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\nleotcede\nuoiea\nwhy\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aA\"));\nconsole.log(reverse_vowels(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "python\nw3resuorce\nuoiea\nAa\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n  let vowels: string[] = [];\n  let result: string = \"\";\n\n  for (let i: number = 0; i < str1.length; i++) {\n    if (\n      str1[i] == \"a\" ||\n      str1[i] == \"e\" ||\n      str1[i] == \"i\" ||\n      str1[i] == \"o\" ||\n      str1[i] == \"u\"\n    ) {\n      vowels.push(str1[i]);\n    }\n  }\n  for (let i: number = 0; i < str1.length; i++) {\n    if (\n      str1[i] == \"a\" ||\n      str1[i] == \"e\" ||\n      str1[i] == \"i\" ||\n      str1[i] == \"o\" ||\n      str1[i] == \"u\"\n    ) {\n      result = result + vowels.pop();\n    } else {\n      result = result + str1[i];\n    }\n  }\n\n  return result;\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpkbeiobuv.js:34:12)\n    at Object.<anonymous> (/tmp/tmpkbeiobuv.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    let result: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        } else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr = v_arr.reverse();\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            result += v_arr.shift();\n        } else {\n            result += c_arr.shift();\n        }\n    }\n    return result;\n}\n\nconsole.log(reverse_vowels(\"Hello!\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Holle!\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let temp_arr: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            temp_arr.push(str_arr[i]);\n        }\n    }\n    temp_arr.reverse();\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            temp_str += temp_arr.shift();\n        } else {\n            temp_str += str_arr[i];\n        }\n    }\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\nleotcede\naA\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpheaobub5.js:30:12)\n    at Object.<anonymous> (/tmp/tmpheaobub5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string[] = [];\n    let temp_str: string = '';\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            temp.push(str_arr[i]);\n        }\n    }\n    temp.reverse();\n    let j: number = 0;\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            str_arr[i] = temp[j];\n            j++;\n        }\n    }\n    temp_str = str_arr.join('');\n    return temp_str;\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('aeiou'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\npython\nuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) == -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) == -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello! How are you?'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hullo! Hew aro yoe?\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello! How are you?'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hullo! Hew aro yoe?\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"abcde\"));\nconsole.log(reverse_vowels(\"aA\"));\nconsole.log(reverse_vowels(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "Hollo Werld\nPython\nuoiea\nUOIEA\nebcda\nAa\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123556,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    let temp: string;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) != -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) != -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "uoiea\nholle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string = 'aeiouAEIOU';\n    var str_arr: string[] = str1.split('');\n    var i: number = 0;\n    var j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) != -1) {\n            var temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) != -1 && vowels.indexOf(str_arr[j]) == -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) == -1 && vowels.indexOf(str_arr[j]) != -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"abcde\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123563,
      "stdout": "python\nw3resuorce\nuoiea\nUOIEA\nebcda\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j++;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123563,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpw9wv84df.js:29:12)\n    at Object.<anonymous> (/tmp/tmpw9wv84df.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n\n    while (i < j) {\n\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j].toLowerCase()) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123563,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            str_list[i] = temp_list[j];\n            j += 1;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123563,
      "stdout": "Hollo Werld\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    var str_arr: string[] = str1.split('');\n    var temp: string;\n    var i: number = 0;\n    var j: number = str_arr.length - 1;\n    while (i < j) {\n        while (i < j && vowels.indexOf(str_arr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(str_arr[j]) == -1) {\n            j--;\n        }\n        temp = str_arr[i];\n        str_arr[i] = str_arr[j];\n        str_arr[j] = temp;\n        i++;\n        j--;\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                let temp: string = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('abcde'));\nconsole.log(reverse_vowels('aEiOuY'));\nconsole.log(reverse_vowels('aEiOuYbcd'));\nconsole.log(reverse_vowels('aEiOuYbcdE'));\nconsole.log(reverse_vowels('aEiOuYbcdEfgh'));\nconsole.log(reverse_vowels('aEiOuYbcdEfghI'));\nconsole.log(reverse_vowels('aEiOuYbcdEfghIjkl'));\nconsole.log(reverse_vowels('aEiOuYbcdEfghIjklmno'));\nconsole.log(reverse_vowels('aEiOuYbcdEfghIjklmnoPqr'));\nconsole.log(reverse_vowels('aEiO\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123563,
      "stdout": "../../../../tmp/tmp6jpknw3j.ts(36,33): error TS1002: Unterminated string literal.\n../../../../tmp/tmp6jpknw3j.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmp6jpknw3j.ts(37,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i: number = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "oHell\neTomatos\niRAvIreso eVewels n  Strng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpg5wmv3v2.js:29:12)\n    at Object.<anonymous> (/tmp/tmpg5wmv3v2.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split('');\n    let temp_list: string[] = [];\n    let temp_str: string = '';\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list = temp_list.reverse();\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            str_list[i] = temp_list.shift();\n        }\n    }\n    temp_str = str_list.join('');\n    return temp_str;\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = [];\n    let result: string = \"\";\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\") {\n            vowels.push(str1[i]);\n        }\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\") {\n            result += vowels.pop();\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "uoiea\npython\naA\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmppu7eozhp.js:27:12)\n    at Object.<anonymous> (/tmp/tmppu7eozhp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n                temp = str_arr[i];\n                str_arr[i] = str_arr[j];\n                str_arr[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Hollo Werld\nPython\nw3resuorce\nuoiea\nUOIEA\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "ohell\neloteced\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpcj9ppdyd.js:26:12)\n    at Object.<anonymous> (/tmp/tmpcj9ppdyd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = [];\n    let vowels_index: number[] = [];\n    let result: string = \"\";\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\") {\n            vowels.push(str1[i]);\n            vowels_index.push(i);\n        }\n    }\n    vowels.reverse();\n    for (let i: number = 0; i < str1.length; i++) {\n        if (vowels_index.includes(i)) {\n            result += vowels.shift();\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "holle\nleotcede\naA\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmp5mhd1rt4.js:30:12)\n    at Object.<anonymous> (/tmp/tmp5mhd1rt4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123553,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i: number = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) != -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i: number = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "oHolel Wrld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpaonigy26.js:25:12)\n    at Object.<anonymous> (/tmp/tmpaonigy26.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('rhythm'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "uoiea\nholle\nleotcede\nrhythm\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\n\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let temp_arr: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            temp_arr.push(str_arr[i]);\n        }\n    }\n    temp_arr = temp_arr.reverse();\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            str_arr[i] = temp_arr.shift();\n        }\n    }\n    temp_str = str_arr.join(\"\");\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "python\neppla\nholle\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmplyhmsp5f.js:28:12)\n    at Object.<anonymous> (/tmp/tmplyhmsp5f.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j += 1;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123552,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpfc05e5ek.js:29:12)\n    at Object.<anonymous> (/tmp/tmpfc05e5ek.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aEiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "python\nmechina\nuoiEa\nUOIEAuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split(\"\");\n    var temp_var: string;\n    var i: number;\n    var j: number;\n    i = 0;\n    j = str_list.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n            if (vowels.indexOf(str_list[j].toLowerCase()) != -1) {\n                temp_var = str_list[i];\n                str_list[i] = str_list[j];\n                str_list[j] = temp_var;\n                i += 1;\n                j -= 1;\n            }\n            else {\n                j -= 1;\n            }\n        }\n        else {\n            i += 1;\n        }\n    }\n    return str_list.join(\"\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else {\n            i++;\n        }\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123564,
      "stdout": "holle\nleotcede\nuoiea\nwhy\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split('');\n    var temp_var: string;\n    var i: number, j: number;\n    i = 0;\n    j = str_list.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n            if (vowels.indexOf(str_list[j].toLowerCase()) != -1) {\n                temp_var = str_list[i];\n                str_list[i] = str_list[j];\n                str_list[j] = temp_var;\n                i += 1;\n                j -= 1;\n            }\n            else {\n                j -= 1;\n            }\n        }\n        else {\n            i += 1;\n        }\n    }\n    return str_list.join('');\n}\n\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "Hollo Werld\nPython\nw3resuorce\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split('');\n    let temp_list: string[] = [];\n    let temp_str: string = '';\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list = temp_list.reverse();\n    let k: number = 0;\n    for (let j = 0; j < str_list.length; j++) {\n        if (vowels.indexOf(str_list[j].toLowerCase()) !== -1) {\n            str_list[j] = temp_list[k];\n            k += 1;\n        }\n    }\n    temp_str = str_list.join('');\n    return temp_str;\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        } else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        } else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "python\nmechina\nuoiea\nUOIEAuoiea\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_list: string[] = [];\n    let temp_str: string = \"\";\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            temp_list.push(str_list[i]);\n        }\n    }\n    temp_list.reverse();\n    let j: number = 0;\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i]) !== -1) {\n            str_list[i] = temp_list[j];\n            j++;\n        }\n    }\n    temp_str = str_list.join(\"\");\n    return temp_str;\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123550,
      "stdout": "holle\nleotcede\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpstnstve9.js:29:12)\n    at Object.<anonymous> (/tmp/tmpstnstve9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        } else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('machine'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiou\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "../../../../tmp/tmpk7gb9q_h.ts(38,44): error TS1002: Unterminated string literal.\n../../../../tmp/tmpk7gb9q_h.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmpk7gb9q_h.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1665510569,
      "stdout": "oHolel Wrld\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmp_zf8ihny.js:25:12)\n    at Object.<anonymous> (/tmp/tmp_zf8ihny.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split(\"\");\n    let v_arr: string[] = [];\n    let c_arr: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1) {\n            v_arr.push(str_arr[i]);\n        }\n        else {\n            c_arr.push(str_arr[i]);\n        }\n    }\n    v_arr.reverse();\n    for (let i = 0; i < c_arr.length; i++) {\n        v_arr.splice(2 * i + 1, 0, c_arr[i]);\n    }\n    return v_arr.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123566,
      "stdout": "oHell\neTomatos\niRAvIreso eVewels n  Strng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'oPythn'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmpbh78yybz.js:29:12)\n    at Object.<anonymous> (/tmp/tmpbh78yybz.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'oPythn',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_list: string[] = str1.split(\"\");\n    var temp_var: string;\n    var i: number, j: number = str_list.length - 1;\n    for (i = 0; i < j; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) != -1) {\n            while (j > i) {\n                if (vowels.indexOf(str_list[j].toLowerCase()) != -1) {\n                    temp_var = str_list[i];\n                    str_list[i] = str_list[j];\n                    str_list[j] = temp_var;\n                    j--;\n                    break;\n                }\n                j--;\n            }\n        }\n    }\n    return str_list.join(\"\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string = 'aeiouAEIOU';\n    var str2: string = '';\n    for (var i = 0; i < str1.length; i++) {\n        if (vowels.indexOf(str1[i]) !== -1) {\n            str2 = str1[i] + str2;\n        }\n    }\n    var str3: string = '';\n    for (var i = 0; i < str1.length; i++) {\n        if (vowels.indexOf(str1[i]) !== -1) {\n            str3 = str3 + str2[0];\n            str2 = str2.slice(1);\n        } else {\n            str3 = str3 + str1[i];\n        }\n    }\n    return str3;\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        } else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        } else {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    var str_arr: string[] = str1.split(\"\");\n    var temp_var: string = \"\";\n    var temp_array: string[] = [];\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            temp_array.push(str_arr[i]);\n        }\n    }\n    if (str1.length == 1) {\n        if (vowels.indexOf(str1) !== -1) {\n            return str1;\n        }\n        else {\n            return str1;\n        }\n    }\n    for (let i = 0; i < str_arr.length; i++) {\n        if (vowels.indexOf(str_arr[i]) !== -1) {\n            temp_var = temp_array.pop();\n            str_arr[i] = temp_var;\n        }\n    }\n    return str_arr.join(\"\");\n}\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"holle\"));\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"e\"));\nconsole.log(reverse_vowels(\"a\"));\nconsole.log(reverse_vowels(\"b\"));\nconsole.log(reverse_vowels(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "holle\nhello\npython\ne\na\nb\n\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'USA'\n\nshould loosely deep-equal\n\n'ASU'\n    at test (/tmp/tmpi31gqpq1.js:39:12)\n    at Object.<anonymous> (/tmp/tmpi31gqpq1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'USA',\n  expected: 'ASU',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123561,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aA\"));\nconsole.log(reverse_vowels(\"\"));\nconsole.log(reverse_vowels(\"p\"));\nconsole.log(reverse_vowels(\"pYthon\"));\nconsole.log(reverse_vowels(\"aEiOu\"));\nconsole.log(reverse_vowels(\"aEiOuY\"));\nconsole.log(reverse_vowels(\"aEiOuYa\"));\nconsole.log(reverse_vowels(\"aEiOuYaA\"));\nconsole.log(reverse_vowels(\"aEiOuYaAe\"));\nconsole.log(reverse_vowels(\"aEiOuYaAeE\"));\nconsole.log(reverse_vowels(\"aEiOuYaAeEi\"));\nconsole.log(reverse_vowels(\"aEi\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "../../../../tmp/tmp6_xrn1gt.ts(39,32): error TS1002: Unterminated string literal.\n../../../../tmp/tmp6_xrn1gt.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp6_xrn1gt.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else {\n            if (vowels.indexOf(strArr[i]) === -1) {\n                i++;\n            }\n            if (vowels.indexOf(strArr[j]) === -1) {\n                j--;\n            }\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "uoiea\nholle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"leetcode\"));\nconsole.log(reverse_vowels(\"rhythm\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "uoiea\nholle\nleotcede\nrhythm\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_list: string[] = str1.split(\"\");\n    let temp_vowels: string[] = [];\n    let temp_index: number[] = [];\n    for (let i = 0; i < str_list.length; i++) {\n        if (vowels.indexOf(str_list[i].toLowerCase()) !== -1) {\n            temp_vowels.push(str_list[i]);\n            temp_index.push(i);\n        }\n    }\n    for (let i = 0; i < temp_index.length; i++) {\n        str_list[temp_index[i]] = temp_vowels.pop();\n    }\n    return str_list.join(\"\");\n}\n\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"Tomatoes\"));\nconsole.log(reverse_vowels(\"Reverse Vowels In A String\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"why try, shy fly?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else {\n            if (vowels.indexOf(str_arr[i]) === -1) {\n                i++;\n            }\n            if (vowels.indexOf(str_arr[j]) === -1) {\n                j--;\n            }\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aeiouy\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "python\neppla\nholle\nuoiea\nuoieay\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Hello Python\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Hollo Werld\nHollo Pythen\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(strArr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "holle\nleotcede\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"apple\"));\nconsole.log(reverse_vowels(\"hello\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"AEIOU\"));\nconsole.log(reverse_vowels(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "python\neppla\nholle\nuoiea\nUOIEA\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Hello World\"));\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Hollo Werld\nPython\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello World'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Hollo Werld\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            let temp: string = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels(\"Python\"));\nconsole.log(reverse_vowels(\"Hello\"));\nconsole.log(reverse_vowels(\"What's up?\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "Python\nHolle\nWhut's ap?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n            continue;\n        }\n        if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n            continue;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aA'));\nconsole.log(reverse_vowels('racecar'));\nconsole.log(reverse_vowels('a'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(reverse_vowels('aeiouAEIOUaeiou\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123568,
      "stdout": "../../../../tmp/tmptmtx1i21.ts(37,44): error TS1002: Unterminated string literal.\n../../../../tmp/tmptmtx1i21.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmptmtx1i21.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello'));\nconsole.log(reverse_vowels('Tomatoes'));\nconsole.log(reverse_vowels('Reverse Vowels In A String'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('why try, shy fly?'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123555,
      "stdout": "Holle\nTemotaos\nRivArsI Vewols en e Streng\nuoiea\nwhy try, shy fly?\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(strArr[i]) !== -1 && vowels.indexOf(strArr[j]) !== -1) {\n            temp = strArr[i];\n            strArr[i] = strArr[j];\n            strArr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(strArr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(strArr[j]) === -1) {\n            j--;\n        }\n    }\n    return strArr.join('');\n}\nconsole.log(reverse_vowels('python'));\nconsole.log(reverse_vowels('w3resource'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aEiOu'));\nconsole.log(reverse_vowels('gym'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123568,
      "stdout": "python\nw3resuorce\nuoiea\nuOiEa\ngym\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    let str_arr: string[] = str1.split('');\n    let temp: string;\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i].toLowerCase()) !== -1 && vowels.indexOf(str_arr[j].toLowerCase()) !== -1) {\n            temp = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i].toLowerCase()) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j].toLowerCase()) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('Hello World'));\nconsole.log(reverse_vowels('Python'));\nconsole.log(reverse_vowels('Reverse'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123568,
      "stdout": "Hollo Werld\nPython\nReverse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let strArr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = strArr.length - 1;\n\n    while (i < j) {\n        while (i < j && vowels.indexOf(strArr[i]) == -1) {\n            i++;\n        }\n        while (i < j && vowels.indexOf(strArr[j]) == -1) {\n            j--;\n        }\n        let temp: string = strArr[i];\n        strArr[i] = strArr[j];\n        strArr[j] = temp;\n        i++;\n        j--;\n    }\n    return strArr.join('');\n}\n\nconsole.log(reverse_vowels(\"python\"));\nconsole.log(reverse_vowels(\"w3resource\"));\nconsole.log(reverse_vowels(\"aeiou\"));\nconsole.log(reverse_vowels(\"aA\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123568,
      "stdout": "python\nw3resuorce\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    var vowels: string = 'aeiouAEIOU';\n    var temp: string = '';\n    for (var i = 0; i < str1.length; i++) {\n        if (vowels.indexOf(str1[i]) !== -1) {\n            temp += str1[i];\n        }\n    }\n    return temp.split('').reverse().join('');\n}\nconsole.log(reverse_vowels('Hello World'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123568,
      "stdout": "ooe\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'o'\n\nshould loosely deep-equal\n\n'Python'\n    at test (/tmp/tmptyb8rvve.js:16:12)\n    at Object.<anonymous> (/tmp/tmptyb8rvve.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'o',\n  expected: 'Python',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) !== -1) {\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[j]) !== -1) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123567,
      "stdout": "holle\nleotcede\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunction reverse_vowels(str1: string): string {\n    let vowels: string = 'aeiouAEIOU';\n    let str_arr: string[] = str1.split('');\n    let i: number = 0;\n    let j: number = str_arr.length - 1;\n    while (i < j) {\n        if (vowels.indexOf(str_arr[i]) !== -1 && vowels.indexOf(str_arr[j]) !== -1) {\n            let temp: string = str_arr[i];\n            str_arr[i] = str_arr[j];\n            str_arr[j] = temp;\n            i++;\n            j--;\n        }\n        else if (vowels.indexOf(str_arr[i]) === -1) {\n            i++;\n        }\n        else if (vowels.indexOf(str_arr[j]) === -1) {\n            j--;\n        }\n    }\n    return str_arr.join('');\n}\nconsole.log(reverse_vowels('hello'));\nconsole.log(reverse_vowels('leetcode'));\nconsole.log(reverse_vowels('aeiou'));\nconsole.log(reverse_vowels('aA'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = reverse_vowels;\n  assert.deepEqual(candidate(\"Python\"),\"Python\");\n  assert.deepEqual(candidate(\"USA\"),\"ASU\");\n  assert.deepEqual(candidate(\"ab\"),\"ab\");\n}\n\ntest();",
      "timestamp": 1666123558,
      "stdout": "holle\nleotcede\nuoiea\nAa\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_245_max_sum",
  "language": "ts",
  "prompt": "//Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunction max_sum(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum;\n  assert.deepEqual(candidate([1, 15, 51, 45, 33, 100, 12, 18, 9]),194);\n  assert.deepEqual(candidate([80, 60, 30, 40, 20, 10]),210);\n  assert.deepEqual(candidate([2, 3, 14, 16, 21, 23, 29, 30]),138);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "  let max_sum = 0;\n  let max_sum_so_far = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_so_far = Math.max(max_sum_so_far + arr[i], arr[i]);\n    max_sum = Math.max(max_sum, max_sum_so_far);\n  }\n  return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_ending_here += arr[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum < max_sum_ending_here) {\n            max_sum = max_sum_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_so_far = Math.max(arr[i], max_sum_so_far + arr[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n",
    "  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left = Math.max(max_sum_left + arr[i], arr[i]);\n    max_sum_right = Math.max(max_sum_right + arr[arr.length - 1 - i], arr[arr.length - 1 - i]);\n    max_sum_left_right = Math.max(max_sum_left_right + arr[i], max_sum_right);\n    max_sum_right_left = Math.max(max_sum_right_left + arr[arr.length - 1 - i], max_sum_left);\n    max_sum = Math.max(max_sum, max_sum_left_right, max_sum_right_left);\n  }\n\n  return max_sum;\n}\n\nconsole.log(max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]));\nconsole.log(max_sum([80, 60, 30, 40, 20, 10]));\n",
    "  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left = max_sum_left + arr[i];\n    if (max_sum_left < 0) {\n      max_sum_left = 0;\n    }\n    if (max_sum_left > max_sum) {\n      max_sum = max_sum_left;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_right = max_sum_right + arr[i];\n    if (max_sum_right < 0) {\n      max_sum_right = 0;\n    }\n    if (max_sum_right > max_sum) {\n      max_sum = max_sum_right;\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    max_sum_left_right = max_sum_left_right + arr[i];\n    if (max_sum_left_right < 0) {\n      max_sum_left_right = 0;\n    }\n    if (max_sum_left_right > max_sum) {\n      max_sum = max_sum_left_right;\n    }\n  }\n  for (let i = arr.length - 1; i >= 0; i--) {\n    max_sum_right_left = max_sum_right_left + arr[i];\n    if (max_sum_right_left < 0) {\n      max_sum_right_left = 0;\n    }\n    if (max_sum_right_left > max_sum) {\n      max_sum = max_sum_right_left;\n    }\n  }\n  return max_sum;\n}\n",
    "  let max_sum = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_backwards = 0;\n  let max_sum_ending_here_backwards_temp = 0;\n  let max_sum_ending_here_temp = 0;\n  let max_sum_ending_here_backwards_temp_2 = 0;\n  let max_sum_ending_here_temp_2 = 0;\n  let max_sum_ending_here_backwards_temp_3 = 0;\n  let max_sum_ending_here_temp_3 = 0;\n  let max_sum_ending_here_backwards_temp_4 = 0;\n  let max_sum_ending_here_temp_4 = 0;\n  let max_sum_ending_here_backwards_temp_5 = 0;\n  let max_sum_ending_here_temp_5 = 0;\n  let max_sum_ending_here_backwards_temp_6 = 0;\n  let max_sum_ending_here_temp_6 = 0;\n  let max_sum_ending_here_backwards_temp_7 = 0;\n  let max_sum_ending_here_temp_7 = 0;\n  let max_sum_ending_here_backwards_temp_8 = 0;\n  let max_sum_ending_here_temp_8 = 0;\n  let max_sum_ending_here_backwards_temp_9 = 0;\n  let max_sum_ending_here_temp_9 = 0;\n  let max_sum_ending_here_backwards_temp_10 = 0;\n  let max_sum_ending_here_temp_10 = 0;\n  let max_sum_ending_here_backwards_temp_11 = 0;\n  let max_sum_ending_here_temp_11 = 0;\n  let max_sum_ending_here_backwards_temp_12 = 0;\n  let max_sum_ending_here_temp_12 = 0;\n  let max_sum_ending_here_backwards_temp_13 = 0;\n  let max_sum_ending_here_temp_13",
    "    let max_sum_arr = new Array(arr.length).fill(0);\n    max_sum_arr[0] = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        max_sum_arr[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i]) {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i];\n            }\n        }\n    }\n    return Math.max(...max_sum_arr);\n}\n",
    "    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n        max_sum = Math.max(max_sum, sum);\n        sum = Math.max(sum, 0);\n        max_sum_left[i] = max_sum;\n    }\n    sum = 0;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        sum += arr[i];\n        max_sum = Math.max(max_sum, sum);\n        sum = Math.max(sum, 0);\n        max_sum_right[i] = max_sum;\n    }\n    for (let i = 0; i < arr.length - 1; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i + 1]);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let sum = 0;\n        for (let j = i; j < arr.length; j++) {\n            sum += arr[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left[i] = arr[i];\n        max_sum_right[i] = arr[i];\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i]) {\n                max_sum_left[i] = max_sum_left[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = arr.length - 2; i >= 0; i--) {\n        for (let j = arr.length - 1; j > i; j--) {\n            if (arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i]) {\n                max_sum_right[i] = max_sum_right[j] + arr[i];\n            }\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n\n    return max_sum;\n}\n",
    "  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n  let max_sum_left_right_left_right = 0;\n  let max_sum_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right",
    "  let max_sum = 0;\n  let max_sum_left = 0;\n  let max_sum_right = 0;\n  let max_sum_left_right = 0;\n  let max_sum_right_left = 0;\n  let max_sum_left_right_left = 0;\n  let max_sum_right_left_right = 0;\n  let max_sum_left_right_left_right = 0;\n  let max_sum_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n  let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n  let max_sum_right",
    "    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = Math.max(inc[i - 1], arr[i]);\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = Math.max(dec[i + 1], arr[i]);\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n",
    "    let max_sum = 0;\n    let max_sum_left = 0;\n    let max_sum_right = 0;\n    let max_sum_left_right = 0;\n    let max_sum_right_left = 0;\n    let max_sum_left_right_left = 0;\n    let max_sum_right_left_right = 0;\n    let max_sum_left_right_left_right = 0;\n    let max_sum_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left = 0;\n    let max_sum_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_left_right_left_right_left_right_left_right_left_right_left_right = 0;\n    let max_sum_right",
    "  let max_sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    for (let j = i; j < arr.length; j++) {\n      sum += arr[j];\n      if (sum > max_sum) {\n        max_sum = sum;\n      }\n    }\n  }\n  return max_sum;\n}\n",
    "  let max = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let sum = 0;\n    let j = i;\n    while (arr[j] < arr[j + 1]) {\n      sum += arr[j];\n      j++;\n    }\n    sum += arr[j];\n    j++;\n    while (arr[j] < arr[j + 1]) {\n      sum += arr[j];\n      j++;\n    }\n    if (sum > max) {\n      max = sum;\n    }\n  }\n  return max;\n}\n",
    "    let max_sum = 0;\n    let max_sum_left = [];\n    let max_sum_right = [];\n    let max_sum_left_temp = 0;\n    let max_sum_right_temp = 0;\n    for (let i = 0; i < arr.length; i++) {\n        max_sum_left_temp = Math.max(max_sum_left_temp + arr[i], arr[i]);\n        max_sum_left[i] = max_sum_left_temp;\n    }\n    for (let i = arr.length - 1; i >= 0; i--) {\n        max_sum_right_temp = Math.max(max_sum_right_temp + arr[i], arr[i]);\n        max_sum_right[i] = max_sum_right_temp;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        max_sum = Math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i]);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_arr = [];\n    let max_sum_arr_index = [];\n    let max_sum_arr_index_reverse = [];\n    let max_sum_arr_reverse = [];\n    let max_sum_arr_reverse_index = [];\n    let max_sum_arr_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_index = [];\n    let max_sum_arr_reverse_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_index = [];\n    let max_sum_arr_reverse_reverse_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_index = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_index = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_index = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_index = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_index_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [];\n    let max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_",
    "    let n = arr.length;\n    let inc = new Array(n);\n    let dec = new Array(n);\n    inc[0] = arr[0];\n    dec[n - 1] = arr[n - 1];\n    for (let i = 1; i < n; i++) {\n        inc[i] = arr[i];\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && inc[i] < inc[j] + arr[i]) {\n                inc[i] = inc[j] + arr[i];\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        dec[i] = arr[i];\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j] && dec[i] < dec[j] + arr[i]) {\n                dec[i] = dec[j] + arr[i];\n            }\n        }\n    }\n    let max = inc[0] + dec[0] - arr[0];\n    for (let i = 1; i < n; i++) {\n        if (inc[i] + dec[i] - arr[i] > max) {\n            max = inc[i] + dec[i] - arr[i];\n        }\n    }\n    return max;\n}\n",
    "    let n = arr.length;\n    let inc = new Array(n).fill(1);\n    let dec = new Array(n).fill(1);\n    for (let i = 1; i < n; i++) {\n        for (let j = 0; j < i; j++) {\n            if (arr[i] > arr[j]) {\n                inc[i] = Math.max(inc[i], inc[j] + arr[i]);\n            }\n        }\n    }\n    for (let i = n - 2; i >= 0; i--) {\n        for (let j = n - 1; j > i; j--) {\n            if (arr[i] > arr[j]) {\n                dec[i] = Math.max(dec[i], dec[j] + arr[i]);\n            }\n        }\n    }\n    let max = 0;\n    for (let i = 0; i < n; i++) {\n        max = Math.max(max, inc[i] + dec[i] - arr[i]);\n    }\n    return max;\n}\n"
  ]
}
{
  "name": "mbpp_738_geometric_sum",
  "language": "ts",
  "prompt": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) return 1;\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(3));\n",
    "  if (n === 0) {\n    return 1;\n  }\n  return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n < 0) {\n        return 0;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + (1 / Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "  if (n < 0) {\n    return 0;\n  }\n  if (n === 0) {\n    return 1;\n  }\n  return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "  if (n == 0) {\n    return 1;\n  }\n  return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    } else {\n        return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n    }\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return (1 / Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    } else {\n        return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n    }\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 + (1 / 2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(3));\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}",
    "  if (n === 0) {\n    return 1;\n  }\n  return 1 / 2 ** n + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n < 0) {\n        return 0;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / 2 ** n + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(3));\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\nconsole.log(geometric_sum(3));\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n < 0) {\n        return 0;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(5));\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "  if (n === 1) {\n    return 1;\n  }\n  return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + (1 / 2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) return 1;\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    } else {\n        return 1 + (1 / 2 ** n) + geometric_sum(n - 1);\n    }\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    } else {\n        return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n    }\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / 2 ** n + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconsole.log(geometric_sum(3));\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n"
  ]
}
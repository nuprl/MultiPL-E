{
  "name": "mbpp_65_recursive_list_sum",
  "language": "ts",
  "prompt": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum(data));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6], [7, 8, 9]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, [2, [3, 4], [[5]]]]));\nconsole.log(recursive_list_sum([[[3]], 2, [1, 4]]));\nconsole.log(recursive_list_sum([-5, [2, [-11], [[3]]], 8]));",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4]], 5]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\nconsole.log(recursive_list_sum([[[[[1], 2], 3], 4], 5]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\nconsole.log(recursive_list_sum([[[[[1], 2], 3], 4], 5]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => {\n            return acc + recursive_list_sum(curr);\n        }, 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]]));\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((accumulator, currentValue) => accumulator + recursive_list_sum(currentValue), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, 7]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, 8]]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, [8, 9]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (item) {\n            sum += recursive_list_sum(item);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum: number = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet data_list: number| number[][] = [1, 2, [3, 4, [5, 6], 7], 8];\nconsole.log(recursive_list_sum(data_list));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        sum += data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((sum, item) => sum + recursive_list_sum(item), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet data_list: number[] = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconsole.log(recursive_list_sum(data_list));",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (element) {\n            sum += recursive_list_sum(element);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, [9, 10]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] == \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, 5]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4]], 5]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet test_list: number[] = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconsole.log(recursive_list_sum(test_list));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum(data_list));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\nconsole.log(recursive_list_sum([[[[[1], 2]], 3], 4, [5]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n    return data_list;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5], 6, [7, 8, [9, 10]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n",
    "    let sum: number = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    } else {\n        return data_list;\n    }\n}\n",
    "    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if(Array.isArray(data_list)){\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    else{\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, 5]]]]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    if(typeof data_list === 'number'){\n        return data_list;\n    }\n    else{\n        let sum = 0;\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3,4],[5,6]]));\nconsole.log(recursive_list_sum([[[3,4],8],10,[[13]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    if (Array.isArray(data_list)) {\n        return data_list.reduce((sum, item) => sum + recursive_list_sum(item), 0);\n    } else {\n        return data_list;\n    }\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]));\n",
    "    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4]], 5]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n",
    "    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n",
    "    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n",
    "    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n",
    "    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet data_list: number[] = [1, 2, [3, 4, [5, 6], 7], 8];\nconsole.log(recursive_list_sum(data_list));\n",
    "    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n"
  ]
}
{
  "name": "mbpp_637_noprofit_noloss",
  "language": "ts",
  "prompt": "//Write a function to check whether the given amount has no profit and no loss\nfunction noprofit_noloss(actual_cost: number, sale_amount: number): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = noprofit_noloss;\n  assert.deepEqual(candidate(1500, 1200),false);\n  assert.deepEqual(candidate(100, 100),true);\n  assert.deepEqual(candidate(2000, 5000),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar result = noprofit_noloss(100, 100);\nconsole.log(result);\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(noprofit_noloss(100, 100));\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(noprofit_noloss(100, 100));\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    if (actual_cost == sale_amount) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n"
  ]
}
{
  "name": "mbpp_790_even_position",
  "language": "ts",
  "prompt": "//Write a python function to check whether every even index contains even numbers of a given list.\nfunction even_position(nums: number[]): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_position;\n  assert.deepEqual(candidate([3, 2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3]),false);\n  assert.deepEqual(candidate([2, 1, 4]),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 11]));\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 3, 5, 7, 9]));\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(even_position([1, 2, 3, 4, 5, 6]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7]));\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    let result = true;\n    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0) {\n            if (nums[i] % 2 != 0) {\n                result = false;\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]));\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n",
    "    for (let i = 0; i < nums.length; i++) {\n        if (i % 2 == 0 && nums[i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n"
  ]
}
{
  "name": "mbpp_268_find_star_num",
  "language": "ts",
  "prompt": "//Write a function to find the n'th star number.\nfunction find_star_num(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_star_num;\n  assert.deepEqual(candidate(3),37);\n  assert.deepEqual(candidate(4),73);\n  assert.deepEqual(candidate(5),121);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let starNum: number = 1;\n    for (let i: number = 1; i < n; i++) {\n        starNum = (starNum * 10) + 1;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));",
    "    let starNum = 0;\n    for (let i = 1; i <= n; i++) {\n        starNum = (i * (i + 1)) + starNum;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));",
    "    let star_num: number = 1;\n    for (let i = 1; i < n; i++) {\n        star_num = (star_num * 10) + 1;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));",
    "    let starNum = 1;\n    for (let i = 1; i <= n; i++) {\n        starNum = (starNum * 9) + 1;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));\n",
    "    let star_num: number = 1;\n    for (let i: number = 1; i < n; i++) {\n        star_num = (star_num * 10) + 1;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\n",
    "    let star_num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        star_num = (star_num * 10) + i;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\nconsole.log(find_star_num(15));\nconsole.log(find_star_num(20));\nconsole.log(find_star_num(25));\n",
    "    let starNum = 1;\n    let i = 1;\n    while (i < n) {\n        starNum = starNum + 4 * i;\n        i++;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));\nconsole.log(find_star_num(11));\nconsole.log(find_star_num(12));\nconsole.log(find_star_num(13));\nconsole.log(find_star_num(14));\nconsole.log(find_star_num(15));\nconsole.log(find_star_num(16));\nconsole.log(find_star_num(17));\nconsole.log(find_star_num(18));\nconsole.log(find_star_num(19));\nconsole.log(find_star_num(20));\nconsole.log(find_star_num(21));\nconsole.log(find_star_num(22));\nconsole.log(find_star_num(23));\nconsole.log(find_star_num(24));\nconsole.log(find_star_num(25));\nconsole.log(find_star_num(26));\nconsole.log(find_star_num(27));\nconsole.log(find_star_num(28));\nconsole.log(find_star_num(29));\nconsole.log(find_star_num(30));\nconsole.log(find_star_num(31));\nconsole.log(find_star_num(32));\nconsole.log(find_star_num(33));\nconsole.log(find_star_num(34));\nconsole.log(find_star_num(35));\nconsole.log(",
    "    let starNum = 0;\n    for (let i = 1; i <= n; i++) {\n        starNum = (starNum * 10) + i;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\nconsole.log(find_star_num(15));\n",
    "    let num = 1;\n    let count = 0;\n    while (count < n) {\n        num++;\n        if (is_star_num(num)) {\n            count++;\n        }\n    }\n    return num;\n}\n",
    "  let star_num: number = 0;\n  for (let i: number = 1; i <= n; i++) {\n    star_num = star_num + i;\n  }\n  return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\n",
    "    let star_num = 1;\n    let count = 0;\n    while (count < n) {\n        if (is_star_num(star_num)) {\n            count++;\n        }\n        star_num++;\n    }\n    return star_num - 1;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));",
    "  let starNumber = 0;\n  for (let i = 1; i <= n; i++) {\n    starNumber = starNumber + i;\n  }\n  return starNumber;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\n",
    "    let star_num: number = 1;\n    let i: number = 1;\n    while (i <= n) {\n        star_num = star_num + 2 * i;\n        i++;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));",
    "  let i = 1;\n  let star_num = 0;\n  while (i <= n) {\n    star_num = star_num + i;\n    i++;\n  }\n  return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));",
    "    let star_num: number = 1;\n    for (let i = 1; i < n; i++) {\n        star_num = (star_num * 10) + 1;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(6));\nconsole.log(find_star_num(7));\nconsole.log(find_star_num(8));\nconsole.log(find_star_num(9));\nconsole.log(find_star_num(10));\n",
    "    let starNum: number = 1;\n    let i: number = 1;\n    while (i < n) {\n        starNum = starNum + 2 * i;\n        i++;\n    }\n    return starNum;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\n",
    "    let star_num: number = 1;\n    for (let i: number = 1; i < n; i++) {\n        star_num = star_num * 10 + 1;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\n",
    "    let star_num: number = 1;\n    for (let i: number = 1; i < n; i++) {\n        star_num = (star_num * 10) + 1;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(1));\nconsole.log(find_star_num(2));\nconsole.log(find_star_num(3));\nconsole.log(find_star_num(4));\nconsole.log(find_star_num(5));\n",
    "    let starNum: number = 1;\n    for (let i: number = 1; i <= n; i++) {\n        starNum = starNum * 2 + 1;\n    }\n    return starNum;\n}\n",
    "    let star_num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        star_num = star_num + i;\n    }\n    return star_num;\n}\n\nconsole.log(find_star_num(5));\nconsole.log(find_star_num(10));\n"
  ]
}
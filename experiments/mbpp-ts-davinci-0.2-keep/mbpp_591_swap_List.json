{
  "name": "mbpp_591_swap_List",
  "language": "ts",
  "prompt": "//Write a python function to interchange the first and last elements in a list.\nfunction swap_List(newList: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_591_swap_List.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = swap_List;\n  assert.deepEqual(candidate([12, 35, 9, 56, 24]),[24, 35, 9, 56, 12]);\n  assert.deepEqual(candidate([1, 2, 3]),[3, 2, 1]);\n  assert.deepEqual(candidate([4, 5, 6]),[6, 5, 4]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nvar list1: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(list1));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [12, 35, 9, 56, 24];\nconsole.log(swap_List(newList));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([12, 35, 9, 56, 24]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nvar list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(\"Original List: \" + list);\nconsole.log(\"After swapping the first and last elements: \" + swap_List(list));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(newList));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(newList));\n",
    "  let temp: number = newList[0];\n  newList[0] = newList[newList.length - 1];\n  newList[newList.length - 1] = temp;\n  return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(swap_List(newList));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nlet newList: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(newList));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(\"Swap List: \" + swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5, 6];\nconsole.log(swap_List(newList));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(newList));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [12, 35, 9, 56, 24];\nconsole.log(swap_List(newList));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nvar list: number[] = [1, 2, 3, 4, 5, 6];\nconsole.log(swap_List(list));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [12, 35, 9, 56, 24];\nconsole.log(swap_List(newList));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [12, 35, 9, 56, 24];\nconsole.log(\"Original list: \" + newList);\nconsole.log(\"List after swapping the first and last elements: \" + swap_List(newList));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet list1: number[] = [1, 2, 3, 4, 5, 6];\nconsole.log(swap_List(list1));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(newList));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nvar newList: number[] = [1, 2, 3, 4, 5];\nconsole.log(swap_List(newList));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nlet newList: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(swap_List(newList));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5, 6]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    var temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number;\n    temp = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n",
    "    let temp: number = newList[0];\n    newList[0] = newList[newList.length - 1];\n    newList[newList.length - 1] = temp;\n    return newList;\n}\n\nconsole.log(swap_List([1, 2, 3, 4, 5]));\n"
  ]
}
{
  "name": "mbpp_777_find_sum",
  "language": "ts",
  "prompt": "//Write a python function to find the sum of non-repeated elements in a given list.\nfunction find_sum(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_sum;\n  assert.deepEqual(candidate([1, 2, 3, 1, 1, 4, 5, 6]),21);\n  assert.deepEqual(candidate([1, 10, 9, 4, 2, 10, 10, 45, 4]),71);\n  assert.deepEqual(candidate([12, 10, 9, 45, 2, 10, 10, 45, 10]),78);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 1, 5, 3, 2, 1]));\n",
    "    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        flag = false;\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let unique: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        if (unique.indexOf(arr[i]) == -1) {\n            unique.push(arr[i]);\n        }\n    }\n    for (let i = 0; i < unique.length; i++) {\n        sum = sum + unique[i];\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 4, 5]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 1, 2, 3, 4]));\nconsole.log(find_sum([1, 2, 3, 4, 5]));\nconsole.log(find_sum([10, 20, 10, 30, 10, 40, 10]));\n",
    "    let sum: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (i != j) {\n                if (arr[i] == arr[j]) {\n                    break;\n                }\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++) {\n            if (i != j && arr[i] == arr[j]) {\n                break;\n            }\n        }\n        if (j == arr.length) {\n            sum = sum + arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 5, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 6, 5, 4, 7, 8, 7]));",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let count: number = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    let arr_len: number = arr.length;\n    for (let i = 0; i < arr_len; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 7, 4, 5]));\nconsole.log(find_sum([1, 1, 7, 7, 3]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) == arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 3, 2, 1]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6]));\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]));\n",
    "    let sum: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let j: number;\n        for (j = 0; j < arr.length; j++)\n            if (i != j && arr[i] == arr[j])\n                break;\n        if (j == arr.length)\n            sum += arr[i];\n    }\n    return sum;\n}\n\nconsole.log(find_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    var sum: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    var flag: boolean = false;\n    for (i = 0; i < arr.length; i++) {\n        for (j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j] && i != j) {\n                flag = true;\n                break;\n            }\n        }\n        if (flag == false) {\n            sum = sum + arr[i];\n        }\n        flag = false;\n    }\n    return sum;\n}\n\nvar arr: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(find_sum(arr));\n"
  ]
}
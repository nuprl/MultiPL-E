{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "ts",
  "prompt": "//Write a function to remove consecutive duplicates of a given list.\nfunction consecutive_duplicates(nums: any): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = consecutive_duplicates;\n  assert.deepEqual(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]);\n  assert.deepEqual(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]),[10, 15, 19, 18, 17, 26, 17, 18, 10]);\n  assert.deepEqual(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]),[\"a\", \"b\", \"c\", \"d\"]);\n  assert.deepEqual(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]),[\"a\", \"b\", \"c\", \"d\", \"a\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 7, 8, 8, 9]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 6, 6, 6, 6, 7, 8, 8, 8, 9, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,",
    "    let result: any = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5]));\nconsole.log(consecutive_duplicates(['a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e']));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7",
    "    let result: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]));\nconsole.log(consecutive_duplicates([1, 2, 3, 4, 5]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 8, 9, 9, 9]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 4, 4, 5, 5, 5]));\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 7, 7, 8, 9, 9]));\n",
    "    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] !== nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    let result: any = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] != nums[i + 1]) {\n            result.push(nums[i]);\n        }\n    }\n    return result;\n}\nconsole.log(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7]));\n"
  ]
}
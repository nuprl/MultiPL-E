{
  "name": "mbpp_420_cube_Sum",
  "language": "ts",
  "prompt": "//Write a python function to find the cube sum of first n even natural numbers.\nfunction cube_Sum(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = cube_Sum;\n  assert.deepEqual(candidate(2),72);\n  assert.deepEqual(candidate(3),288);\n  assert.deepEqual(candidate(4),800);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 0; i <= n; i++) {\n        if (i % 2 == 0) {\n            sum = sum + i ** 3;\n        }\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum;\n}\n\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum;\n}\n\nconsole.log(cube_Sum(5));\n",
    "    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n",
    "    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        sum += Math.pow(2 * i, 3);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n\nconsole.log(cube_Sum(5));\n",
    "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(3));\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\nconsole.log(cube_Sum(5));\n",
    "    let sum: number = 0;\n    for (let i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            sum = sum + (i * i * i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(cube_Sum(5));\n",
    "    var sum: number = 0;\n    for (var i = 0; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\n",
    "    var sum: number = 0;\n    for (var i = 1; i <= n; i++) {\n        sum = sum + (i * i * i);\n    }\n    return sum;\n}\nvar result = cube_Sum(5);\nconsole.log(result);\n"
  ]
}
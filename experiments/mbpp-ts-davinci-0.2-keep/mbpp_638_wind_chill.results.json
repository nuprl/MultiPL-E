{
  "name": "mbpp_638_wind_chill",
  "language": "ts",
  "prompt": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_638_wind_chill.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8) {\n        return t;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp4n5ivbf8.js:12:12)\n    at Object.<anonymous> (/tmp/tmp4n5ivbf8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wc: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(wc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp4n5ivbf8.js:12:12)\n    at Object.<anonymous> (/tmp/tmp4n5ivbf8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n        return Math.round(w);\n    }\n    else {\n        return w;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmplx3su_9e.js:15:12)\n    at Object.<anonymous> (/tmp/tmplx3su_9e.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmplocz82fd.js:12:12)\n    at Object.<anonymous> (/tmp/tmplocz82fd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n        return Math.round(w);\n    }\n    else {\n        return w;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpclfmmqhj.js:15:12)\n    at Object.<anonymous> (/tmp/tmpclfmmqhj.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wc: number = 0;\n    if (v > 4.8 && t < 10) {\n        wc = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n        return Math.round(wc);\n    }\n    else {\n        return wc;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpdmt_rgo3.js:15:12)\n    at Object.<anonymous> (/tmp/tmpdmt_rgo3.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wci: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(wci);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpi55pyoiu.js:12:12)\n    at Object.<anonymous> (/tmp/tmpi55pyoiu.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 120 || v < 3) {\n        w = 0;\n    } else {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.pow(v, 0.16);\n    let wind_chill: number = 13.12 + (0.6215 * t) - (11.37 * w) + (0.3965 * t * w);\n    return Math.round(wind_chill);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8 || t > 10) {\n        return NaN;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmptm5z9so9.js:11:12)\n    at Object.<anonymous> (/tmp/tmptm5z9so9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n        return Math.round(w);\n    }\n    else {\n        return Math.round(t);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n35\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpb2no61ed.js:15:12)\n    at Object.<anonymous> (/tmp/tmpb2no61ed.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 35,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * (Math.pow(v, 0.16))) + (0.3965 * t * (Math.pow(v, 0.16)));\n        return Math.round(w);\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpp4affq_h.js:15:12)\n    at Object.<anonymous> (/tmp/tmpp4affq_h.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.pow(v, 0.16);\n    let wc = 13.12 + (0.6215 * t) - (11.37 * w) + (0.3965 * t * w);\n    return Math.round(wc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpi55pyoiu.js:12:12)\n    at Object.<anonymous> (/tmp/tmpi55pyoiu.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmplocz82fd.js:12:12)\n    at Object.<anonymous> (/tmp/tmplocz82fd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp4n5ivbf8.js:12:12)\n    at Object.<anonymous> (/tmp/tmp4n5ivbf8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8 || t > 10) {\n        return t;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n35\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz27s9pr1.js:11:12)\n    at Object.<anonymous> (/tmp/tmpz27s9pr1.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 35,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8 || t > 10) {\n        return 0;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmppjauvvvb.js:11:12)\n    at Object.<anonymous> (/tmp/tmppjauvvvb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v < 4.8) {\n        w = t;\n    } else {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + (0.6215 * t) - (35.75 * Math.pow(v, 0.16)) + (0.4275 * t * Math.pow(v, 0.16));\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpar_1cs5z.js:9:12)\n    at Object.<anonymous> (/tmp/tmpar_1cs5z.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wc = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(wc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8) {\n        return t;\n    }\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n  return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wind_chill: number = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    return Math.round(wind_chill);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8 || t > 10) {\n        return 0;\n    }\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpo0euwjeb.js:11:12)\n    at Object.<anonymous> (/tmp/tmpo0euwjeb.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp4n5ivbf8.js:12:12)\n    at Object.<anonymous> (/tmp/tmp4n5ivbf8.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wc: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(wc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n        return Math.round(w);\n    }\n    else {\n        return w;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmplx3su_9e.js:15:12)\n    at Object.<anonymous> (/tmp/tmplx3su_9e.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmplocz82fd.js:12:12)\n    at Object.<anonymous> (/tmp/tmplocz82fd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8 || t > 10) {\n        return NaN;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmptm5z9so9.js:11:12)\n    at Object.<anonymous> (/tmp/tmptm5z9so9.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmplocz82fd.js:12:12)\n    at Object.<anonymous> (/tmp/tmplocz82fd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8) {\n        return t;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t <= 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n        return Math.round(w);\n    } else {\n        return w;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124149,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpk2237e_r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpk2237e_r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpz9muhtty.js:9:12)\n    at Object.<anonymous> (/tmp/tmpz9muhtty.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wc: number = 13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16));\n    return Math.round(wc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.pow(v, 0.16);\n    let f = 35.74 + 0.6215 * t - 35.75 * w + 0.4275 * t * w;\n    return Math.round(f);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp3a5hczj7.js:10:12)\n    at Object.<anonymous> (/tmp/tmp3a5hczj7.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 120 || v < 3) {\n        w = 0;\n    } else {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n        return Math.round(w);\n    }\n    else {\n        return 0;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp1cx2gv0s.js:15:12)\n    at Object.<anonymous> (/tmp/tmp1cx2gv0s.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 0;\n    if (v > 4.8 && t < 10) {\n        w = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    }\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmpj976rwgn.js:12:12)\n    at Object.<anonymous> (/tmp/tmpj976rwgn.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let wc = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n    return Math.round(wc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124152,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w = Math.round(13.12 + (0.6215 * t) - (11.37 * Math.pow(v, 0.16)) + (0.3965 * t * Math.pow(v, 0.16)));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124148,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    if (v < 4.8 || t > 10) {\n        return -1;\n    }\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1666124149,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmp7ryfi796.js:11:12)\n    at Object.<anonymous> (/tmp/tmp7ryfi796.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    return Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = 35.74 + 0.6215 * t - 35.75 * Math.pow(v, 0.16) + 0.4275 * t * Math.pow(v, 0.16);\n    return Math.round(w);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509715,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely deep-equal\n\n40\n    at test (/tmp/tmprr5tby0h.js:9:12)\n    at Object.<anonymous> (/tmp/tmprr5tby0h.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected: 40,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nfunction wind_chill(v: number, t: number): number {\n    let w: number = Math.round(13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16));\n    return w;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = wind_chill;\n  assert.deepEqual(candidate(120, 35),40);\n  assert.deepEqual(candidate(40, 20),19);\n  assert.deepEqual(candidate(10, 8),6);\n}\n\ntest();",
      "timestamp": 1665509714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
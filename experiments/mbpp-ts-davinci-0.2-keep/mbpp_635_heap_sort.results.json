{
  "name": "mbpp_635_heap_sort",
  "language": "ts",
  "prompt": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp_ohque04.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result: number[] = [];\n    while (heap.size) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp8axy9jsn.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.extract_min());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpoeim71ve.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp47f4k89z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmphwjiijmx.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    return iterable;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  5,\n  7,\n  9,\n  2,\n  4,\n  6,\n  8,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmpv7l5tv7l.js:8:12)\n    at Object.<anonymous> (/tmp/tmpv7l5tv7l.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 3, 5, 7, 9,\n    2, 4, 6, 8, 0\n  ],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpd2bgzz97.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    heap.sort();\n    return heap.heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp8ywufrwx.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list: number[] = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp8m68rbre.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpy48b4voc.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpy48b4voc.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpd2bgzz97.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    //TODO: implement\n    return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmp7jclflv3.js:9:12)\n    at Object.<anonymous> (/tmp/tmp7jclflv3.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppy1exqw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpz3ih9pon.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpz3ih9pon.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmple99pt_w.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list: number[] = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp8m68rbre.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted_list = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.extract_max());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpk_5zmss6.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpbj4ya2qd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpjmntqnsj.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpbj4ya2qd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    heap.build_heap(iterable);\n    let sorted: number[] = [];\n    while (heap.heap_size > 0) {\n        sorted.push(heap.extract_max());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp_v8d7c48.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpbj4ya2qd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.extract_max());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpr4q22c4r.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted.push(heap.extract_max());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpm0r6c35w.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpd2bgzz97.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (!heap.is_empty()) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpowl3il_7.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmp5r1z9qlb.js:8:12)\n    at Object.<anonymous> (/tmp/tmp5r1z9qlb.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpz3ih9pon.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n  let heap = new Heap(iterable);\n  let result = [];\n  while (heap.size() > 0) {\n    result.push(heap.pop());\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpt8cvnvth.ts(3,18): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppy1exqw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpfaaf04tk.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    //TODO\n    return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmpnvtjvnhn.js:9:12)\n    at Object.<anonymous> (/tmp/tmpnvtjvnhn.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpd2bgzz97.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list = [];\n    while (heap.size > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpnyf5h7ma.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list: number[] = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp8m68rbre.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpkr_mhs57.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmp5r1z9qlb.js:8:12)\n    at Object.<anonymous> (/tmp/tmp5r1z9qlb.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpfaaf04tk.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpxn3cluyv.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap<number>();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted_list: number[] = [];\n    for (let i = 0; i < iterable.length; i++) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp5dxs8pyi.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpjmntqnsj.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list: number[] = [];\n    while (heap.size > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "../../../../tmp/tmpj67axg3m.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    return iterable;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  3,\n  5,\n  7,\n  9,\n  2,\n  4,\n  6,\n  8,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n    at test (/tmp/tmpv7l5tv7l.js:8:12)\n    at Object.<anonymous> (/tmp/tmpv7l5tv7l.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 3, 5, 7, 9,\n    2, 4, 6, 8, 0\n  ],\n  expected: [\n    0, 1, 2, 3, 4,\n    5, 6, 7, 8, 9\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpbj4ya2qd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    heap.sort();\n    return heap.heap;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp8ywufrwx.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpxn3cluyv.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.extract_min());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmpnl84x14z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list: number[] = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmp8m68rbre.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (!heap.is_empty()) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmphp_unyam.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpfaaf04tk.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.length > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "../../../../tmp/tmpcyfoi112.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.length > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmplfdbf7pz.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp_ohque04.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppy1exqw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpbj4ya2qd.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppy1exqw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap();\n    for (let i = 0; i < iterable.length; i++) {\n        heap.insert(iterable[i]);\n    }\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpkr_mhs57.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp47f4k89z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp47f4k89z.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while(heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124230,
      "stdout": "../../../../tmp/tmpjsq25l64.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpfaaf04tk.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.length) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmpsts119d6.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmpfaaf04tk.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    return heap.sort();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppy1exqw8.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.length > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp_ohque04.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted_list = [];\n    while (heap.size() > 0) {\n        sorted_list.push(heap.pop());\n    }\n    return sorted_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpd2bgzz97.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmp251sx1r0.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpru0pb61t.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let result: number[] = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124229,
      "stdout": "../../../../tmp/tmppugr8xap.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    const heap = new Heap(iterable);\n    const result = [];\n    while (heap.size() > 0) {\n        result.push(heap.pop());\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1666124231,
      "stdout": "../../../../tmp/tmp0pkzuq6c.ts(3,22): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted: number[] = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpwzjexog3.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sort the given list.\nfunction heap_sort(iterable: number[]): number[] {\n    let heap = new Heap(iterable);\n    let sorted = [];\n    while (heap.size() > 0) {\n        sorted.push(heap.pop());\n    }\n    return sorted;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = heap_sort;\n  assert.deepEqual(candidate([1, 3, 5, 7, 9, 2, 4, 6, 8, 0]),[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([25, 35, 22, 85, 14, 65, 75, 25, 58]),[14, 22, 25, 25, 35, 58, 65, 75, 85]);\n  assert.deepEqual(candidate([7, 1, 9, 5]),[1, 5, 7, 9]);\n}\n\ntest();",
      "timestamp": 1665509931,
      "stdout": "../../../../tmp/tmpv8860a2_.ts(3,20): error TS2552: Cannot find name 'Heap'. Did you mean 'heap'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_767_get_pairs_count",
  "language": "ts",
  "prompt": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n"
  ]
}
{
  "name": "mbpp_589_perfect_squares",
  "language": "ts",
  "prompt": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "  let squares: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      squares.push(i);\n    }\n  }\n  return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt === Math.floor(sqrt)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\nconsole.log(perfect_squares(1, 100));\nconsole.log(perfect_squares(1, 1000));\nconsole.log(perfect_squares(1, 10000));\nconsole.log(perfect_squares(1, 100000));\nconsole.log(perfect_squares(1, 1000000));\nconsole.log(perfect_squares(1, 10000000));\nconsole.log(perfect_squares(1, 100000000));\nconsole.log(perfect_squares(1, 1000000000));\nconsole.log(perfect_squares(1, 10000000000));\nconsole.log(perfect_squares(1, 100000000000));\nconsole.log(perfect_squares(1, 1000000000000));\nconsole.log(perfect_squares(1, 10000000000000));\nconsole.log(perfect_squares(1, 100000000000000));\nconsole.log(perfect_squares(1, 1000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000000000000));\nconsole.log",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i: number = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 10));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 9));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt * sqrt == i) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 25));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt - Math.floor(sqrt) === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let perfect_squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            perfect_squares.push(i);\n        }\n    }\n    return perfect_squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "  let squares: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      squares.push(i);\n    }\n  }\n  return squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let arr = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let perfect_squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt === Math.floor(sqrt)) {\n            perfect_squares.push(i);\n        }\n    }\n    return perfect_squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 25));\n",
    "  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for (var i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 25));\n",
    "    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n",
    "    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n"
  ]
}
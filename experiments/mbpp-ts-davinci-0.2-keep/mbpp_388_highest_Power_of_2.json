{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "ts",
  "prompt": "//Write a python function to find the highest power of 2 that is less than or equal to n.\nfunction highest_Power_of_2(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = highest_Power_of_2;\n  assert.deepEqual(candidate(10),8);\n  assert.deepEqual(candidate(19),16);\n  assert.deepEqual(candidate(32),32);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let res: number = 1;\n    while (res < n) {\n        res *= 2;\n    }\n    return res / 2;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result = result * 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(15));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(17));\nconsole.log(highest_Power_of_2(18));\nconsole.log(highest_Power_of_2(19));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(21));\nconsole.log(highest_Power_of_2(22));\nconsole.log(highest_Power_of_2(23));\nconsole.log(highest_Power_of_2(24));\nconsole.log(highest_Power_of_2(25));\nconsole.log(highest_Power_of_2(26));\nconsole.log(highest_Power_of_2(27));\nconsole.log(highest_Power_of_2(28));\nconsole.log(highest_Power_of_2(29));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(31));\nconsole.log(highest_Power_of_2(32));\nconsole.log(highest_Power_of_2(33));\nconsole.log(highest_Power_of_2(34));\nconsole.log(highest_Power_of_2(35));\nconsole.log(highest_Power_of_2(36));\nconsole.log(highest_Power_of_2(37));\nconsole.log(highest_Power_of_2(38));\nconsole.log(highest_Power_of_2(39));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(41));\nconsole.log(highest_Power_of_2(42));\nconsole.log(highest_Power_of_2(43));\nconsole.log(highest_Power_of_",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(50));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(150));\n",
    "    let res: number = 0;\n    for (let i: number = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            res = Math.pow(2, i);\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        if (i * i <= n) {\n            result = i;\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(50));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(15));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(25));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(150));\n",
    "    let result = 1;\n    while (result <= n) {\n        result = result * 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(60));\nconsole.log(highest_Power_of_2(70));\nconsole.log(highest_Power_of_2(80));\nconsole.log(highest_Power_of_2(90));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(110));\nconsole.log(highest_Power_of_2(120));\nconsole.log(highest_Power_of_2(130));\nconsole.log(highest_Power_of_2(140));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest_Power_of_2(160));\nconsole.log(highest_Power_of_2(170));\nconsole.log(highest_Power_of_2(180));\nconsole.log(highest_Power_of_2(190));\nconsole.log(highest_Power_of_2(200));\nconsole.log(highest_Power_of_2(210));\nconsole.log(highest_Power_of_2(220));\nconsole.log(highest_Power_of_2(230));\nconsole.log(highest_Power_of_2(240));\nconsole.log(highest_Power_of_2(250));\nconsole.log(highest_Power_of_2(260));\nconsole.log(highest_Power_of_2(270));\nconsole.log(highest_Power_of_2(280));\nconsole.log(highest_Power_of_2(290));\nconsole.log(highest_Power_of_",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(150));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n",
    "    let i = 0;\n    let result = 0;\n    while (i <= n) {\n        result = i;\n        i = i * 2;\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n",
    "    let res = 1;\n    while (res <= n) {\n        res = res * 2;\n    }\n    return res / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let result: number = 0;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(15));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(25));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(35));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(45));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(55));\nconsole.log(highest_Power_of_2(60));\nconsole.log(highest_Power_of_2(65));\nconsole.log(highest_Power_of_2(70));\nconsole.log(highest_Power_of_2(75));\nconsole.log(highest_Power_of_2(80));\nconsole.log(highest_Power_of_2(85));\nconsole.log(highest_Power_of_2(90));\nconsole.log(highest_Power_of_2(95));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(105));\nconsole.log(highest_Power_of_2(110));\nconsole.log(highest_Power_of_2(115));\nconsole.log(highest_Power_of_2(120));\nconsole.log(highest_Power_of_2(125));\nconsole.log(highest_Power_of_2(130));\nconsole.log(highest_Power_of_2(135));\nconsole.log(highest_Power_of_2(140));\nconsole.log(highest_Power_of_2(145));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest_Power_of_2(50));\n",
    "    let i: number = 1;\n    while (i <= n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(1000));\nconsole.log(highest_Power_of_2(10000));\nconsole.log(highest_Power_of_2(100000));\nconsole.log(highest_Power_of_2(1000000));\nconsole.log(highest_Power_of_2(10000000));\nconsole.log(highest_Power_of_2(100000000));\nconsole.log(highest_Power_of_2(1000000000));\nconsole.log(highest_Power_of_2(10000000000));\nconsole.log(highest_Power_of_2(100000000000));\nconsole.log(highest_Power_of_2(1000000000000));\nconsole.log(highest_Power_of_2(10000000000000));\nconsole.log(highest_Power_of_2(100000000000000));\nconsole.log(highest_Power_of_2(1000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000000000));\nconsole.log(highest_",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let res = 1;\n    while (res <= n) {\n        res *= 2;\n    }\n    return res / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i <= n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let res: number = 0;\n    while (n > 0) {\n        res = n & (~n + 1);\n        n = n - res;\n    }\n    return res;\n}\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(24));\nconsole.log(highest_Power_of_2(31));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        if (i & (i - 1) == 0) {\n            result = i;\n        }\n    }\n    return result;\n}\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    var res = 0;\n    for (var i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            res = i;\n            break;\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(100));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(60));\nconsole.log(highest_Power_of_2(70));\nconsole.log(highest_Power_of_2(80));\nconsole.log(highest_Power_of_2(90));\nconsole.log(highest_Power_of_2(100));\n",
    "    let res = 0;\n    while (n > 0) {\n        n = n >> 1;\n        res++;\n    }\n    return Math.pow(2, res - 1);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\n",
    "    let i: number = 0;\n    let result: number = 0;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    while (n > 0) {\n        n = n >> 1;\n        result = result + 1;\n    }\n    return Math.pow(2, result - 1);\n}\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let res: number = 1;\n    while (res <= n) {\n        res = res * 2;\n    }\n    return res / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(150));\n",
    "    let result: number = 1;\n    while (result <= n) {\n        result = result * 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "  let i = 0;\n  while (Math.pow(2, i) <= n) {\n    i++;\n  }\n  return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let count = 0;\n    while (n > 1) {\n        n = n / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result: number = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(256));\nconsole.log(highest_Power_of_2(1));\nconsole.log(highest_Power_of_2(0));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    while (n > 1) {\n        n = n / 2;\n        result++;\n    }\n    return Math.pow(2, result);\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(30));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 0;\n    while (i <= n) {\n        i = Math.pow(2, power);\n        power++;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i <= n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    let result = 0;\n    while (Math.pow(2, i) <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n",
    "    let res: number = 1;\n    while (res <= n) {\n        res = res * 2;\n    }\n    return res / 2;\n}\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(24));\nconsole.log(highest_Power_of_2(32));\n",
    "    let i: number = 1;\n    while (i <= n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(20));\n",
    "    let i = 1;\n    while (i <= n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n",
    "  let result = 0;\n  for (let i = 0; i < n; i++) {\n    if (Math.pow(2, i) <= n) {\n      result = Math.pow(2, i);\n    }\n  }\n  return result;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(8));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 0;\n    let result: number = 0;\n    while (Math.pow(2, i) <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let result: number = 0;\n    while (Math.pow(2, i) <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 1;\n    while (i <= n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 1; i <= n; i++) {\n        if (i * i <= n) {\n            result = i * i;\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let res: number = 1;\n    while (res <= n) {\n        res *= 2;\n    }\n    return res / 2;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(50));\n",
    "    var result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let res = 0;\n    for (let i = 0; i < n; i++) {\n        if (Math.pow(2, i) <= n) {\n            res = Math.pow(2, i);\n        }\n    }\n    return res;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n",
    "    let result = 0;\n    for (let i = n; i >= 1; i--) {\n        if (i % 2 == 0) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    let result = 1;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(150));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    let j = 0;\n    for (i = 0; i < n; i++) {\n        if (Math.pow(2, i) <= n) {\n            j = i;\n        }\n    }\n    return Math.pow(2, j);\n}\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(1000));\nconsole.log(highest_Power_of_2(10000));\nconsole.log(highest_Power_of_2(100000));\nconsole.log(highest_Power_of_2(1000000));\nconsole.log(highest_Power_of_2(10000000));\nconsole.log(highest_Power_of_2(100000000));\nconsole.log(highest_Power_of_2(1000000000));\nconsole.log(highest_Power_of_2(10000000000));\nconsole.log(highest_Power_of_2(100000000000));\nconsole.log(highest_Power_of_2(1000000000000));\nconsole.log(highest_Power_of_2(10000000000000));\nconsole.log(highest_Power_of_2(100000000000000));\nconsole.log(highest_Power_of_2(1000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000000000));\nconsole.log(",
    "    let i = 0;\n    let power = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = 2 ** i;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(60));\nconsole.log(highest_Power_of_2(70));\nconsole.log(highest_Power_of_2(80));\nconsole.log(highest_Power_of_2(90));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(110));\nconsole.log(highest_Power_of_2(120));\nconsole.log(highest_Power_of_2(130));\nconsole.log(highest_Power_of_2(140));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest_Power_of_2(160));\nconsole.log(highest_Power_of_2(170));\nconsole.log(highest_Power_of_2(180));\nconsole.log(highest_Power_of_2(190));\nconsole.log(highest_Power_of_2(200));\nconsole.log(highest_Power_of_2(210));\nconsole.log(highest_Power_of_2(220));\nconsole.log(highest_Power_of_2(230));\nconsole.log(highest_Power_of_2(240));\nconsole.log(highest_Power_of_2(250));\nconsole.log(highest_Power_of_2(260));\nconsole.log(highest_Power_of_2(270));\nconsole.log(highest_Power_of_2(280));\nconsole.log(highest_Power_of_2(290));\nconsole.log(highest_Power_of_2(300));\nconsole.log(highest_Power_of_2(",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(7));\nconsole.log(highest_Power_of_2(8));\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result = result * 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(8));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let result: number = 0;\n    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let result: number = 0;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(100));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let result: number = 1;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (2 ** i <= n) {\n        i++;\n    }\n    return 2 ** (i - 1);\n}\nconsole.log(highest_Power_of_2(5));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(17));\nconsole.log(highest_Power_of_2(32));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(100));\n",
    "    let res: number = 0;\n    while (n > 1) {\n        res++;\n        n = n / 2;\n    }\n    return res;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let res = 1;\n    while (res <= n) {\n        res *= 2;\n    }\n    return res / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(100));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(1000));\nconsole.log(highest_Power_of_2(10000));\nconsole.log(highest_Power_of_2(100000));\nconsole.log(highest_Power_of_2(1000000));\nconsole.log(highest_Power_of_2(10000000));\nconsole.log(highest_Power_of_2(100000000));\nconsole.log(highest_Power_of_2(1000000000));\nconsole.log(highest_Power_of_2(10000000000));\nconsole.log(highest_Power_of_2(100000000000));\nconsole.log(highest_Power_of_2(1000000000000));\nconsole.log(highest_Power_of_2(10000000000000));\nconsole.log(highest_Power_of_2(100000000000000));\nconsole.log(highest_Power_of_2(1000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000000));\nconsole.log(highest_Power_of_2(100000000000000000000000000));\nconsole.log(highest_Power_of_2(1000000000000000000000000000));\nconsole.log(highest_Power_of_2(10000000000000000000000000000));\nconsole.log(highest",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i <= n) {\n        i *= 2;\n    }\n    return i / 2;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result: number = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(100));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(12));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    let power = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(15));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(17));\nconsole.log(highest_Power_of_2(18));\nconsole.log(highest_Power_of_2(19));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(21));\nconsole.log(highest_Power_of_2(22));\nconsole.log(highest_Power_of_2(23));\nconsole.log(highest_Power_of_2(24));\nconsole.log(highest_Power_of_2(25));\nconsole.log(highest_Power_of_2(26));\nconsole.log(highest_Power_of_2(27));\nconsole.log(highest_Power_of_2(28));\nconsole.log(highest_Power_of_2(29));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(31));\nconsole.log(highest_Power_of_2(32));\nconsole.log(highest_Power_of_2(33));\nconsole.log(highest_Power_of_2(34));\nconsole.log(highest_Power_of_2(35));\nconsole.log(highest_Power_of_2(36));\nconsole.log(highest_Power_of_2(37));\nconsole.log(highest_Power_of_2(38));\nconsole.log(highest_Power_of_2(39));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(41));\nconsole.log(highest_Power_of_2(42));\nconsole.log(highest_Power_of_2(43));\nconsole.log(highest_Power_of_2(44));\nconsole.log(highest_Power_of_2(45));\nconsole.log(highest_Power_of",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result <= n) {\n        result *= 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(100));\n",
    "    let i: number = 0;\n    let power: number = 0;\n    while (i <= n) {\n        power = i;\n        i = i * 2;\n    }\n    return power;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i <= n) {\n        i *= 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\n\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(60));\nconsole.log(highest_Power_of_2(70));\nconsole.log(highest_Power_of_2(80));\nconsole.log(highest_Power_of_2(90));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(110));\nconsole.log(highest_Power_of_2(120));\nconsole.log(highest_Power_of_2(130));\nconsole.log(highest_Power_of_2(140));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest_Power_of_2(160));\nconsole.log(highest_Power_of_2(170));\nconsole.log(highest_Power_of_2(180));\nconsole.log(highest_Power_of_2(190));\nconsole.log(highest_Power_of_2(200));\nconsole.log(highest_Power_of_2(210));\nconsole.log(highest_Power_of_2(220));\nconsole.log(highest_Power_of_2(230));\nconsole.log(highest_Power_of_2(240));\nconsole.log(highest_Power_of_2(250));\nconsole.log(highest_Power_of_2(260));\nconsole.log(highest_Power_of_2(270));\nconsole.log(highest_Power_of_2(280));\nconsole.log(highest_Power_of_2(290));\nconsole.log(highest_Power_of",
    "    let result = 0;\n    while (n > 0) {\n        result = n;\n        n = n & (n - 1);\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 0;\n    let result = 0;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        i++;\n        power = power * 2;\n    }\n    return power / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let power: number = 0;\n    while (i <= n) {\n        power = i;\n        i = i * 2;\n    }\n    return power;\n}\nconsole.log(highest_Power_of_2(100));\n",
    "    let i: number = 0;\n    let power: number = 1;\n    while (power <= n) {\n        power *= 2;\n        i++;\n    }\n    return power / 2;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let count = 0;\n    while (n > 1) {\n        n = n / 2;\n        count++;\n    }\n    return Math.pow(2, count);\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let i: number = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\nconsole.log(highest_Power_of_2(8));\nconsole.log(highest_Power_of_2(16));\nconsole.log(highest_Power_of_2(32));\nconsole.log(highest_Power_of_2(64));\nconsole.log(highest_Power_of_2(128));\nconsole.log(highest_Power_of_2(256));\nconsole.log(highest_Power_of_2(512));\nconsole.log(highest_Power_of_2(1024));\nconsole.log(highest_Power_of_2(2048));\nconsole.log(highest_Power_of_2(4096));\nconsole.log(highest_Power_of_2(8192));\nconsole.log(highest_Power_of_2(16384));\nconsole.log(highest_Power_of_2(32768));\nconsole.log(highest_Power_of_2(65536));\nconsole.log(highest_Power_of_2(131072));\nconsole.log(highest_Power_of_2(262144));\nconsole.log(highest_Power_of_2(524288));\nconsole.log(highest_Power_of_2(1048576));\nconsole.log(highest_Power_of_2(2097152));\nconsole.log(highest_Power_of_2(4194304));\nconsole.log(highest_Power_of_2(8388608));\nconsole.log(highest_Power_of_2(16777216));\nconsole.log(highest_Power_of_2(33554432));\nconsole.log(highest_Power_of_2(67108864));\nconsole.log(highest_Power_of_2(134217728));\nconsole.log(highest_Power_of_2(268435456));\nconsole.log(highest_Power_of_2(536870912));\nconsole.log(highest_Power_of_2(1073741824));\nconsole.log",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i / 2;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let result = 0;\n    while (n > 0) {\n        result = n;\n        n = n & (n - 1);\n    }\n    return result;\n}\n\nconsole.log(highest_Power_of_2(10));\nconsole.log(highest_Power_of_2(20));\nconsole.log(highest_Power_of_2(30));\nconsole.log(highest_Power_of_2(40));\nconsole.log(highest_Power_of_2(50));\nconsole.log(highest_Power_of_2(60));\nconsole.log(highest_Power_of_2(70));\nconsole.log(highest_Power_of_2(80));\nconsole.log(highest_Power_of_2(90));\nconsole.log(highest_Power_of_2(100));\nconsole.log(highest_Power_of_2(110));\nconsole.log(highest_Power_of_2(120));\nconsole.log(highest_Power_of_2(130));\nconsole.log(highest_Power_of_2(140));\nconsole.log(highest_Power_of_2(150));\nconsole.log(highest_Power_of_2(160));\nconsole.log(highest_Power_of_2(170));\nconsole.log(highest_Power_of_2(180));\nconsole.log(highest_Power_of_2(190));\nconsole.log(highest_Power_of_2(200));\nconsole.log(highest_Power_of_2(210));\nconsole.log(highest_Power_of_2(220));\nconsole.log(highest_Power_of_2(230));\nconsole.log(highest_Power_of_2(240));\nconsole.log(highest_Power_of_2(250));\nconsole.log(highest_Power_of_2(260));\nconsole.log(highest_Power_of_2(270));\nconsole.log(highest_Power_of_2(280));\nconsole.log(highest_Power_of_2(290));\nconsole.log(highest_Power_of_2(300));\nconsole.log(highest_Power_of_2(310));\nconsole.",
    "    let result = 0;\n    while (n > 0) {\n        result = n;\n        n = n & (n - 1);\n    }\n    return result;\n}\n",
    "    let i: number = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i: number = 0;\n    let result: number = 1;\n    while (result <= n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 0;\n    while (n > 0) {\n        result = n;\n        n = n & (n - 1);\n    }\n    return result;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) <= n) {\n        i++;\n    }\n    return Math.pow(2, i - 1);\n}\n",
    "    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        if (Math.pow(2, i) <= n) {\n            result = Math.pow(2, i);\n        }\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let result: number = 0;\n    while (n > 0) {\n        n = n / 2;\n        result = result + 1;\n    }\n    return result;\n}\nconsole.log(highest_Power_of_2(10));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i / 2;\n}\n\nconsole.log(highest_Power_of_2(10));\n",
    "    let result = 1;\n    while (result < n) {\n        result = result * 2;\n    }\n    return result / 2;\n}\nconsole.log(highest_Power_of_2(100));\n"
  ]
}
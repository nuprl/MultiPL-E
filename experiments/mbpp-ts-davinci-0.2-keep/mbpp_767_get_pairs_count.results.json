{
  "name": "mbpp_767_get_pairs_count",
  "language": "ts",
  "prompt": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6gkesr0n.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6gkesr0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5], 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    let hash: number[] = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        let temp: number = sum - arr[i];\n\n        if (temp >= 0 && hash[temp] == 1) {\n            count++;\n        }\n        hash[arr[i]] = 1;\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpyup4_3ib.js:17:12)\n    at Object.<anonymous> (/tmp/tmpyup4_3ib.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    let map: Map<number, number> = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        if (map.has(sum - arr[i])) {\n            count++;\n        }\n        map.set(arr[i], i);\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzvzvpxoy.js:16:12)\n    at Object.<anonymous> (/tmp/tmpzvzvpxoy.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6], 7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] == sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6gkesr0n.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6gkesr0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count: number = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] == sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0qub5snr.js:16:12)\n    at Object.<anonymous> (/tmp/tmp0qub5snr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6gkesr0n.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6gkesr0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6gkesr0n.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6gkesr0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5], 5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpw8scxq3w.js:17:12)\n    at Object.<anonymous> (/tmp/tmpw8scxq3w.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        for (let j: number = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpyw2vw5as.js:16:12)\n    at Object.<anonymous> (/tmp/tmpyw2vw5as.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    let hash: number[] = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        let temp: number = sum - arr[i];\n\n        if (hash.indexOf(temp) !== -1) {\n            count++;\n        }\n        hash.push(arr[i]);\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 5, 7, -1], 6));\nconsole.log(get_pairs_count([1, 5, 7, -1, 5], 6));\nconsole.log(get_pairs_count([1, 1, 1, 1], 2));\nconsole.log(get_pairs_count([10, 12, 10, 15, -1, 7, 6, 5, 4, 2, 1, 1, 1], 11));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "2\n3\n3\n6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpceet8qdk.js:21:12)\n    at Object.<anonymous> (/tmp/tmpceet8qdk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7], 7));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122950,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122950,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(get_pairs_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1666122949,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] === sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6gkesr0n.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6gkesr0n.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nfunction get_pairs_count(arr: number[], sum: number): number {\n    let count: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] + arr[j] == sum) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_pairs_count;\n  assert.deepEqual(candidate([1, 1, 1, 1], 2),6);\n  assert.deepEqual(candidate([1, 5, 7, -1, 5], 6),3);\n  assert.deepEqual(candidate([1, -2, 3], 1),1);\n  assert.deepEqual(candidate([-1, -2, 3], -3),1);\n}\n\ntest();",
      "timestamp": 1665510185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_91_find_substring",
  "language": "ts",
  "prompt": "//Write a function to check if a string is present as a substring in a given list of string values.\nfunction find_substring(str1: string[], sub_str: string): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_substring;\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),true);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),false);\n  assert.deepEqual(candidate([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'llo'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'abc'));\n",
    "    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].indexOf(sub_str) > -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"not\"));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'name'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'hello'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'Anna'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'world'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'is'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'my'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'not'));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(find_substring([\"hello\", \"world\"], \"hello\"));\nconsole.log(find_substring([\"hello\", \"world\"], \"hi\"));\n",
    "    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].indexOf(sub_str) != -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"not\"));\n",
    "    let result = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].indexOf(sub_str) > -1) {\n            result = true;\n        }\n    }\n    return result;\n}\n",
    "    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"not\"));\n",
    "    let str_len: number = str1.length;\n    let sub_str_len: number = sub_str.length;\n    let i: number = 0;\n    let j: number = 0;\n    let count: number = 0;\n    for (i = 0; i < str_len; i++) {\n        for (j = 0; j < sub_str_len; j++) {\n            if (str1[i] == sub_str[j]) {\n                count++;\n            }\n        }\n    }\n    if (count == sub_str_len) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet str1: string[] = ['a', 'b', 'c', 'd', 'e'];\nlet sub_str: string = 'abc';\nlet res: boolean = find_substring(str1, sub_str);\nconsole.log(res);\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'name'));\n",
    "    let i: number;\n    for (i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"not\"));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    let found: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].indexOf(sub_str) > -1) {\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\n\nlet str1: string[] = [\"hello\", \"world\", \"lorem\"];\nlet sub_str: string = \"or\";\nconsole.log(find_substring(str1, sub_str));\n",
    "    let found: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring([\"this\", \"is\", \"what\", \"I'm\", \"searching\", \"in\"], \"is\"));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n        }\n    }\n    return result;\n}\n\nlet str1: string[] = [\"hello\", \"world\", \"lorem\", \"ipsum\"];\nlet sub_str: string = \"ipsum\";\nconsole.log(find_substring(str1, sub_str));\n",
    "    let result: boolean = false;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i].includes(sub_str)) {\n            result = true;\n        }\n    }\n    return result;\n}\n\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'name'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'hello'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'is'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'Anna'));\nconsole.log(find_substring(['hello', 'world', 'my', 'name', 'is', 'Anna'], 'test'));\n"
  ]
}
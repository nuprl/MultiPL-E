{
  "name": "mbpp_61_count_Substrings",
  "language": "ts",
  "prompt": "//Write a python function to count the number of substrings with the sum of digits equal to their length.\nfunction count_Substrings(s: string): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_Substrings;\n  assert.deepEqual(candidate(\"112112\"),6);\n  assert.deepEqual(candidate(\"111\"),6);\n  assert.deepEqual(candidate(\"1101112\"),12);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum === j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"abcabc\"));\nconsole.log(count_Substrings(\"abccba\"));\nconsole.log(count_Substrings(\"abc\"));\nconsole.log(count_Substrings(\"aaaaa\"));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123abc\"));\nconsole.log(count_Substrings(\"ab12\"));\nconsole.log(count_Substrings(\"1\"));\nconsole.log(count_Substrings(\"1234567890\"));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"4321\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"12345\"));\nconsole.log(count_Substrings(\"1234567898765\"));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let sub = s.substring(i, j);\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub_str = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub_str.length; k++) {\n                sum += parseInt(sub_str[k]);\n            }\n            if (sum == sub_str.length)\n                count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"abcab\"));\nconsole.log(count_Substrings(\"abbcab\"));\n",
    "    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub_str = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub_str.length; k++) {\n                sum += parseInt(sub_str[k]);\n            }\n            if (sum == sub_str.length)\n                count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"abcabc\"));\nconsole.log(count_Substrings(\"aaaa\"));\nconsole.log(count_Substrings(\"abc\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"abcdabc\"));\nconsole.log(count_Substrings(\"abcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"));\nconsole.log(count_Substrings(\"abcdabcdabcdabcdabcdab",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sub_str = s.substring(i, j);\n            let sum = 0;\n            for (let k = 0; k < sub_str.length; k++) {\n                sum += parseInt(sub_str[k]);\n            }\n            if (sum == sub_str.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"abc\"));\nconsole.log(count_Substrings(\"abcc\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"abcab\"));\nconsole.log(count_Substrings(\"abccc\"));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let sub = s.substring(i, j);\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"abc\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"abcde\"));\nconsole.log(count_Substrings(\"abcdea\"));\nconsole.log(count_Substrings(\"abcdeab\"));\nconsole.log(count_Substrings(\"abcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcd\"));\nconsole.log(count_Substrings(\"abcdeabcde\"));\nconsole.log(count_Substrings(\"abcdeabcdea\"));\nconsole.log(count_Substrings(\"abcdeabcdeab\"));\nconsole.log(count_Substrings(\"abcdeabcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcd\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcde\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdea\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeab\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcd\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcde\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcdea\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcdeab\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcde",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"abcab\"));\nconsole.log(count_Substrings(\"abccc\"));\n",
    "    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let substr: string = s.substring(i, j);\n            let sum: number = 0;\n            for (let k = 0; k < substr.length; k++) {\n                sum += parseInt(substr[k]);\n            }\n            if (sum == substr.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"abc\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"abcde\"));\nconsole.log(count_Substrings(\"abcdea\"));\nconsole.log(count_Substrings(\"abcdeab\"));\nconsole.log(count_Substrings(\"abcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcd\"));\nconsole.log(count_Substrings(\"abcdeabcde\"));\nconsole.log(count_Substrings(\"abcdeabcdea\"));\nconsole.log(count_Substrings(\"abcdeabcdeab\"));\nconsole.log(count_Substrings(\"abcdeabcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcd\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcde\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdea\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeab\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabc\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcd\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcde\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcdea\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcdeab\"));\nconsole.log(count_Substrings(\"abcdeabcdeabcdeabcdeabc\"));\nconsole.log(count_Substrings(\"abc",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_Substrings(\"abc\"));\nconsole.log(count_Substrings(\"abbc\"));\nconsole.log(count_Substrings(\"abccc\"));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let sum = 0;\n        for (let j = i; j < s.length; j++) {\n            sum += parseInt(s[j]);\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let sub = s.substring(i, j);\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum === sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            let sub = s.substring(i, j);\n            for (let k = 0; k < sub.length; k++) {\n                sum += parseInt(sub[k]);\n            }\n            if (sum == sub.length) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123abc\"));\nconsole.log(count_Substrings(\"ab12\"));\nconsole.log(count_Substrings(\"1234\"));\nconsole.log(count_Substrings(\"12a12\"));\nconsole.log(count_Substrings(\"abcd\"));\nconsole.log(count_Substrings(\"abababab\"));\nconsole.log(count_Substrings(\"ab12c13d14e15\"));\nconsole.log(count_Substrings(\"ab\"));\nconsole.log(count_Substrings(\"aba\"));\nconsole.log(count_Substrings(\"abba\"));\n",
    "    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == (j - i)) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"abcabc\"));\nconsole.log(count_Substrings(\"aaaaa\"));\nconsole.log(count_Substrings(\"abbbbb\"));\nconsole.log(count_Substrings(\"123123\"));\nconsole.log(count_Substrings(\"123\"));\nconsole.log(count_Substrings(\"1\"));\nconsole.log(count_Substrings(\"\"));\n",
    "    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        for (let j = i + 1; j <= s.length; j++) {\n            let sum: number = 0;\n            for (let k = i; k < j; k++) {\n                sum += parseInt(s[k]);\n            }\n            if (sum == j - i) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_Substrings(\"123abc\"));\nconsole.log(count_Substrings(\"ab12\"));\nconsole.log(count_Substrings(\"12ab12\"));\n"
  ]
}
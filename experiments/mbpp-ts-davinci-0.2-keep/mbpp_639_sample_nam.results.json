{
  "name": "mbpp_639_sample_nam",
  "language": "ts",
  "prompt": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abhishek\", \"abhishek\", \"Abhi\", \"abhi\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpmkdjpmv1.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmpmkdjpmv1.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpmkdjpmv1.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"Reddy\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sai\", \"Kiran\", \"Kumar\", \"sai\", \"Kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "18\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmp5g62no22.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5g62no22.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmp5g62no22.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Raj\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpn009ny3j.ts(11,850): error TS1002: Unterminated string literal.\n../../../../tmp/tmpn009ny3j.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpn009ny3j.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"abc\", \"def\", \"ghi\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = ['John', 'Sam', 'Bob', 'Sara', 'Sara', 'Sam', 'John'];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Kous\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpusaluu7s.ts(12,778): error TS1002: Unterminated string literal.\n../../../../tmp/tmpusaluu7s.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpusaluu7s.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpe21xknzm.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) <= 90) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"Doe\", \"jane\", \"doe\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sachin\", \"Sourav\", \"Rahul\", \"sachin\", \"rahul\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"def\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "26\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Nam\", \"Nguyen\", \"Tran\", \"nguyen\", \"tran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"Sai\", \"Kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "18\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpe21xknzm.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Johri\", \"Lala\"]));\nconsole.log(sample_nam([\"Umang\", \"Vipul\", \"Rahul\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "14\n15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Raj\", \"Ravi\", \"Rajesh\", \"Raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam(['Krishna', 'Hare', 'Murari', 'Rama']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"Mno\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmn', 'Zzz', 'Xyz', 'Poq']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "18\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Ravi\", \"Rajesh\", \"Raju\", \"Rajendra\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kiran\", \"kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "15\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpot_3i12e.js:15:12)\n    at Object.<anonymous> (/tmp/tmpot_3i12e.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) >= 'A' && sample_names[i].charAt(0) <= 'Z') {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nop', 'Mno']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum_length: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum_length += sample_names[i].length;\n        }\n    }\n    return sum_length;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "../../../../tmp/tmpktle5_41.ts(12,770): error TS1002: Unterminated string literal.\n../../../../tmp/tmpktle5_41.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpktle5_41.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Lokesh\", \"Kiran\", \"Kumar\", \"kiran\", \"lokesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"abcd\", \"efgh\", \"ijkl\", \"mnop\", \"qrst\", \"uvwx\", \"yz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"s\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "../../../../tmp/tmp5j31_sth.ts(11,748): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5j31_sth.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmp5j31_sth.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"Kiran\"]));\nconsole.log(sample_nam([\"Karan\", \"arjun\", \"Raju\", \"Kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "19\n14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"nmo\"]));\nconsole.log(sample_nam([\"abc\", \"xyz\", \"nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "9\n6\n0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sanjay\", \"Kumar\", \"Saravanan\"]));\nconsole.log(sample_nam([\"Sanjay\", \"kumar\", \"Saravanan\"]));\nconsole.log(sample_nam([\"Sanjay\", \"Kumar\", \"saravanan\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "20\n15\n11\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"SaiKoushik\", \"SaiKoushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "30\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum = 0;\n  for (let i = 0; i < sample_names.length; i++) {\n    if (sample_names[i][0] === sample_names[i][0].toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"James\", \"jack\", \"jill\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Kiran\", \"Kumar\", \"kiran\", \"Kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "20\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"Rajeshwari\", \"rajesh\", \"raju\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        } else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kamal\", \"Nimal\", \"Sunimal\", \"Himal\", \"Amal\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "26\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"Kiran\", \"Ravi\", \"Rajesh\", \"Raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Kumar\", \"raj\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Ravi\", \"Raju\", \"raj\", \"Rajesh\", \"Rajiv\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Bala\", \"Koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Bob\", \"Charlie\", \"David\", \"Ebenezer\", \"Frank\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"Rajeshwari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"rajesh\", \"Rajesh\", \"Raju\", \"Rajesh\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "29\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"def\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Nmo\", \"abc\", \"xyz\", \"nmo\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122792,
      "stdout": "9\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Raj\", \"Rohan\", \"Rajesh\", \"Raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Keshav\", \"Kanta\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122792,
      "stdout": "33\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Jhon\", \"Doe\", \"Sam\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122792,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] === sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmo']));\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmo', 'abc']));\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmo', 'abc', 'klm']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "9\n9\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Soumya\", \"Sourav\", \"Soumya\", \"Sourav\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122792,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Mohan\", \"Sohan\", \"Ramesh\", \"Suresh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122792,
      "stdout": "27\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"James\", \"Jack\", \"Jill\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Raj\", \"Rajesh\", \"Raju\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "../../../../tmp/tmppq3ixa94.ts(11,848): error TS1002: Unterminated string literal.\n../../../../tmp/tmppq3ixa94.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmppq3ixa94.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Sam\", \"Samuel\", \"john\", \"sam\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122791,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"Kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Kamal\", \"Mohan\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] === sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Gowtham\", \"Koushik\", \"Koushik\", \"Koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "35\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"s\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "../../../../tmp/tmp1f4j3zhq.ts(11,755): error TS1002: Unterminated string literal.\n../../../../tmp/tmp1f4j3zhq.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmp1f4j3zhq.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum_len: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum_len += sample_names[i].length;\n        }\n    }\n    return sum_len;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Jodha\", \"Krishna\", \"Arjun\", \"Malika\"]));\nconsole.log(sample_nam([\"Karan\", \"Jodha\", \"krishna\", \"Arjun\", \"Malika\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "28\n21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"Mahesh\", \"Ganesh\", \"Ramesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"John\", \"James\", \"Jack\", \"Jill\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmp5g62no22.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5g62no22.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmp5g62no22.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sai\", \"Krishna\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\", \"Sai\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "../../../../tmp/tmp23enmrtz.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Rama\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"murari\", \"Rama\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"rama\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "21\n15\n17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"Mno\"]));\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"Mno\", \"abc\", \"pqr\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "12\n12\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"Rajeshwari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"Kiran\", \"Suresh\", \"Ramesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpmkdjpmv1.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmpmkdjpmv1.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpmkdjpmv1.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i: number = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Rajesh\", \"Raju\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122796,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122796,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122796,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kiran\", \"kumar\", \"Reddy\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"A\", \"B\", \"C\", \"D\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"John\", \"James\", \"Jack\", \"Jill\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kiran\", \"kumar\", \"Kumar\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"rajesh\", \"Rajesh\", \"Rajesh\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "../../../../tmp/tmp6atd4gow.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Karthik\", \"Sai\", \"SaiKrishna\", \"SaiKiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "35\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) < 97) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Nagendra\", \"nagendra\", \"Nagesh\", \"nagesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sophia\", \"Abigail\", \"sarah\", \"Isla\", \"Emily\", \"Elizabeth\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Alex\", \"Jacob\", \"Mark\", \"Max\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Johri\", \"Lala\"]));\nconsole.log(sample_nam([\"Umang\", \"Vipul\", \"Rahul\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "14\n15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\"]));\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Hari\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "17\n21\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"kiran\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "20\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Jenny\", \"Jill\", \"james\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Aakash\", \"Ajay\", \"Akshay\", \"Amit\", \"Aman\", \"ankit\", \"ankur\", \"anil\", \"anuj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "24\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Kamal\", \"Kanta\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) !== sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Ana\", \"Bogdan\", \"Cristina\", \"daniel\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Kamal\", \"Krish\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122799,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sai\", \"Sri\", \"sai\", \"sri\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122799,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Keshav\", \"Kanta\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122799,
      "stdout": "33\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam(['Abhishek', 'Kumar', 'Singh', 'abhishek']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122799,
      "stdout": "18\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Kiran\", \"kumar\", \"Kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122799,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpmkdjpmv1.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmpmkdjpmv1.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpmkdjpmv1.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sachin\", \"Sourav\", \"Rahul\", \"sachin\", \"Saurav\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Johri\", \"Lala\"]));\nconsole.log(sample_nam([\"Umesh\", \"Krishna\", \"Naidu\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "14\n17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"Siva\", \"koushik\", \"sai\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        } else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\", \"abc\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122799,
      "stdout": "../../../../tmp/tmpfcw29on6.ts(16,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "28\n28\n28\n28\n28\n28\n28\n28\n28\n28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Aman\", \"Aakash\", \"Arnav\", \"Amit\", \"Ajay\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sai\", \"Kiran\", \"sai\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\", \"Amit\", \"Aman\", \"Ankit\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "../../../../tmp/tmpqhtfqfdx.ts(12,895): error TS1002: Unterminated string literal.\n../../../../tmp/tmpqhtfqfdx.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpqhtfqfdx.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Rohan\", \"Raj\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n    }\n    for (let i: number = 0; i < sample_names.length; i++) {\n        sum += sample_names[i].length;\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"Kiran\", \"Raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raju\", \"Ravi\", \"Rajesh\", \"Raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "17\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"abc\", \"xyz\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmpb7qhowkz.js:18:12)\n    at Object.<anonymous> (/tmp/tmpb7qhowkz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) > 96) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam(['Abc', 'def', 'ghi', 'jkl']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "9\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n17\n\nshould loosely deep-equal\n\n16\n    at test (/tmp/tmp4kerjthv.js:15:12)\n    at Object.<anonymous> (/tmp/tmp4kerjthv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 17,\n  expected: 16,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Jodhpur\", \"India\"]));\nconsole.log(sample_nam([\"Umesh\", \"Kumar\", \"Saini\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "17\n15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raju\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n  let sum: number = 0;\n  for (let i = 0; i < sample_names.length; i++) {\n    if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n      sum += sample_names[i].length;\n    }\n  }\n  return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"john\", \"doe\", \"john\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "7\n7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Sachin\", \"Saurav\", \"Rahul\", \"Dravid\", \"Virat\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122800,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"Reddy\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "15\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"Rajeshwar\", \"raj\", \"raju\", \"rajesh\", \"rajeshwar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "../../../../tmp/tmpmkdjpmv1.ts(12,781): error TS1002: Unterminated string literal.\n../../../../tmp/tmpmkdjpmv1.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpmkdjpmv1.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sachin\", \"Saurav\", \"Rahul\", \"Sachin\", \"Sachin\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "29\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"Rajesh\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "19\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Ravi\", \"Rajesh\", \"Raju\", \"Rajan\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"John\", \"Sam\", \"John\", \"Sam\", \"john\", \"sam\", \"john\", \"sam\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "14\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\", \"sai\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "../../../../tmp/tmp0_2czd7n.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122802,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"john\"]));\nconsole.log(sample_nam([\"John\", \"Doe\", \"Sam\", \"john\", \"Sam\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "10\n10\n13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nlet sample_names: string[] = [\"John\", \"Doe\", \"Sam\", \"Smith\", \"Jane\", \"Doe\"];\nconsole.log(sample_nam(sample_names));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Kamal\", \"Mohan\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) != sample_names[i].charAt(0).toLowerCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Abc\", \"Xyz\", \"Pqr\", \"abc\", \"def\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"SaiKoushik\", \"Sai\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "../../../../tmp/tmpcbqyzqn9.ts(12,747): error TS1002: Unterminated string literal.\n../../../../tmp/tmpcbqyzqn9.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmpcbqyzqn9.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raj\", \"Krishna\"]));\nconsole.log(sample_nam([\"Karan\", \"Arjun\", \"Raj\", \"krishna\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "20\n13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Krishna\", \"Hare\", \"Murari\", \"Madan\", \"Kamal\", \"Krish\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "32\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmo']));\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmo', 'abc']));\nconsole.log(sample_nam(['Abc', 'Xyz', 'Nmo', 'abc', 'xyz']));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "9\n9\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122796,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"Kumar\", \"kiran\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122797,
      "stdout": "../../../../tmp/tmp6atd4gow.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\", \"Soumya\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "../../../../tmp/tmp9u33hlj7.ts(12,713): error TS1002: Unterminated string literal.\n../../../../tmp/tmp9u33hlj7.ts(13,1): error TS1005: ',' expected.\n../../../../tmp/tmp9u33hlj7.ts(13,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Kiran\", \"kumar\", \"Reddy\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nlet sample_names: string[] = [\"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\", \"Sai\", \"Karthik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "../../../../tmp/tmpw_juhm5p.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum = sum + sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"a\", \"b\", \"c\"]));\nconsole.log(sample_nam([\"A\", \"B\", \"C\"]));\nconsole.log(sample_nam([\"a\", \"B\", \"C\"]));\nconsole.log(sample_nam([\"A\", \"b\", \"C\"]));\nconsole.log(sample_nam([\"A\", \"B\", \"c\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "0\n3\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Koushik\", \"Sai\", \"SaiKoushik\", \"SaiKoushikSai\"]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "33\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] === sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Bharath\", \"Koushik\", \"Bharath\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "28\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charCodeAt(0) >= 65 && sample_names[i].charCodeAt(0) <= 90) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"rajesh\", \"Rajesh\", \"Rajeshwar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122803,
      "stdout": "22\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Karan\", \"Raj\", \"Kiran\", \"Rajesh\", \"Raju\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "23\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Kumar\", \"raj\", \"kumar\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "8\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) === sample_names[i].charAt(0).toLowerCase()) {\n            sample_names.splice(i, 1);\n            i--;\n        }\n        else {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Harsh\", \"Beria\", \"harsh\", \"santosh\", \"Joseph\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Karan\", \"Rohan\", \"Raj\", \"Raju\", \"Rajesh\", \"Rajendra\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "31\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i][0] == sample_names[i][0].toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\", \"Koushik\",\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "../../../../tmp/tmp9s_oxq1m.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\nconsole.log(sample_nam([\"Raj\", \"Raju\", \"Rajesh\", \"rajesh\", \"raju\", \"raj\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122794,
      "stdout": "13\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Sai\", \"Krishna\", \"Kiran\", \"sai\", \"Kiran\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "20\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i: number = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\nconsole.log(sample_nam([\"Micheal\", \"Anne\", \"Frank\", \"Joe\", \"John\", \"David\", \"Mark\", \"Bill\"]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122804,
      "stdout": "36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nfunction sample_nam(sample_names: string[]): number {\n    let sum: number = 0;\n    for (let i = 0; i < sample_names.length; i++) {\n        if (sample_names[i].charAt(0) == sample_names[i].charAt(0).toUpperCase()) {\n            sum += sample_names[i].length;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sample_nam;\n  assert.deepEqual(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16);\n  assert.deepEqual(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10);\n  assert.deepEqual(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]),6);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
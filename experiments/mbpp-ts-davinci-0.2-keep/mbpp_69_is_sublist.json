{
  "name": "mbpp_69_is_sublist",
  "language": "ts",
  "prompt": "//Write a function to check whether a list contains the given sublist or not.\nfunction is_sublist(l: number[], s: number[]): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_sublist;\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [3, 7]),false);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [4, 3]),true);\n  assert.deepEqual(candidate([2, 4, 3, 5, 7], [1, 6]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    if (s.length > l.length) {\n        return false;\n    }\n    let i = 0;\n    let j = 0;\n    while (i < l.length && j < s.length) {\n        if (l[i] === s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n        i++;\n    }\n    return j === s.length;\n}\n",
    "    let sublist = false;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (let j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\n",
    "    let is_sublist: boolean = false;\n    for (let i: number = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            is_sublist = true;\n            for (let j: number = 1; j < s.length; j++) {\n                if (l[i + j] !== s[j]) {\n                    is_sublist = false;\n                    break;\n                }\n            }\n        }\n    }\n    return is_sublist;\n}\n",
    "    let sublist = true;\n    let j = 0;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[j]) {\n            j++;\n        } else {\n            j = 0;\n        }\n        if (j === s.length) {\n            break;\n        }\n    }\n    if (j < s.length) {\n        sublist = false;\n    }\n    return sublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [4, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));",
    "  let sublist = true;\n  let j = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === s[j]) {\n      j++;\n    } else {\n      j = 0;\n    }\n    if (j === s.length) {\n      return sublist;\n    }\n  }\n  return false;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13",
    "    let isSublist: boolean = false;\n    for (let i: number = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            isSublist = true;\n            for (let j: number = 1; j < s.length; j++) {\n                if (l[i + j] !== s[j]) {\n                    isSublist = false;\n                }\n            }\n        }\n    }\n    return isSublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6], [3, 4, 5]));\n",
    "    if (l.length < s.length) {\n        return false;\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            let j = 1;\n            while (j < s.length && l[i + j] === s[j]) {\n                j++;\n            }\n            if (j === s.length) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let isSublist: boolean = false;\n    for (let i: number = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            for (let j: number = 0; j < s.length; j++) {\n                if (l[i + j] === s[j]) {\n                    isSublist = true;\n                } else {\n                    isSublist = false;\n                    break;\n                }\n            }\n        }\n    }\n    return isSublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7],",
    "    let sublist = false;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            sublist = true;\n            for (let j = 0; j < s.length; j++) {\n                if (l[i + j] !== s[j]) {\n                    sublist = false;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_sublist([1, 2, 3, 4, 5, 6, 7], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(is_sublist([",
    "    let isSublist: boolean = false;\n    let sublistIndex: number = 0;\n    for (let i: number = 0; i < l.length; i++) {\n        if (l[i] === s[sublistIndex]) {\n            sublistIndex++;\n            if (sublistIndex === s.length) {\n                isSublist = true;\n                break;\n            }\n        } else {\n            sublistIndex = 0;\n        }\n    }\n    return isSublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n",
    "    if (l.length < s.length) {\n        return false;\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            let j = 0;\n            while (j < s.length && l[i + j] === s[j]) {\n                j++;\n            }\n            if (j === s.length) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let is_sublist: boolean = false;\n    for (let i: number = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            is_sublist = true;\n            for (let j: number = 1; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    is_sublist = false;\n                    break;\n                }\n            }\n            if (is_sublist) {\n                break;\n            }\n        }\n    }\n    return is_sublist;\n}\n",
    "    let sublist = false;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (let j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_sublist([1, 2, 3",
    "    if (l.length < s.length) {\n        return false;\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            let j = 0;\n            while (j < s.length && l[i + j] === s[j]) {\n                j++;\n            }\n            if (j === s.length) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let sublist = false;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            sublist = true;\n            for (let j = 1; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_sublist([1, 2, 3, 4, 5], [1, 2, 3,",
    "    let sublist = false;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            for (let j = 0; j < s.length; j++) {\n                if (l[i + j] !== s[j]) {\n                    sublist = false;\n                    break;\n                }\n                sublist = true;\n            }\n        }\n        if (sublist) {\n            break;\n        }\n    }\n    return sublist;\n}\n",
    "    if (l.length < s.length) {\n        return false;\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === s[0]) {\n            let j = 0;\n            while (j < s.length && l[i + j] === s[j]) {\n                j++;\n            }\n            if (j === s.length) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "    let sublist = true;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            for (let j = 0; j < s.length; j++) {\n                if (l[i + j] != s[j]) {\n                    sublist = false;\n                }\n            }\n        }\n    }\n    return sublist;\n}\n\nconsole.log(is_sublist([1, 1, 2, 3, 1], [1, 1, 2]));\nconsole.log(is_sublist([1, 1, 2, 3, 1], [1, 2, 3]));\nconsole.log(is_sublist([1, 2, 3], [1, 2, 3]));\nconsole.log(is_sublist([1, 2, 3], [2, 3]));\nconsole.log(is_sublist([1, 2, 3], [3]));\nconsole.log(is_sublist([1, 2, 3], [1, 2, 3, 4]));\nconsole.log(is_sublist([1, 2, 3], [1, 2, 1]));\nconsole.log(is_sublist([1, 2, 3], []));\nconsole.log(is_sublist([], [1, 2, 3]));\nconsole.log(is_sublist([], []));\n",
    "    if (l.length < s.length) {\n        return false;\n    }\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] == s[0]) {\n            let j = 0;\n            while (j < s.length && l[i + j] == s[j]) {\n                j++;\n            }\n            if (j == s.length) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n",
    "  let sublist = true;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === s[0]) {\n      for (let j = 0; j < s.length; j++) {\n        if (l[i + j] !== s[j]) {\n          sublist = false;\n          break;\n        }\n      }\n    }\n  }\n  return sublist;\n}\n\nconsole.log(is_sublist([1, 1, 2, 3, 1], [1, 1, 2]));\nconsole.log(is_sublist([1, 1, 2, 3, 1], [1, 2, 3]));\nconsole.log(is_sublist([1, 1, 2, 3, 1], [1, 2, 1]));\n"
  ]
}
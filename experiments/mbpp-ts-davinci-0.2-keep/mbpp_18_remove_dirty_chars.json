{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "ts",
  "prompt": "//Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars(string: string, second_string: string): string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_dirty_chars;\n  assert.deepEqual(candidate(\"probasscurve\", \"pros\"),\"bacuve\");\n  assert.deepEqual(candidate(\"digitalindia\", \"talent\"),\"digiidi\");\n  assert.deepEqual(candidate(\"exoticmiles\", \"toxic\"),\"emles\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou'));\n",
    "    let result: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\nconsole.log(remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\"));\n",
    "    let result: string = '';\n    for (let i: number = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou'));\n",
    "    let result = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars(\"geeksforgeeks\", \"mask\"));\n",
    "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars(\"geeksforgeeks\", \"mask\"));\n",
    "    let result: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n",
    "    let dirty_chars: string[] = second_string.split('');\n    let clean_string: string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (dirty_chars.indexOf(string[i]) === -1) {\n            clean_string += string[i];\n        }\n    }\n    return clean_string;\n}\n",
    "    let clean_string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            clean_string += string[i];\n        }\n    }\n    return clean_string;\n}\n\nconsole.log(remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou'));\n",
    "    let result: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars(\"geeksforgeeks\", \"mask\"));\n",
    "    let result: string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\nconsole.log(remove_dirty_chars('abcdef', 'ab'));\n",
    "    let result: string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\nconsole.log(remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou'));\n",
    "    let new_string = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            new_string += string[i];\n        }\n    }\n    return new_string;\n}\n",
    "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars('geeksforgeeks', 'mask'));\n",
    "    let result: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) == -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars(\"geeksforgeeks\", \"mask\"));\n",
    "    let result = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n",
    "    let result: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) == -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n",
    "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou'));\n",
    "    let result: string = \"\";\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) == -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_dirty_chars(\"geeksforgeeks\", \"mask\"));\n",
    "    let result = '';\n    for (let i = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            result += string[i];\n        }\n    }\n    return result;\n}\n",
    "    let clean_string: string = \"\";\n    for (let i: number = 0; i < string.length; i++) {\n        if (second_string.indexOf(string[i]) === -1) {\n            clean_string += string[i];\n        }\n    }\n    return clean_string;\n}\n"
  ]
}
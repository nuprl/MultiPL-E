{
  "name": "mbpp_472_check_Consecutive",
  "language": "ts",
  "prompt": "//Write a python function to check whether the given list contains consecutive numbers or not.\nfunction check_Consecutive(l: number[]): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let flag: boolean = true;\n    l.sort();\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])",
    "    var flag: boolean = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n        }\n    }\n    return flag;\n}\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 6, 7]));\n",
    "    let flag: boolean = true;\n    l.sort();\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,",
    "    var flag = 0;\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 == l[i + 1]) {\n            flag = 1;\n        }\n        else {\n            flag = 0;\n            break;\n        }\n    }\n    if (flag == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar res = check_Consecutive([1, 2, 3, 4, 5, 6, 7]);\nconsole.log(res);\n",
    "    l.sort();\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8]));\n",
    "    let flag: boolean = true;\n    l.sort();\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71",
    "    var flag: boolean = true;\n    var max: number = Math.max.apply(null, l);\n    var min: number = Math.min.apply(null, l);\n    if (max - min + 1 == l.length) {\n        for (var i = 0; i < l.length; i++) {\n            if (l.indexOf(min + i) == -1) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\n",
    "    let flag: boolean = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 6, 7]));\n",
    "    let flag: boolean = false;\n    let min: number = Math.min(...l);\n    let max: number = Math.max(...l);\n    let diff: number = max - min;\n    if (diff == l.length - 1) {\n        flag = true;\n    }\n    return flag;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    var flag = false;\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 == l[i + 1]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nvar list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(check_Consecutive(list));\n",
    "    var flag: boolean = true;\n    l.sort();\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var flag: boolean = true;\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    var flag: boolean = true;\n    l.sort();\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nvar l: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(check_Consecutive(l));\n",
    "    let flag: boolean = true;\n    l.sort();\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    var flag: boolean = true;\n    l.sort();\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i + 1] - l[i] != 1) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70",
    "    var flag: boolean = true;\n    l.sort();\n    for (var i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n        }\n    }\n    return flag;\n}\n",
    "    let flag: boolean = true;\n    l.sort();\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 != l[i + 1]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));\n",
    "    var flag: boolean = true;\n    var min: number = Math.min(...l);\n    var max: number = Math.max(...l);\n    var len: number = l.length;\n    if (max - min + 1 == len) {\n        for (var i = 0; i < len; i++) {\n            if (l[i] != min) {\n                flag = false;\n                break;\n            }\n            min++;\n        }\n    }\n    else {\n        flag = false;\n    }\n    return flag;\n}\nvar l1: number[] = [1, 2, 3, 4, 5];\nvar l2: number[] = [1, 2, 3, 4, 5, 6];\nvar l3: number[] = [1, 2, 3, 4, 6];\nconsole.log(check_Consecutive(l1));\nconsole.log(check_Consecutive(l2));\nconsole.log(check_Consecutive(l3));\n",
    "    let flag: boolean = false;\n    let min: number = Math.min(...l);\n    let max: number = Math.max(...l);\n    let len: number = l.length;\n    if (max - min + 1 == len) {\n        flag = true;\n    }\n    return flag;\n}\n",
    "    let flag = 0;\n    let min = Math.min(...l);\n    let max = Math.max(...l);\n    let len = l.length;\n    if (len == max - min + 1) {\n        flag = 1;\n    }\n    if (flag == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]));\nconsole.log(check_Consecutive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,"
  ]
}
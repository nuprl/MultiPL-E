{
  "name": "mbpp_802_count_rotation",
  "language": "ts",
  "prompt": "//Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_rotation;\n  assert.deepEqual(candidate([3, 2, 1]),1);\n  assert.deepEqual(candidate([4, 5, 1, 2, 3]),2);\n  assert.deepEqual(candidate([7, 8, 9, 1, 2, 3]),3);\n  assert.deepEqual(candidate([1, 2, 3]),0);\n  assert.deepEqual(candidate([1, 3, 2]),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count = i + 1;\n      break;\n    }\n  }\n  return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    let min = arr[0];\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > arr[i + 1]) {\n      count++;\n    }\n  }\n  return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    let min = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            count = i;\n        }\n    }\n    return count;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let count = 0;\n    let n = arr.length;\n    for (let i = 0; i < n - 1; i++) {\n        if (arr[i] > arr[i + 1]) {\n            count = i + 1;\n            break;\n        }\n    }\n    return count;\n}\n",
    "    let min = arr[0];\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n",
    "    let n = arr.length;\n    let min = arr[0];\n    let min_index = -1;\n    for (let i = 0; i < n; i++) {\n        if (min > arr[i]) {\n            min = arr[i];\n            min_index = i;\n        }\n    }\n    return min_index;\n}\n"
  ]
}
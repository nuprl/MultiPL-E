{
  "name": "mbpp_65_recursive_list_sum",
  "language": "ts",
  "prompt": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum(data));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpmha625ae.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpmha625ae.ts(14,32): error TS2304: Cannot find name 'data'.\n../../../../tmp/tmpmha625ae.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmha625ae.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmha625ae.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assi",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpxdesbsel.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxdesbsel.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxdesbsel.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpxdesbsel.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpim5sw1gb.ts(7,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpim5sw1gb.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpim5sw1gb.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpim5sw1gb.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmppvxngl0v.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppvxngl0v.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppvxngl0v.ts(14,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp1z1fsmuo.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1z1fsmuo.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpugfexp20.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpugfexp20.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6], [7, 8, 9]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp204_5lyp.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp204_5lyp.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp204_5lyp.ts(15,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp204_5lyp.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, [2, [3, 4], [[5]]]]));\nconsole.log(recursive_list_sum([[[3]], 2, [1, 4]]));\nconsole.log(recursive_list_sum([-5, [2, [-11], [[3]]], 8]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp8ku7_uej.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8ku7_uej.ts(13,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8ku7_uej.ts(14,32): error TS2345: Argument of type '(number | (number | number[] | number[][])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[] | number[][])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[] | number[][])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8ku7_uej.ts(15,32): error TS2345: Argument of type '(number | ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp4ews6jz2.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp4ews6jz2.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4ews6jz2.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4ews6jz2.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, 9]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpwfyo9mnb.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwfyo9mnb.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwfyo9mnb.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpwfyo9mnb.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpwfyo9mnb.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp7lkg7g4s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpxdesbsel.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxdesbsel.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxdesbsel.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpxdesbsel.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpv6wc7em0.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpv6wc7em0.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpv6wc7em0.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpv6wc7em0.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4]], 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp3ipal0j3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3ipal0j3.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3ipal0j3.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3ipal0",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpneq41mq3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpneq41mq3.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpneq41mq3.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpneq41mq3.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpukirkazk.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpukirkazk.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpukirkazk.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpukirkazk.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpukirkazk.ts(24,30): error TS23",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\nconsole.log(recursive_list_sum([[[[[1], 2], 3], 4], 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpi08s6wzd.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi08s6wzd.ts(13,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpi08s6wzd.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp_hdnq6vh.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp_hdnq6vh.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_hdnq6vh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp_hdnq6vh.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\nconsole.log(recursive_list_sum([[[[[1], 2], 3], 4], 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp4whn8flb.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4whn8flb.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4whn8flb.ts(15,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpsysvug2c.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsysvug2c.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsysvug2c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpsysvug2c.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp3tyj7c02.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3tyj7c02.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3tyj7c02.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3tyj7c",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => {\n            return acc + recursive_list_sum(curr);\n        }, 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpjsodsdko.ts(7,45): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjsodsdko.ts(12,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjsodsdko.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjsodsd",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8, [9, 10]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpuqk3cvwx.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuqk3cvwx.ts(10,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuqk3cvwx.ts(11,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to typ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]));\nconsole.log(recursive_list_sum([[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmplq1_xjbe.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmplq1_xjbe.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmplq1_xjbe.ts(16,32): error TS2345: Argument of type 'number[][][]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[][][]' is not assignable to type 'number[][]'.\n    Type 'number[][]' is not assignable to type 'number[]'.\n      Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmplq1_xjbe.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((accumulator, currentValue) => accumulator + recursive_list_sum(currentValue), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, 7]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, 8]]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, [6, [7, [8, 9]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmps88f31ae.ts(4,97): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps88f31ae.ts(10,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps88f31ae.ts(11,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmps88f31",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (item) {\n            sum += recursive_list_sum(item);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpu5l9s7ly.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu5l9s7ly.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu5l9s7ly.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu5l9s7ly.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu5l9s7ly.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpsoz3yiwb.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsoz3yiwb.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsoz3yiwb.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsoz3yi",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpucv9t97c.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpucv9t97c.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpucv9t97c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpucv9t97c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpinain2t8.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinain2t8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpozs0h3ev.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpozs0h3ev.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpozs0h3ev.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpozs0h3ev.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp5u5ccjux.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5u5ccjux.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5u5ccjux.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp5u5ccjux.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpjkpnjj3e.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjkpnjj3e.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjkpnjj3e.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjkpnjj3e.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpjkpnjj3e.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpp0h4pl86.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpp0h4pl86.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpqnrpnrzj.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqnrpnrzj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqnrpnrzj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpqnrpnr",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet data_list: number| number[][] = [1, 2, [3, 4, [5, 6], 7], 8];\nconsole.log(recursive_list_sum(data_list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpun5dc8aa.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpun5dc8aa.ts(14,5): error TS2322: Type '(number | (number | number[])[])[]' is not assignable to type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpun5dc8aa.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpun5dc8aa.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpun5dc8aa.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp1z1fsmuo.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1z1fsmuo.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp44qb7j83.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp44qb7j83.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp44qb7j83.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp44qb7j83.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        sum += data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp16l4z4ro.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp16l4z4ro.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp16l4z4ro.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp16l4z4ro.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((sum, item) => sum + recursive_list_sum(item), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpe4vnppxx.ts(7,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpe4vnppxx.ts(11,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpe4vnppxx.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpe4vnppxx.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpe4vnppxx.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpetjeprua.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpetjeprua.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpetjeprua.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpetjeprua.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpetjeprua.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp8rslh31y.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8rslh31y.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp8rslh31y.ts(15,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n     ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp36a882gv.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp36a882gv.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp36a882gv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp36a882gv.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpoeni3u_t.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoeni3u_t.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpoeni3u_t.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpoeni3u_t.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet data_list: number[] = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconsole.log(recursive_list_sum(data_list));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpu3yzj8tf.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu3yzj8tf.ts(14,34): error TS2322: Type '(number | number[])[]' is not assignable to type 'number'.\n../../../../tmp/tmpu3yzj8tf.ts(14,56): error TS2322: Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmpu3yzj8tf.ts(15,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu3yzj8tf.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'num",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp1z1fsmuo.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1z1fsmuo.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        data_list.forEach(function (element) {\n            sum += recursive_list_sum(element);\n        });\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpxajl7c_4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxajl7c_4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxajl7c_4.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpxajl7c_4.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpmjrx89ur.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmjrx89ur.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmjrx89ur.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmjrx89ur.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmjrx89ur.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8, [9, 10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp5nh_w_67.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5nh_w_67.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5nh_w_67.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5nh_w_67.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp5nh_w_67.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp36a882gv.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp36a882gv.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp36a882gv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp36a882gv.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpsobm4v_8.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsobm4v_8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsobm4v_8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpsobm4v_8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp63y_qyvb.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp63y_qyvb.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp63y_qyvb.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp63y_qyvb.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmpjy54o5tx.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpjy54o5tx.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjy54o5tx.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpjy54o5tx.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpjy54o5tx.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmpurlzmud2.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpurlzmud2.ts(13,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpurlzmud2.ts(14,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpurlzmud2.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpurlzmud2.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpurlzmud2.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] == \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpbl967s1j.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpbl967s1j.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpbl967s1j.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpbl967s1j.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmp_5kmse27.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_5kmse27.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_5kmse27.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp_5kmse27.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp0o597mou.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0o597mou.ts(13,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0o597mou.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0o597mou.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp0o597mou.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp0o597mou.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpg9wue9kg.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpg9wue9kg.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpg9wue9kg.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpg9wue9",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp96fss9xh.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp96fss9xh.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp96fss9xh.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp96fss9xh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpp0h4pl86.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpp0h4pl86.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpugfexp20.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpugfexp20.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, 5]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmppnlcjo_v.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppnlcjo_v.ts(13,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppnlcjo_v.ts(14,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppnlcjo_v.ts(22,30): error TS2345: Argument of type '(number | ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpmuhho3j4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmuhho3j4.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmpr4uyxb6v.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr4uyxb6v.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr4uyxb6v.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr4uyxb6v.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4]], 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmpncqz00f7.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpncqz00f7.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpncqz00f7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpncqz00f7.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpncqz00f7.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet test_list: number[] = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconsole.log(recursive_list_sum(test_list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmpb_7zrq_0.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpb_7zrq_0.ts(14,34): error TS2322: Type '(number | number[])[]' is not assignable to type 'number'.\n../../../../tmp/tmpb_7zrq_0.ts(14,56): error TS2322: Type 'number[]' is not assignable to type 'number'.\n../../../../tmp/tmpb_7zrq_0.ts(15,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpb_7zrq_0.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpb_7zrq_0.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpb_7zrq_0.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpp0h4pl86.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpp0h4pl86.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123385,
      "stdout": "../../../../tmp/tmpok4tx6ne.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpok4tx6ne.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpok4tx6ne.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpok4tx6ne.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum(data_list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmp3xoyw0op.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3xoyw0op.ts(13,32): error TS2304: Cannot find name 'data_list'.\n../../../../tmp/tmp3xoyw0op.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3xoyw0op.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp3xoyw0op.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, [4, [5, [6, [7, [8, [9, [10]]]]]]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmp0z6i0b67.ts(7,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0z6i0b67.ts(11,32): error TS2345: Argument of type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | (number | (number | (number | (number | (number | number[])[])[])[])[])[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0z6i0b67.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not ass",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\nconsole.log(recursive_list_sum([[[[[1], 2]], 3], 4, [5]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmp0h81ro4v.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp0h81ro4v.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0h81ro4v.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0h81ro4v.ts(16,32): error TS2345: Argument of type '(number | (number | (number | number[])[][])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (numb",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpneq41mq3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpneq41mq3.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpneq41mq3.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpneq41mq3.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmpouih_u01.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpouih_u01.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpouih_u01.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpouih_u",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmp96fss9xh.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp96fss9xh.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp96fss9xh.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp96fss9xh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmpdjzkixdf.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpdjzkixdf.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpdjzkixdf.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpdjzkixdf.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpdjzkixdf.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n    return data_list;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmppawc9asy.ts(4,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppawc9asy.ts(15,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmppawc9asy.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmppawc9asy.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp7lkg7g4s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpugfexp20.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpugfexp20.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpmuhho3j4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmuhho3j4.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmpo2irl_z8.ts(6,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpo2irl_z8.ts(10,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpo2irl_z8.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpo2irl_z8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpp0h4pl86.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpp0h4pl86.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpp0h4pl86.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmp07r5skhn.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp07r5skhn.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp07r5skhn.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp07r5skhn.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp07r5skhn.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp_hdnq6vh.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp_hdnq6vh.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_hdnq6vh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp_hdnq6vh.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmp680xwg34.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp680xwg34.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp680xwg34.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp680xwg34.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpetjeprua.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpetjeprua.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpetjeprua.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpetjeprua.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpetjeprua.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmp58afy9xx.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp58afy9xx.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp58afy9xx.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp58afy9xx.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i: number = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmprl90jqiv.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprl90jqiv.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprl90jqiv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmprl90jq",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpinain2t8.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinain2t8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpinzu53vl.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinzu53vl.ts(10,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinzu53vl.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinzu53vl.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinzu53vl.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpebwmx3wm.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpebwmx3wm.ts(13,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpebwmx3wm.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpebwmx3wm.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpmuhho3j4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmuhho3j4.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpxdesbsel.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxdesbsel.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxdesbsel.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpxdesbsel.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, val) => acc + recursive_list_sum(val), 0);\n    } else {\n        return data_list;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5], 6, [7, 8, [9, 10]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpniwmzsbq.ts(4,72): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpniwmzsbq.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpniwmzsbq.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpniwmzs",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpinain2t8.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinain2t8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpzh_k62ob.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzh_k62ob.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzh_k62ob.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzh_k62ob.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to param",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpnkpl59x0.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnkpl59x0.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnkpl59x0.ts(14,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnkpl59x0.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnkpl59x0.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpnkpl59x0.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmp7m0wxb4c.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7m0wxb4c.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7m0wxb4c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7m0wxb",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpukirkazk.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpukirkazk.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpukirkazk.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpukirkazk.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpukirkazk.ts(24,30): error TS23",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp7lkg7g4s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpd17659ka.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd17659ka.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd17659ka.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpd17659ka.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpd17659ka.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp7lkg7g4s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpkgtf9vf7.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpkgtf9vf7.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpkgtf9vf7.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpkgtf9vf7.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpinain2t8.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinain2t8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpgwbfqbse.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpgwbfqbse.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgwbfqbse.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpgwbfqbse.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmp7ri8xet9.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7ri8xet9.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7ri8xet9.ts(15,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, [4, 5, 6, [7, 8, 9]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpxutj65zr.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxutj65zr.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxutj65zr.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpxutj65",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp1z1fsmuo.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1z1fsmuo.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpinain2t8.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinain2t8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    } else {\n        return data_list;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmptr66vsba.ts(4,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmptr66vsba.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmptr66vsba.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmptr66vsba.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmpm8hdf4oa.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm8hdf4oa.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm8hdf4oa.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpm8hdf4oa.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmpmvtreaf0.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmvtreaf0.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmvtreaf0.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmvtreaf0.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmpinain2t8.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpinain2t8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpinain2t8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i: number = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmpes0m69c5.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpes0m69c5.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpes0m69c5.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpes0m69c5.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp7tgr2doq.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7tgr2doq.ts(13,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7tgr2doq.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7tgr2d",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp1z1fsmuo.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp1z1fsmuo.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp1z1fsmuo.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp7lkg7g4s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if(Array.isArray(data_list)){\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    else{\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmpt5hofo17.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpt5hofo17.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpt5hofo17.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpt5hofo17.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp_hdnq6vh.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp_hdnq6vh.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp_hdnq6vh.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp_hdnq6vh.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmp92sjby_d.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp92sjby_d.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp92sjby_d.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp92sjby_d.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmp0hs7phc4.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0hs7phc4.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0hs7phc4.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp0hs7phc4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmpmvtreaf0.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmvtreaf0.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmvtreaf0.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmvtreaf0.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp9jsdd9xr.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9jsdd9xr.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9jsdd9xr.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9jsdd9",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5]));\nconsole.log(recursive_list_sum([1, [2, [3, [4, 5]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpsh3wv4ro.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsh3wv4ro.ts(13,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsh3wv4ro.ts(14,32): error TS2345: Argument of type '(number | (number | (number | number[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | number[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | number[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpsh3wv4ro.ts(22,30): error TS2345: Argument of type '(number | ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp5u5ccjux.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5u5ccjux.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5u5ccjux.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp5u5ccjux.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if(typeof data_list === 'number'){\n        return data_list;\n    }\n    else{\n        let sum = 0;\n        for(let i = 0; i < data_list.length; i++){\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3,4],[5,6]]));\nconsole.log(recursive_list_sum([[[3,4],8],10,[[13]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpcs8dtmuw.ts(9,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpcs8dtmuw.ts(15,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpcs8dtmuw.ts(16,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpcs8dtmuw.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpcs8dtmuw.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpcs8dtmuw.ts(26,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp7lkg7g4s.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g4s.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7lkg7g",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpu10wnwmx.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu10wnwmx.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu10wnwmx.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu10wnwmx.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (Array.isArray(data_list)) {\n        return data_list.reduce((sum, item) => sum + recursive_list_sum(item), 0);\n    } else {\n        return data_list;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpuu1zyph5.ts(4,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuu1zyph5.ts(16,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuu1zyph5.ts(17,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpuu1zyph5.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp5bhzle6l.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp5bhzle6l.ts(14,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5bhzle6l.ts(15,32): error TS2345: Argument of type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | (number | (number | number[])[])[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | (number | (number | number[])[])[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5bhzle6l.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5bhzle6l.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp5bhzle6l.ts(25,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpvlq9zi0q.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpvlq9zi0q.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpvlq9zi0q.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpvlq9zi0q.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpugfexp20.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpugfexp20.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpugfexp20.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp4lj4rgex.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4lj4rgex.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4lj4rgex.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4lj4rg",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpr2vwk1ix.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpr2vwk1ix.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpr2vwk1ix.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp4ssrzsnq.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4ssrzsnq.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4ssrzsnq.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp4ssrzs",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123384,
      "stdout": "../../../../tmp/tmpmuhho3j4.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuhho3j4.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmuhho3j4.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmpu9fz5_a8.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpu9fz5_a8.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpu9fz5_a8.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpm7ty31_c.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm7ty31_c.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpm7ty31_c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpm7ty31_c.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123389,
      "stdout": "../../../../tmp/tmpouih_u01.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpouih_u01.ts(13,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpouih_u01.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpouih_u",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4]], 5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp3ipal0j3.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3ipal0j3.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3ipal0j3.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3ipal0",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (Array.isArray(data_list[i])) {\n            sum += recursive_list_sum(data_list[i]);\n        } else {\n            sum += data_list[i];\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpnussckew.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpnussckew.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnussckew.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpnussckew.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpnussckew.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === 'number') {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmpgwbfqbse.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmpgwbfqbse.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpgwbfqbse.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpgwbfqbse.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (data_list instanceof Array) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123394,
      "stdout": "../../../../tmp/tmp92sjby_d.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp92sjby_d.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp92sjby_d.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp92sjby_d.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpmuen8xuv.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuen8xuv.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpmuen8xuv.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpmuen8xuv.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1665510493,
      "stdout": "../../../../tmp/tmp5n91u1xj.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1xj.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp5n91u1",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, [2, [3, 4], 5], 6]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123379,
      "stdout": "../../../../tmp/tmp3tyj7c02.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3tyj7c02.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3tyj7c02.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp3tyj7c",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === 'number') {\n        return data_list;\n    } else {\n        return data_list.reduce((acc, curr) => acc + recursive_list_sum(curr), 0);\n    }\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmptpurv7rv.ts(6,73): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmptpurv7rv.ts(10,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmptpurv7rv.ts(18,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmptpurv7",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    if (typeof data_list === \"number\") {\n        return data_list;\n    } else {\n        let sum = 0;\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n        return sum;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmpuw_nukz5.ts(8,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuw_nukz5.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpuw_nukz5.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpuw_nukz5.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    for (let i = 0; i < data_list.length; i++) {\n        if (typeof data_list[i] === \"number\") {\n            sum += data_list[i];\n        } else {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6]]));\nconsole.log(recursive_list_sum([1, 2, [3, 4], [5, 6, [7, 8]]]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp0jof4oqw.ts(4,35): error TS2339: Property 'length' does not exist on type 'number | number[][]'.\n  Property 'length' does not exist on type 'number'.\n../../../../tmp/tmp0jof4oqw.ts(14,32): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0jof4oqw.ts(15,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp0jof4oqw.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nlet data_list: number[] = [1, 2, [3, 4, [5, 6], 7], 8];\nconsole.log(recursive_list_sum(data_list));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123395,
      "stdout": "../../../../tmp/tmp9ienf2m6.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9ienf2m6.ts(14,34): error TS2322: Type '(number | number[])[]' is not assignable to type 'number'.\n../../../../tmp/tmp9ienf2m6.ts(15,32): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmp9ienf2m6.ts(23,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp9ienf2m6.ts(24,30): error TS2345: Argument of type '(number | number[])[]' is ",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (typeof data_list === 'number') {\n        return data_list;\n    }\n    for (let i = 0; i < data_list.length; i++) {\n        sum += recursive_list_sum(data_list[i]);\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123396,
      "stdout": "../../../../tmp/tmpzlq7o4lf.ts(8,35): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzlq7o4lf.ts(19,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmpzlq7o4lf.ts(20,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n../../../../tmp/tmpzlq7o4lf.ts(21,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to flatten a list and sum all of its elements.\nfunction recursive_list_sum(data_list: number| number[][]): number {\n    let sum: number = 0;\n    if (Array.isArray(data_list)) {\n        for (let i = 0; i < data_list.length; i++) {\n            sum += recursive_list_sum(data_list[i]);\n        }\n    } else {\n        sum += data_list;\n    }\n    return sum;\n}\n\nconsole.log(recursive_list_sum([1, 2, [3, 4, [5, 6], 7], 8]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = recursive_list_sum;\n  assert.deepEqual(candidate([1, 2, [3, 4], [5, 6]]),21);\n  assert.deepEqual(candidate([7, 10, [15, 14], [19, 41]]),106);\n  assert.deepEqual(candidate([10, 20, [30, 40], [50, 60]]),210);\n}\n\ntest();",
      "timestamp": 1666123390,
      "stdout": "../../../../tmp/tmp7m0wxb4c.ts(6,39): error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'number | number[][]'.\n  Type 'number[]' is not assignable to type 'number[][]'.\n    Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7m0wxb4c.ts(14,32): error TS2345: Argument of type '(number | (number | number[])[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | (number | number[])[])[]' is not assignable to type 'number[][]'.\n    Type 'number | (number | number[])[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7m0wxb4c.ts(22,30): error TS2345: Argument of type '(number | number[])[]' is not assignable to parameter of type 'number | number[][]'.\n  Type '(number | number[])[]' is not assignable to type 'number[][]'.\n    Type 'number | number[]' is not assignable to type 'number[]'.\n      Type 'number' is not assignable to type 'number[]'.\n../../../../tmp/tmp7m0wxb",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_626_triangle_area",
  "language": "ts",
  "prompt": "//Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\nfunction triangle_area(r: number): number | undefined {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(-1),undefined);\n  assert.deepEqual(candidate(0),0);\n  assert.deepEqual(candidate(2),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    if (r < 0) {\n        return undefined;\n    }\n    return (r * r * Math.sqrt(3)) / 4;\n}\n",
    "    let s = r * 2;\n    let area = (Math.sqrt(3) / 4) * (s * s);\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let area: number | undefined;\n    let s: number;\n    let a: number;\n    let b: number;\n    let c: number;\n    if (r > 0) {\n        s = r * 2;\n        a = s / 2;\n        b = s / 2;\n        c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        area = (a * b * c) / 2;\n    }\n    return area;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(0));\nconsole.log(triangle_area(-1));\n",
    "    const s = (3 * r) / 2;\n    const area = (Math.sqrt(3) / 4) * s * s;\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    // Write your code here\n    let s = (r * 2) / 2;\n    let area = (Math.sqrt(s * ((s - r) * (s - r) * (s - r))));\n    return area;\n}\n",
    "    let area: number | undefined;\n    if (r > 0) {\n        area = (Math.sqrt(3) / 4) * r * r;\n    }\n    return area;\n}\nconsole.log(triangle_area(5));\n",
    "    if (r <= 0) {\n        return undefined;\n    }\n    return (Math.sqrt(3) * r * r) / 4;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(0));\nconsole.log(triangle_area(-5));\n",
    "    let s = r * 2;\n    let area = (Math.sqrt(3) / 4) * (s * s);\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let s: number = (2 * r) / 2;\n    let area: number = Math.sqrt(s * (s - r) * (s - r) * (s - r));\n    return area;\n}\nconsole.log(triangle_area(5));\n",
    "    let s = (3 * r) / 2;\n    let area = (Math.sqrt(3) / 4) * s * s;\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    if (r < 0) {\n        return undefined;\n    }\n    return (Math.sqrt(3) / 4) * r * r;\n}\n",
    "    let s: number = r * 2;\n    let area: number = (Math.sqrt(3) / 4) * (s * s);\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let s: number = (2 * r) / 2;\n    let area: number = Math.sqrt(s * (s - r) * (s - r) * (s - r));\n    return area;\n}\nconsole.log(triangle_area(5));\n",
    "    let area: number | undefined;\n    if (r > 0) {\n        area = (Math.sqrt(3) / 4) * (r ** 2);\n    }\n    return area;\n}\n\nconsole.log(triangle_area(5));\nconsole.log(triangle_area(0));\n",
    "    let s: number = (2 * r) / 2;\n    let area: number = Math.sqrt(s * (s - r) * (s - r) * (s - r));\n    return area;\n}\nconsole.log(triangle_area(5));\n",
    "    let s = (2 * r) / 2;\n    let area = Math.sqrt(s * (s - r) * (s - r) * (s - r));\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let s = r * 2;\n    let area = (Math.sqrt(3) / 4) * (s * s);\n    return area;\n}\nconsole.log(triangle_area(5));\n",
    "    let s = r * 2;\n    let area = (Math.sqrt(3) / 4) * s * s;\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let area: number | undefined;\n    if (r > 0) {\n        area = (r * r * Math.sqrt(3)) / 4;\n    }\n    return area;\n}\n\nconsole.log(triangle_area(5));\n",
    "    let s = r * 2;\n    let area = (Math.sqrt(3) / 4) * (s * s);\n    return area;\n}\nconsole.log(triangle_area(5));\n"
  ]
}
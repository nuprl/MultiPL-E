{
  "name": "mbpp_279_is_num_decagonal",
  "language": "ts",
  "prompt": "//Write a function to find the nth decagonal number.\nfunction is_num_decagonal(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_num_decagonal;\n  assert.deepEqual(candidate(3),27);\n  assert.deepEqual(candidate(7),175);\n  assert.deepEqual(candidate(10),370);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let num: number = 0;\n    for (let i: number = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    if (n < 0) {\n        return -1;\n    }\n    else {\n        return n * (3 * n - 2);\n    }\n}\n",
    "    let decagonal: number = 0;\n    let i: number = 1;\n    while (decagonal < n) {\n        decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return decagonal;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n",
    "    return (3 * n * n - n) / 2;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\n",
    "    return n * (3 * n - 2);\n}\n",
    "  if (n < 0) {\n    return 0;\n  } else {\n    return n * (3 * n - 2);\n  }\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 0; i < n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    let i = 1;\n    let num = 0;\n    while (i <= n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n",
    "    let num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(33));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let decagonal: number = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n        if (decagonal == n) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
    "    let num: number = 0;\n    let i: number = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    } else {\n        return -1;\n    }\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2 % 1 === 0;\n}\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\nconsole.log(is_num_decagonal(110));\nconsole.log(is_num_decagonal(120));\nconsole.log(is_num_decagonal(130));\nconsole.log(is_num_decagonal(140));\nconsole.log(is_num_decagonal(150));\nconsole.log(is_num_decagonal(160));\nconsole.log(is_num_decagonal(170));\nconsole.log(is_num_decagonal(180));\nconsole.log(is_num_decagonal(190));\nconsole.log(is_num_decagonal(200));\nconsole.log(is_num_decagonal(210));\nconsole.log(is_num_decagonal(220));\nconsole.log(is_num_decagonal(230));\nconsole.log(is_num_decagonal(240));\nconsole.log(is_num_decagonal(250));\nconsole.log(is_num_decagonal(260));\nconsole.log(is_num_decagonal(270));\nconsole.log(is_num_decagonal(280));\nconsole.log(is_num_decagonal(290));\nconsole.log(is_num_decagonal(300));\nconsole.log(is_num_decagonal(310));\nconsole.log(is_num_decagonal(320));\nconsole.log(is_num_decagonal(330));\nconsole.log(is_num_decagonal(340));\nconsole.log(is_num_decagonal(",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        num += 10 * i;\n    }\n    return num;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    let decagonal = 0;\n    let i = 1;\n    while (decagonal < n) {\n        decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (decagonal == n) {\n        return decagonal;\n    } else {\n        return 0;\n    }\n}\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) + 1) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num: number = 0;\n    let count: number = 0;\n    while (count < n) {\n        num++;\n        if (is_decagonal(num)) {\n            count++;\n        }\n    }\n    return num;\n}\n",
    "    if (n < 0) {\n        return -1;\n    }\n    return Math.floor(n * (3 * n - 2) / 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let result = 0;\n    let i = 1;\n    while (result < n) {\n        result = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return result;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    }\n    return -1;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\n",
    "    let num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "  let decagonal = 0;\n  let i = 1;\n  while (decagonal < n) {\n    decagonal = i * (3 * i - 1) / 2;\n    i++;\n  }\n  if (decagonal === n) {\n    return decagonal;\n  } else {\n    return -1;\n  }\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += (i * 10) - 9;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        num += (i * 10) - 9;\n    }\n    return num;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\nconsole.log(is_num_decagonal(110));\nconsole.log(is_num_decagonal(120));\nconsole.log(is_num_decagonal(130));\nconsole.log(is_num_decagonal(140));\nconsole.log(is_num_decagonal(150));\nconsole.log(is_num_decagonal(160));\nconsole.log(is_num_decagonal(170));\nconsole.log(is_num_decagonal(180));\nconsole.log(is_num_decagonal(190));\nconsole.log(is_num_decagonal(200));\nconsole.log(is_num_decagonal(210));\nconsole.log(is_num_decagonal(220));\nconsole.log(is_num_decagonal(230));\nconsole.log(is_num_decagonal(240));\nconsole.log(is_num_decagonal(250));\nconsole.log(is_num_decagonal(260));\nconsole.log(is_num_decagonal(270));\nconsole.log(is_num_decagonal(280));\nconsole.log(is_num_decagonal(290));\nconsole.log(is_num_decagonal(300));\nconsole.log(is_num_decagonal(310));\nconsole.log(is_num_decagonal(320));\nconsole.log(is_num_decagonal(330));\nconsole.log(is_num_decagonal(340));\nconsole.log(is_num_decagonal(",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    let nth_decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        nth_decagonal = i * (3 * i - 2);\n    }\n    return nth_decagonal;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    }\n    return 0;\n}\n",
    "    if (n < 1) {\n        return 0;\n    }\n    return n * (3 * n - 2);\n}\n",
    "    let decagonal_num = 0;\n    let i = 1;\n    while (decagonal_num < n) {\n        decagonal_num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return decagonal_num;\n}\n",
    "    let num = 0;\n    for (let i = 0; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return (3 * n * n - n) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n\nconsole.log(is_num_decagonal(4));\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(3));\n",
    "    return (3 * n * n - n) / 2;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(3));\nconsole.log(is_num_decagonal(5));\n",
    "    let result = 0;\n    let i = 1;\n    while (result < n) {\n        result = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return result;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    let num: number = 0;\n    let i: number = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(16));\nconsole.log(is_num_decagonal(26));\nconsole.log(is_num_decagonal(41));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += 10 * i;\n    }\n    return num;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    if (n === 1) {\n        return 1;\n    }\n    return 10 * (n - 1) + is_num_decagonal(n - 1);\n}\n\nconsole.log(is_num_decagonal(5));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        let num = i * (3 * i - 1) / 2;\n        if (num % 10 == 0) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\nconsole.log(is_num_decagonal(110));\nconsole.log(is_num_decagonal(120));\nconsole.log(is_num_decagonal(130));\nconsole.log(is_num_decagonal(140));\nconsole.log(is_num_decagonal(150));\nconsole.log(is_num_decagonal(160));\nconsole.log(is_num_decagonal(170));\nconsole.log(is_num_decagonal(180));\nconsole.log(is_num_decagonal(190));\nconsole.log(is_num_decagonal(200));\nconsole.log(is_num_decagonal(210));\nconsole.log(is_num_decagonal(220));\nconsole.log(is_num_decagonal(230));\nconsole.log(is_num_decagonal(240));\nconsole.log(is_num_decagonal(250));\nconsole.log(is_num_decagonal(260));\nconsole.log(is_num_decagonal(270));\nconsole.log(is_num_decagonal(280));\nconsole.log(is_num_decagonal(290));\nconsole.log(is_num_decagonal(300));\nconsole.log(is_num_decagonal(310));\nconsole.log(is_num_decagonal(320));\nconsole.log(is_num_decagonal(330));\nconsole.log(is_num_decagonal(340));\nconsole.log(is_num_decagonal(",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let decagonal = 0;\n    let i = 1;\n    while (decagonal < n) {\n        decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return decagonal;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\n",
    "    return (Math.sqrt(4 * Math.pow(n, 2) + 4 * n + 1) + 1) / 2 % 1 === 0;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    }\n    return 0;\n}\nconsole.log(is_num_decagonal(1));\nconsole.log(is_num_decagonal(2));\nconsole.log(is_num_decagonal(3));\nconsole.log(is_num_decagonal(4));\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\nconsole.log(is_num_decagonal(8));\nconsole.log(is_num_decagonal(9));\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(11));\nconsole.log(is_num_decagonal(12));\nconsole.log(is_num_decagonal(13));\nconsole.log(is_num_decagonal(14));\nconsole.log(is_num_decagonal(15));\nconsole.log(is_num_decagonal(16));\nconsole.log(is_num_decagonal(17));\nconsole.log(is_num_decagonal(18));\nconsole.log(is_num_decagonal(19));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(21));\nconsole.log(is_num_decagonal(22));\nconsole.log(is_num_decagonal(23));\nconsole.log(is_num_decagonal(24));\nconsole.log(is_num_decagonal(25));\nconsole.log(is_num_decagonal(26));\nconsole.log(is_num_decagonal(27));\nconsole.log(is_num_decagonal(28));\nconsole.log(is_num_decagonal(29));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(31));\nconsole.log(is_num",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let decagonal: number = 0;\n    let i: number = 1;\n    while (decagonal < n) {\n        decagonal = (i * (3 * i - 1)) / 2;\n        i++;\n    }\n    return decagonal;\n}\n",
    "  let num = 0;\n  for (let i = 1; i <= n; i++) {\n    num = i * (3 * i - 1) / 2;\n  }\n  return num;\n}\n\nconsole.log(is_num_decagonal(4));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2 % 1 === 0;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2 % 1 === 0;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (i <= n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(6));\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    }\n    return -1;\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(6));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let i = 1;\n    let num = 0;\n    while (i <= n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(3));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    if (n < 0) {\n        return -1;\n    }\n    return (3 * n * n - n) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += 10 * i;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    }\n    return -1;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    if (n < 0) {\n        return -1;\n    }\n    return (n * (3 * n - 2)) / 2;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += (i * 10) - 9;\n    }\n    return num;\n}\n",
    "  let i: number = 0;\n  let j: number = 1;\n  while (i < n) {\n    j++;\n    if (is_num_pentagonal(j) && is_num_triangular(j)) {\n      i++;\n    }\n  }\n  return j;\n}\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += (i * 10 - 9);\n    }\n    return num;\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(3));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num += 10 * i - 9;\n    }\n    return num;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n",
    "    let num: number = 0;\n    for (let i = 1; i <= n; i++) {\n        num += (i * 10) - 9;\n    }\n    return num;\n}\n",
    "    let decagonal: number = 0;\n    let i: number = 0;\n    while (decagonal < n) {\n        i++;\n        decagonal = i * (3 * i - 2);\n    }\n    if (decagonal == n) {\n        return i;\n    } else {\n        return 0;\n    }\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(5));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let decagonal: number = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return (3 * n * n - n) / 2;\n}\nconsole.log(is_num_decagonal(6));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    let i = 0;\n    while (num < n) {\n        i++;\n        num = i * (3 * i - 1) / 2;\n    }\n    if (num == n) {\n        return i;\n    } else {\n        return 0;\n    }\n}\nconsole.log(is_num_decagonal(40755));\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return n * (3 * n - 2);\n}\n\nconsole.log(is_num_decagonal(5));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    let decagonal = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal = i * (3 * i - 1) / 2;\n    }\n    return decagonal;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    } else {\n        return 0;\n    }\n}\n",
    "    let decagonal = 0;\n    let i = 1;\n    while (decagonal < n) {\n        decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (decagonal === n) {\n        return decagonal;\n    }\n    return -1;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(1));\nconsole.log(is_num_decagonal(2));\nconsole.log(is_num_decagonal(3));\nconsole.log(is_num_decagonal(4));\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\nconsole.log(is_num_decagonal(8));\nconsole.log(is_num_decagonal(9));\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(11));\nconsole.log(is_num_decagonal(12));\nconsole.log(is_num_decagonal(13));\nconsole.log(is_num_decagonal(14));\nconsole.log(is_num_decagonal(15));\nconsole.log(is_num_decagonal(16));\nconsole.log(is_num_decagonal(17));\nconsole.log(is_num_decagonal(18));\nconsole.log(is_num_decagonal(19));\nconsole.log(is_num_decagonal(20));",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    if (n < 1) {\n        return 0;\n    }\n    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n",
    "    let i: number = 0;\n    let num: number = 0;\n    while (i <= n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return (Math.sqrt(40 * n + 9) + 3) / 10;\n}\n\nconsole.log(is_num_decagonal(1));\nconsole.log(is_num_decagonal(2));\nconsole.log(is_num_decagonal(3));\nconsole.log(is_num_decagonal(4));\nconsole.log(is_num_decagonal(5));\nconsole.log(is_num_decagonal(6));\nconsole.log(is_num_decagonal(7));\nconsole.log(is_num_decagonal(8));\nconsole.log(is_num_decagonal(9));\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(11));\nconsole.log(is_num_decagonal(12));\nconsole.log(is_num_decagonal(13));\nconsole.log(is_num_decagonal(14));\nconsole.log(is_num_decagonal(15));\nconsole.log(is_num_decagonal(16));\nconsole.log(is_num_decagonal(17));\nconsole.log(is_num_decagonal(18));\nconsole.log(is_num_decagonal(19));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(21));\nconsole.log(is_num_decagonal(22));\nconsole.log(is_num_decagonal(23));\nconsole.log(is_num_decagonal(24));\nconsole.log(is_num_decagonal(25));\nconsole.log(is_num_decagonal(26));\nconsole.log(is_num_decagonal(27));\nconsole.log(is_num_decagonal(28));\nconsole.log(is_num_decagonal(29));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(31));\nconsole.log(is_num_decagonal(32));\nconsole.log(is_num_decagonal(33));\nconsole.log(is_num_decagonal(34));\nconsole.log(is_num_decagonal(",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(4));\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return num;\n}\n",
    "    let num = 0;\n    let i = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num === n) {\n        return num;\n    }\n    return -1;\n}\n",
    "  return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(4));\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    let num: number = 0;\n    let i: number = 1;\n    while (num < n) {\n        num = i * (3 * i - 1) / 2;\n        i++;\n    }\n    if (num == n) {\n        return num;\n    }\n    return 0;\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\nconsole.log(is_num_decagonal(110));\nconsole.log(is_num_decagonal(120));\nconsole.log(is_num_decagonal(130));\nconsole.log(is_num_decagonal(140));\nconsole.log(is_num_decagonal(150));\nconsole.log(is_num_decagonal(160));\nconsole.log(is_num_decagonal(170));\nconsole.log(is_num_decagonal(180));\nconsole.log(is_num_decagonal(190));\nconsole.log(is_num_decagonal(200));\nconsole.log(is_num_decagonal(210));\nconsole.log(is_num_decagonal(220));\nconsole.log(is_num_decagonal(230));\nconsole.log(is_num_decagonal(240));\nconsole.log(is_num_decagonal(250));\nconsole.log(is_num_decagonal(260));\nconsole.log(is_num_decagonal(270));\nconsole.log(is_num_decagonal(280));\nconsole.log(is_num_decagonal(290));\nconsole.log(is_num_decagonal(300));\nconsole.log(is_num_decagonal(310));\nconsole.log(is_num_decagonal(320));\nconsole.log(is_num_decagonal(330));\nconsole.log(is_num_decagonal(340));\nconsole.log(is_num_decagonal(",
    "    return n * (3 * n - 2);\n}\n",
    "    let decagonal: number = 0;\n    for (let i = 1; i <= n; i++) {\n        decagonal += i * 10;\n    }\n    return decagonal;\n}\n",
    "    let num = 0;\n    for (let i = 1; i <= n; i++) {\n        num = i * (3 * i - 1) / 2;\n    }\n    return num;\n}\nconsole.log(is_num_decagonal(5));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    let decagonal: number = 0;\n    let i: number = 0;\n    while (i <= n) {\n        decagonal = i * (3 * i - 1) / 2;\n        i++;\n    }\n    return decagonal;\n}\nconsole.log(is_num_decagonal(8));\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\nconsole.log(is_num_decagonal(20));\nconsole.log(is_num_decagonal(30));\nconsole.log(is_num_decagonal(40));\nconsole.log(is_num_decagonal(50));\nconsole.log(is_num_decagonal(60));\nconsole.log(is_num_decagonal(70));\nconsole.log(is_num_decagonal(80));\nconsole.log(is_num_decagonal(90));\nconsole.log(is_num_decagonal(100));\nconsole.log(is_num_decagonal(110));\nconsole.log(is_num_decagonal(120));\nconsole.log(is_num_decagonal(130));\nconsole.log(is_num_decagonal(140));\nconsole.log(is_num_decagonal(150));\nconsole.log(is_num_decagonal(160));\nconsole.log(is_num_decagonal(170));\nconsole.log(is_num_decagonal(180));\nconsole.log(is_num_decagonal(190));\nconsole.log(is_num_decagonal(200));\nconsole.log(is_num_decagonal(210));\nconsole.log(is_num_decagonal(220));\nconsole.log(is_num_decagonal(230));\nconsole.log(is_num_decagonal(240));\nconsole.log(is_num_decagonal(250));\nconsole.log(is_num_decagonal(260));\nconsole.log(is_num_decagonal(270));\nconsole.log(is_num_decagonal(280));\nconsole.log(is_num_decagonal(290));\nconsole.log(is_num_decagonal(300));\nconsole.log(is_num_decagonal(310));\nconsole.log(is_num_decagonal(320));\nconsole.log(is_num_decagonal(330));\nconsole.log(is_num_decagonal(340));\nconsole.log(is_num_decagonal(",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return n * (3 * n - 2);\n}\nconsole.log(is_num_decagonal(3));\n",
    "    return (Math.sqrt(4 * n + 1) + 1) / 2;\n}\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n\nconsole.log(is_num_decagonal(10));\n",
    "    return n * (3 * n - 2);\n}\n",
    "    return (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n}\n",
    "    return n * (3 * n - 2);\n}\n"
  ]
}
{
  "name": "mbpp_606_radian_degree",
  "language": "ts",
  "prompt": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\nconsole.log(radian_degree(180));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517494,
      "stdout": "3.141592653589793\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\nconsole.log(radian_degree(180));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517494,
      "stdout": "3.141592653589793\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\nconsole.log(\"Degree to Radian: \" + radian_degree(30));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123125,
      "stdout": "Degree to Radian: 0.5235987755982988\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\nconsole.log(radian_degree(180));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517494,
      "stdout": "3.141592653589793\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n  return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1666123123,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * Math.PI / 180;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to convert degrees to radians.\nfunction radian_degree(degree: number): number {\n    return degree * (Math.PI / 180);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = radian_degree;\n  assert.deepEqual(candidate(90),1.5707963267948966);\n  assert.deepEqual(candidate(60),1.0471975511965976);\n  assert.deepEqual(candidate(120),2.0943951023931953);\n}\n\ntest();",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
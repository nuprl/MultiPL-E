{
  "name": "mbpp_77_is_Diff",
  "language": "ts",
  "prompt": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum = sum + num % 10;\n        num = Math.floor(num / 10);\n    }\n    if (sum % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8f9ekqy8.js:20:12)\n    at Object.<anonymous> (/tmp/tmp8f9ekqy8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits = 0;\n    let sum_even_digits = 0;\n    let i = 1;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_odd_digits - sum_even_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "../../../../tmp/tmpgnys4042.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmpgnys4042.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        }\n        else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(12345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "../../../../tmp/tmpnvvbfxpy.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpnvvbfxpy.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        let rem: number = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        if (i % 2 == 0) {\n            sum1 = sum1 + num % 10;\n        }\n        else {\n            sum2 = sum2 + num % 10;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    return (Math.abs(sum1 - sum2) % 11 == 0);\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(12345678901234567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "../../../../tmp/tmp97r7k5f2.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmp97r7k5f2.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        let rem: number = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfljlb3cw.js:31:12)\n    at Object.<anonymous> (/tmp/tmpfljlb3cw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (sum_even - sum_odd == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        let rem: number = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(2468);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "../../../../tmp/tmpzu9a72h2.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmpzu9a72h2.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnpbzkzlq.js:28:12)\n    at Object.<anonymous> (/tmp/tmpnpbzkzlq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(9735));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\nfalse\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "true\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str[i]);\n        } else {\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1358));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    var sum_odd = 0;\n    var sum_even = 0;\n    var i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1223));\nconsole.log(is_Diff(1222));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1211));\nconsole.log(is_Diff(1212));\nconsole.log(is_Diff(1213));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1215));\nconsole.log(is_Diff(1216));\nconsole.log(is_Diff(1217));\nconsole.log(is_Diff(1218));\nconsole.log(is_Diff(1219));\nconsole.log(is_Diff(1220));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1222));\nconsole.log(is_Diff(1223));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1225));\nconsole.log(is_Diff(1226));\nconsole.log(is_Diff(1227));\nconsole.log(is_Diff(1228));\nconsole.log(is_Diff(1229));\nconsole.log(is_Diff(1230));\nconsole.log(is_Diff(1231));\nconsole.log(is_Diff(1232));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1234));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let num: number = n;\n    let rem: number;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1468));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpddl8xa7_.js:32:12)\n    at Object.<anonymous> (/tmp/tmpddl8xa7_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdh4pr43s.js:28:12)\n    at Object.<anonymous> (/tmp/tmpdh4pr43s.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(2468);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        let r: number = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + r;\n        }\n        else {\n            sum_odd = sum_odd + r;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1232));\nconsole.log(is_Diff(1231));\nconsole.log(is_Diff(1230));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1243));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1232));\nconsole.log(is_Diff(1231));\nconsole.log(is_Diff(1230));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1235));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1245));\nconsole.log(is_Diff(1246));\nconsole.log(is_Diff(1247));\nconsole.log(is_Diff(1248));\nconsole.log(is_Diff(1249));\nconsole.log(is_Diff(1240));\nconsole.log(is_Diff(1241));\nconsole.log(is_Diff(1242));\nconsole.log(is_Diff(1250));\nconsole.log(is_Diff(1251));\nconsole.log(is_Diff(1252));\nconsole.log(is_Diff(1253));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1255));\nconsole.log(is_Diff(1256));\nconsole.log(is_Diff(1257));\nconsole.log(is_Diff(1258));\nconsole.log(is_Diff(1259));\nconsole.log(is_Diff(1260));\nconsole.log(is_Diff(1261));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "../../../../tmp/tmpvtgonsxe.ts(50,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let temp: number = n;\n    while (temp > 0) {\n        sum1 += temp % 10;\n        temp = Math.floor(temp / 10);\n        sum2 += temp % 10;\n        temp = Math.floor(temp / 10);\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str[i]);\n        } else {\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let sum: number = 0;\n    let rem: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    sum = sum_even - sum_odd;\n    if (sum % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpq5tr5ejx.js:32:12)\n    at Object.<anonymous> (/tmp/tmpq5tr5ejx.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_odd - sum_even) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        }\n        else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(13579));\nconsole.log(is_Diff(135));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let r = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + r;\n        } else {\n            sum_odd = sum_odd + r;\n        }\n        i = i + 1;\n        n = Math.floor(n / 10);\n    }\n    if (sum_even - sum_odd == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "../../../../tmp/tmpns5xwej_.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        }\n        else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 1;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (sum_even - sum_odd == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "../../../../tmp/tmpyq_xqm9h.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let n1: number = n;\n    let n2: number = n;\n    while (n1 > 0) {\n        sum1 = sum1 + n1 % 10;\n        n1 = Math.floor(n1 / 10);\n    }\n    while (n2 > 0) {\n        sum2 = sum2 + n2 % 10;\n        n2 = Math.floor(n2 / 10);\n    }\n    if ((sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpncno1g8i.js:26:12)\n    at Object.<anonymous> (/tmp/tmpncno1g8i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1214));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\ntrue\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let s: string = n.toString();\n    let sum1: number = 0;\n    let sum2: number = 0;\n    for (let i: number = 0; i < s.length; i++) {\n        if (i % 2 == 0) {\n            sum1 += parseInt(s[i]);\n        }\n        else {\n            sum2 += parseInt(s[i]);\n        }\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "../../../../tmp/tmplrz7dru3.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmplrz7dru3.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1232));\nconsole.log(is_Diff(1231));\nconsole.log(is_Diff(1230));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1235));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122615,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(13579));\nconsole.log(is_Diff(123456789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return Math.abs(sum1 - sum2) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let is_divisible: boolean = false;\n    let rem: number = 0;\n    let temp: number = n;\n\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even_digits - sum_odd_digits) % 11 == 0) {\n        is_divisible = true;\n    }\n    return is_divisible;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm9k5wdx1.js:27:12)\n    at Object.<anonymous> (/tmp/tmpm9k5wdx1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(2468);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpofa3kqj8.js:23:12)\n    at Object.<anonymous> (/tmp/tmpofa3kqj8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_odd - sum_even) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\nconsole.log(is_Diff(46));\nconsole.log(is_Diff(47));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "../../../../tmp/tmpiw4mo3lk.ts(54,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(56789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplzlboqm0.js:31:12)\n    at Object.<anonymous> (/tmp/tmplzlboqm0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "../../../../tmp/tmp_rqkqfjj.ts(47,1): error TS1005: ',' expected.\n../../../../tmp/tmp_rqkqfjj.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 1;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1244));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let num: number = n;\n    let rem: number;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpttjtfxlw.js:30:12)\n    at Object.<anonymous> (/tmp/tmpttjtfxlw.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpijdzg7op.js:25:12)\n    at Object.<anonymous> (/tmp/tmpijdzg7op.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i = i + 1;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum = 0;\n    let diff = 0;\n    let num = n;\n    while (num > 0) {\n        let rem = num % 10;\n        if (sum > diff) {\n            diff = diff - rem;\n        }\n        else {\n            sum = sum + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if (sum == diff) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsuxy7gaz.js:29:12)\n    at Object.<anonymous> (/tmp/tmpsuxy7gaz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1264));\nconsole.log(is_Diff(1274));\nconsole.log(is_Diff(1284));\nconsole.log(is_Diff(1294));\nconsole.log(is_Diff(1204));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1264));\nconsole.log(is_Diff(1274));\nconsole.log(is_Diff(1284));\nconsole.log(is_Diff(1294));\nconsole.log(is_Diff(1204));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1264));\nconsole.log(is_Diff(1274));\nconsole.log(is_Diff(1284));\nconsole.log(is_Diff(1294));\nconsole.log(is_Diff(1204));\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "../../../../tmp/tmp5hh1so9a.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmp5hh1so9a.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str_n: string = n.toString();\n    for (let i: number = 0; i < str_n.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str_n[i]);\n        } else {\n            sum_odd += parseInt(str_n[i]);\n        }\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let diff: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    diff = sum_even - sum_odd;\n    if (diff % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet n: number = Number(prompt(\"Enter a number\"));\nlet res: boolean = is_Diff(n);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "",
      "stderr": "/tmp/tmp63ly262r.js:27\nlet n = Number(prompt(\"Enter a number\"));\n        ^\n\nReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmp63ly262r.js:27:9)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1x46d8g9.js:32:12)\n    at Object.<anonymous> (/tmp/tmp1x46d8g9.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str[i]);\n        }\n        else {\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1saidqws.js:28:12)\n    at Object.<anonymous> (/tmp/tmp1saidqws.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    while (n > 0) {\n        sum1 += n % 10;\n        n = Math.floor(n / 10);\n        sum2 += n % 10;\n        n = Math.floor(n / 10);\n    }\n    return sum1 - sum2 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1 = 0;\n    let sum2 = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum1 += n % 10;\n        } else {\n            sum2 += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum1 - sum2) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "../../../../tmp/tmpbmeiegff.ts(57,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122620,
      "stdout": "../../../../tmp/tmpijjas45t.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmpijjas45t.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    var sum_even: number = 0;\n    var sum_odd: number = 0;\n    var i: number = 0;\n    while (n != 0) {\n        var rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nvar res = is_Diff(123456789);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122620,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    if (n % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(22));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1358));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "../../../../tmp/tmpvzrzjyy4.ts(51,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even_digits: number = 0;\n    let sum_odd_digits: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even_digits - sum_odd_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(2468);\nif (res) {\n    console.log(\"The number is divisible by 11\");\n}\nelse {\n    console.log(\"The number is not divisible by 11\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "The number is not divisible by 11\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8qe9g4rt.js:35:12)\n    at Object.<anonymous> (/tmp/tmp8qe9g4rt.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str[i]);\n        }\n        else {\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(12345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "../../../../tmp/tmpb9t7h1b1.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpb9t7h1b1.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "true\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuxpok1u9.js:30:12)\n    at Object.<anonymous> (/tmp/tmpuxpok1u9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return Math.abs(sum1 - sum2) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "true\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7wzr3cmy.js:60:12)\n    at Object.<anonymous> (/tmp/tmp7wzr3cmy.js:63:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        }\n        else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm9urs4p6.js:33:12)\n    at Object.<anonymous> (/tmp/tmpm9urs4p6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(12);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let temp: number = n;\n    let rem: number = 0;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9mk7nanv.js:28:12)\n    at Object.<anonymous> (/tmp/tmp9mk7nanv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(123321));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(1234567890123456789012345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "true\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str_n: string = n.toString();\n    for (let i: number = 0; i < str_n.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str_n[i]);\n        } else {\n            sum_odd += parseInt(str_n[i]);\n        }\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(2468642));\nconsole.log(is_Diff(246864));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp > 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1224));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122622,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplcwc913e.js:32:12)\n    at Object.<anonymous> (/tmp/tmplcwc913e.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk6ex_k27.js:30:12)\n    at Object.<anonymous> (/tmp/tmpk6ex_k27.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let rem: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if ((sum_even_digits - sum_odd_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum = 0;\n    let sum1 = 0;\n    let num = n;\n    while (num > 0) {\n        let rem = num % 10;\n        sum = sum + rem;\n        num = Math.floor(num / 10);\n    }\n    num = n;\n    while (num > 0) {\n        let rem = num % 10;\n        sum1 = sum1 + rem;\n        num = Math.floor(num / 10);\n    }\n    if (sum - sum1 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122621,
      "stdout": "true\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpifk4k7y5.js:29:12)\n    at Object.<anonymous> (/tmp/tmpifk4k7y5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122623,
      "stdout": "false\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp413n10sd.js:30:12)\n    at Object.<anonymous> (/tmp/tmp413n10sd.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str[i]);\n        }\n        else {\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122623,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        } else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(1234567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122623,
      "stdout": "../../../../tmp/tmp85pvy_17.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmp85pvy_17.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    var sum_even = 0;\n    var sum_odd = 0;\n    var i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(46));\nconsole.log(is_Diff(48));\nconsole.log(is_Diff(50));\nconsole.log(is_Diff(52));\nconsole.log(is_Diff(54));\nconsole.log(is_Diff(56));\nconsole.log(is_Diff(58));\nconsole.log(is_Diff(60));\nconsole.log(is_Diff(62));\nconsole.log(is_Diff(64));\nconsole.log(is_Diff(66));\nconsole.log(is_Diff(68));\nconsole.log(is_Diff(70));\nconsole.log(is_Diff(72));\nconsole.log(is_Diff(74));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122623,
      "stdout": "../../../../tmp/tmpw6dl7ek1.ts(56,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let num = n;\n    let rem = 0;\n    while (num != 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1452));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\nfalse\nfalse\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4mjmio_z.js:32:12)\n    at Object.<anonymous> (/tmp/tmp4mjmio_z.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum1 += parseInt(str[i]);\n        }\n        else {\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1235));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1240));\nconsole.log(is_Diff(1241));\nconsole.log(is_Diff(1242));\nconsole.log(is_Diff(1243));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1245));\nconsole.log(is_Diff(1246));\nconsole.log(is_Diff(1247));\nconsole.log(is_Diff(1248));\nconsole.log(is_Diff(1249));\nconsole.log(is_Diff(1250));\nconsole.log(is_Diff(1251));\nconsole.log(is_Diff(1252));\nconsole.log(is_Diff(1253));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1255));\nconsole.log(is_Diff(1256));\nconsole.log(is_Diff(1257));\nconsole.log(is_Diff(1258));\nconsole.log(is_Diff(1259));\nconsole.log(is_Diff(1260));\nconsole.log(is_Diff(1261));\nconsole.log(is_Diff(1262));\nconsole.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "../../../../tmp/tmph0717usi.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmph0717usi.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1saidqws.js:28:12)\n    at Object.<anonymous> (/tmp/tmp1saidqws.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp526u3c7b.js:28:12)\n    at Object.<anonymous> (/tmp/tmp526u3c7b.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even_digits: number = 0;\n    let sum_odd_digits: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even_digits - sum_odd_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgeq56rd3.js:30:12)\n    at Object.<anonymous> (/tmp/tmpgeq56rd3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let is_divisible = false;\n    let rem = 0;\n    let num = n;\n    while (num != 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        is_divisible = true;\n    }\n    return is_divisible;\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmplc_uf0ov.js:29:12)\n    at Object.<anonymous> (/tmp/tmplc_uf0ov.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\nconsole.log(is_Diff(46));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "../../../../tmp/tmp3vaatups.ts(53,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        } else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "../../../../tmp/tmps_uifw3x.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmps_uifw3x.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    var sum_even: number = 0;\n    var sum_odd: number = 0;\n    var str: string = n.toString();\n    for (var i = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str[i]);\n        }\n        else {\n            sum_odd += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1244));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even_digits = sum_even_digits + n % 10;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even_digits - sum_odd_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let num = n;\n    let rem = 0;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1441));\nconsole.log(is_Diff(1789));\nconsole.log(is_Diff(1691));\nconsole.log(is_Diff(1901));\nconsole.log(is_Diff(1891));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpipgsdjue.js:36:12)\n    at Object.<anonymous> (/tmp/tmpipgsdjue.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let str: string = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + parseInt(str[i]);\n        }\n        else {\n            sum_odd = sum_odd + parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "../../../../tmp/tmpj69vfvec.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpj69vfvec.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122625,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpskgravjp.js:30:12)\n    at Object.<anonymous> (/tmp/tmpskgravjp.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(13579));\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(13579));\nconsole.log(is_Diff(2468));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(2468);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122618,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122625,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return Math.abs(sum1 - sum2) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(1234567890123456789012345));\nconsole.log(is_Diff(12345678901234567890123456));\nconsole.log(is_Diff(123456789012345678901234567));\nconsole.log(is_Diff(1234567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122624,
      "stdout": "../../../../tmp/tmpzj4_k80g.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmpzj4_k80g.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        let r: number = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + r;\n        }\n        else {\n            sum_odd = sum_odd + r;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122625,
      "stdout": "../../../../tmp/tmps5_ftpmx.ts(54,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    return Math.abs(sum_odd - sum_even) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxu17wmrl.js:37:12)\n    at Object.<anonymous> (/tmp/tmpxu17wmrl.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let count = 0;\n    let num = n;\n    while (num != 0) {\n        let rem = num % 10;\n        if (count % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n        count++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1235));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1240));\nconsole.log(is_Diff(1241));\nconsole.log(is_Diff(1242));\nconsole.log(is_Diff(1243));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1245));\nconsole.log(is_Diff(1246));\nconsole.log(is_Diff(1247));\nconsole.log(is_Diff(1248));\nconsole.log(is_Diff(1249));\nconsole.log(is_Diff(1250));\nconsole.log(is_Diff(1251));\nconsole.log(is_Diff(1252));\nconsole.log(is_Diff(1253));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1255));\nconsole.log(is_Diff(1256));\nconsole.log(is_Diff(1257));\nconsole.log(is_Diff(1258));\nconsole.log(is_Diff(1259));\nconsole.log(is_Diff(1260));\nconsole.log(is_Diff(1261));\nconsole.log(is_Diff(1262));\nconsole.log(is\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "../../../../tmp/tmptp4vog7j.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmptp4vog7j.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\nconsole.log(is_Diff(46));\nconsole.log(is_Diff(47));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "../../../../tmp/tmp0lltptku.ts(54,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        } else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "../../../../tmp/tmpdcfw4gfl.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmpdcfw4gfl.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123456789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "true\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "../../../../tmp/tmpq8wiylmw.ts(57,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        let rem: number = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1232));\nconsole.log(is_Diff(1231));\nconsole.log(is_Diff(1230));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1235));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let str: string = n.toString();\n    for (let i: number = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum1 += parseInt(str[i]);\n        }\n        else {\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1232));\nconsole.log(is_Diff(1231));\nconsole.log(is_Diff(1230));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    var s: number = 0;\n    var s1: number = 0;\n    var s2: number = 0;\n    var i: number = 0;\n    var j: number = 0;\n    var k: number = 0;\n    var str: string = n.toString();\n    var len: number = str.length;\n    for (i = 0; i < len; i++) {\n        if (i % 2 == 0) {\n            s1 = s1 + parseInt(str[i]);\n        }\n        else {\n            s2 = s2 + parseInt(str[i]);\n        }\n    }\n    s = s1 - s2;\n    if (s % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(123456789012345678901\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "../../../../tmp/tmpidat4x00.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmpidat4x00.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\nconsole.log(is_Diff(46));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "../../../../tmp/tmpwbnll8t9.ts(53,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let num: number = n;\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let i: number = 0;\n    while (num > 0) {\n        if (i % 2 == 0) {\n            sum1 = sum1 + num % 10;\n        }\n        else {\n            sum2 = sum2 + num % 10;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "../../../../tmp/tmpe5d1a_8r.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "../../../../tmp/tmpb1knvzbh.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpb1knvzbh.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (sum_even - sum_odd == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        } else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return sum1 - sum2 == 0;\n}\nconsole.log(is_Diff(121));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits = 0;\n    let sum_even_digits = 0;\n    let is_divisible = false;\n    n = Math.abs(n);\n    while (n > 0) {\n        let last_digit = n % 10;\n        if (last_digit % 2 == 0) {\n            sum_even_digits += last_digit;\n        } else {\n            sum_odd_digits += last_digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even_digits - sum_odd_digits) % 11 == 0) {\n        is_divisible = true;\n    }\n    return is_divisible;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphtrtk9d0.js:26:12)\n    at Object.<anonymous> (/tmp/tmphtrtk9d0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let rem: number = 0;\n    while (n != 0) {\n        rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum = 0;\n    let diff = 0;\n    let num = n;\n    while (num > 0) {\n        let digit = num % 10;\n        if (sum > diff) {\n            diff = diff - digit;\n        } else {\n            diff = diff + digit;\n        }\n        num = Math.floor(num / 10);\n    }\n    return diff == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122628,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp842qwfcp.js:24:12)\n    at Object.<anonymous> (/tmp/tmp842qwfcp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    let rem: number = 0;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum1 = sum1 + rem;\n        }\n        else {\n            sum2 = sum2 + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5tmds03c.js:30:12)\n    at Object.<anonymous> (/tmp/tmp5tmds03c.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(13579));\nconsole.log(is_Diff(246813579));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphpemthrz.js:32:12)\n    at Object.<anonymous> (/tmp/tmphpemthrz.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let r: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + r;\n        }\n        else {\n            sum_odd = sum_odd + r;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    let diff = sum_even - sum_odd;\n    if (diff % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        } else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1235));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        temp = Math.floor(temp / 10);\n        i++;\n    }\n    if ((sum_even_digits - sum_odd_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(123411));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(12345678911));\nconsole.log(is_Diff(1234567891011));\nconsole.log(is_Diff(123456789101112));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1 = 0;\n    let sum2 = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum1 = sum1 + n % 10;\n        }\n        else {\n            sum2 = sum2 + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "../../../../tmp/tmpdigwpjqz.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpdigwpjqz.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number;\n    let i: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    return (Math.abs(sum_even - sum_odd) % 11 == 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        if (i % 2 == 0) {\n            sum1 = sum1 + num % 10;\n        }\n        else {\n            sum2 = sum2 + num % 10;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122629,
      "stdout": "../../../../tmp/tmp2iwyzpvj.ts(48,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1264));\nconsole.log(is_Diff(1274));\nconsole.log(is_Diff(1284));\nconsole.log(is_Diff(1294));\nconsole.log(is_Diff(1204));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1264));\nconsole.log(is_Diff(1274));\nconsole.log(is_Diff(1284));\nconsole.log(is_Diff(1294));\nconsole.log(is_Diff(1204));\nconsole.log(is_Diff(1214));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1264));\nconsole.log(is_Diff(1274));\nconsole.log(is_Diff(1284));\nconsole.log(is_Diff\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "../../../../tmp/tmpgjp0uusq.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmpgjp0uusq.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\nconsole.log(is_Diff(1235));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1240));\nconsole.log(is_Diff(1241));\nconsole.log(is_Diff(1242));\nconsole.log(is_Diff(1243));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1245));\nconsole.log(is_Diff(1246));\nconsole.log(is_Diff(1247));\nconsole.log(is_Diff(1248));\nconsole.log(is_Diff(1249));\nconsole.log(is_Diff(1250));\nconsole.log(is_Diff(1251));\nconsole.log(is_Diff(1252));\nconsole.log(is_Diff(1253));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1255));\nconsole.log(is_Diff(1256));\nconsole.log(is_Diff(1257));\nconsole.log(is_Diff(1258));\nconsole.log(is_Diff(1259));\nconsole.log(is_Diff(1260));\nconsole.log(is_Diff(1261));\nconsole.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "../../../../tmp/tmpczm5jo5l.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpczm5jo5l.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n        i++;\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(12345));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "true\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt9k7bqoe.js:32:12)\n    at Object.<anonymous> (/tmp/tmpt9k7bqoe.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(123456789012345678901234));\nconsole.log(is_Diff(123456789012345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "../../../../tmp/tmpfn7xxopc.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmpfn7xxopc.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let str_n = n.toString();\n    for (let i = 0; i < str_n.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str_n[i]);\n        } else {\n            sum_odd += parseInt(str_n[i]);\n        }\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122631,
      "stdout": "../../../../tmp/tmprer_zbl1.ts(57,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let str_n = n.toString();\n    for (let i = 0; i < str_n.length; i++) {\n        if (i % 2 == 0) {\n            sum_even += parseInt(str_n[i]);\n        }\n        else {\n            sum_odd += parseInt(str_n[i]);\n        }\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let num = n;\n    while (num > 0) {\n        sum_odd += num % 10;\n        num = Math.floor(num / 10);\n        sum_even += num % 10;\n        num = Math.floor(num / 10);\n    }\n    return (sum_odd - sum_even) % 11 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(1234567));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "true\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let temp: number = n;\n    let rem: number = 0;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122631,
      "stdout": "../../../../tmp/tmpylfy9gm3.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmpylfy9gm3.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + (n % 10);\n        }\n        else {\n            sum_odd = sum_odd + (n % 10);\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "false\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even_digits = sum_even_digits + n % 10;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even_digits - sum_odd_digits) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(13579));\nconsole.log(is_Diff(24680));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkrqom6vj.js:25:12)\n    at Object.<anonymous> (/tmp/tmpkrqom6vj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(121);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122632,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcsn92xpu.js:30:12)\n    at Object.<anonymous> (/tmp/tmpcsn92xpu.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1244));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4asd5ht0.js:32:12)\n    at Object.<anonymous> (/tmp/tmp4asd5ht0.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    let i: number = 1;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1357));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1214));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd = 0;\n    let sum_even = 0;\n    let i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            sum_even += n % 10;\n        }\n        else {\n            sum_odd += n % 10;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    return Math.abs(sum_even - sum_odd) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits = 0;\n    let sum_even_digits = 0;\n    let i = 1;\n    while (n > 0) {\n        let digit = n % 10;\n        if (i % 2 == 0) {\n            sum_even_digits += digit;\n        }\n        else {\n            sum_odd_digits += digit;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    return (sum_even_digits - sum_odd_digits) % 11 == 0;\n}\nconsole.log(is_Diff(135797531));\nconsole.log(is_Diff(135797532));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpi3hc9d7z.js:61:12)\n    at Object.<anonymous> (/tmp/tmpi3hc9d7z.js:64:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122626,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let digit: number = 0;\n    let is_divisible: boolean = false;\n    let temp: number = n;\n    while (temp != 0) {\n        digit = temp % 10;\n        if (digit % 2 == 0) {\n            sum_even = sum_even + digit;\n        }\n        else {\n            sum_odd = sum_odd + digit;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        is_divisible = true;\n    }\n    return is_divisible;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpod5qji4r.js:27:12)\n    at Object.<anonymous> (/tmp/tmpod5qji4r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n        i++;\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(11));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    let num: number = n;\n    while (num != 0) {\n        let rem: number = num % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        } else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        num = Math.floor(num / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits = 0;\n    let sum_even_digits = 0;\n    let is_divisible = false;\n    let num = n;\n    let rem = 0;\n    let i = 1;\n    while (num != 0) {\n        rem = num % 10;\n        if (i % 2 == 1) {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        else {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    if ((sum_odd_digits - sum_even_digits) % 11 == 0) {\n        is_divisible = true;\n    }\n    return is_divisible;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            sum_even = sum_even + n % 10;\n        }\n        else {\n            sum_odd = sum_odd + n % 10;\n        }\n        n = Math.floor(n / 10);\n        i = i + 1;\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(13));\nconsole.log(is_Diff(14));\nconsole.log(is_Diff(15));\nconsole.log(is_Diff(16));\nconsole.log(is_Diff(17));\nconsole.log(is_Diff(18));\nconsole.log(is_Diff(19));\nconsole.log(is_Diff(20));\nconsole.log(is_Diff(21));\nconsole.log(is_Diff(22));\nconsole.log(is_Diff(23));\nconsole.log(is_Diff(24));\nconsole.log(is_Diff(25));\nconsole.log(is_Diff(26));\nconsole.log(is_Diff(27));\nconsole.log(is_Diff(28));\nconsole.log(is_Diff(29));\nconsole.log(is_Diff(30));\nconsole.log(is_Diff(31));\nconsole.log(is_Diff(32));\nconsole.log(is_Diff(33));\nconsole.log(is_Diff(34));\nconsole.log(is_Diff(35));\nconsole.log(is_Diff(36));\nconsole.log(is_Diff(37));\nconsole.log(is_Diff(38));\nconsole.log(is_Diff(39));\nconsole.log(is_Diff(40));\nconsole.log(is_Diff(41));\nconsole.log(is_Diff(42));\nconsole.log(is_Diff(43));\nconsole.log(is_Diff(44));\nconsole.log(is_Diff(45));\nconsole.log(is_Diff(46));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let rem: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(2468);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122633,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let i: number = 0;\n    while (n != 0) {\n        let r: number = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + r;\n        }\n        else {\n            sum_odd = sum_odd + r;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "false\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let rem: number = 0;\n    while (n != 0) {\n        rem = Math.floor(n % 10);\n        if (rem % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    return (sum_even_digits - sum_odd_digits) % 11 == 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpiqbw69su.js:22:12)\n    at Object.<anonymous> (/tmp/tmpiqbw69su.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res: boolean = is_Diff(121);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmprbk_3j54.js:30:12)\n    at Object.<anonymous> (/tmp/tmprbk_3j54.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    var str = n.toString();\n    var sum1 = 0;\n    var sum2 = 0;\n    var i = 0;\n    for (i = 0; i < str.length; i++) {\n        if (i % 2 == 0) {\n            sum1 += parseInt(str[i]);\n        }\n        else {\n            sum2 += parseInt(str[i]);\n        }\n    }\n    if (Math.abs(sum1 - sum2) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\nconsole.log(is_Diff(12));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(12345));\nconsole.log(is_Diff(123456));\nconsole.log(is_Diff(1234567));\nconsole.log(is_Diff(12345678));\nconsole.log(is_Diff(123456789));\nconsole.log(is_Diff(1234567890));\nconsole.log(is_Diff(12345678901));\nconsole.log(is_Diff(123456789012));\nconsole.log(is_Diff(1234567890123));\nconsole.log(is_Diff(12345678901234));\nconsole.log(is_Diff(123456789012345));\nconsole.log(is_Diff(1234567890123456));\nconsole.log(is_Diff(12345678901234567));\nconsole.log(is_Diff(123456789012345678));\nconsole.log(is_Diff(1234567890123456789));\nconsole.log(is_Diff(12345678901234567890));\nconsole.log(is_Diff(123456789012345678901));\nconsole.log(is_Diff(1234567890123456789012));\nconsole.log(is_Diff(12345678901234567890123));\nconsole.log(is_Diff(1234567890123456789\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "../../../../tmp/tmp3jvmpx02.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp3jvmpx02.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_odd_digits: number = 0;\n    let sum_even_digits: number = 0;\n    let rem: number = 0;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even_digits = sum_even_digits + rem;\n        }\n        else {\n            sum_odd_digits = sum_odd_digits + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    if ((sum_even_digits - sum_odd_digits) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1235));\nconsole.log(is_Diff(1236));\nconsole.log(is_Diff(1237));\nconsole.log(is_Diff(1238));\nconsole.log(is_Diff(1239));\nconsole.log(is_Diff(1240));\nconsole.log(is_Diff(1241));\nconsole.log(is_Diff(1242));\nconsole.log(is_Diff(1243));\nconsole.log(is_Diff(1244));\nconsole.log(is_Diff(1245));\nconsole.log(is_Diff(1246));\nconsole.log(is_Diff(1247));\nconsole.log(is_Diff(1248));\nconsole.log(is_Diff(1249));\nconsole.log(is_Diff(1250));\nconsole.log(is_Diff(1251));\nconsole.log(is_Diff(1252));\nconsole.log(is_Diff(1253));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1255));\nconsole.log(is_Diff(1256));\nconsole.log(is_Diff(1257));\nconsole.log(is_Diff(1258));\nconsole.log(is_Diff(1259));\nconsole.log(is_Diff(1260));\nconsole.log(is_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "../../../../tmp/tmprag2m5jz.ts(52,1): error TS1005: ',' expected.\n../../../../tmp/tmprag2m5jz.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let num: number = n;\n    let rem: number;\n    while (num > 0) {\n        rem = num % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        num = Math.floor(num / 10);\n    }\n    if ((sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122619,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpttjtfxlw.js:30:12)\n    at Object.<anonymous> (/tmp/tmpttjtfxlw.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum1: number = 0;\n    let sum2: number = 0;\n    let num: number = n;\n    while (num > 0) {\n        sum1 = sum1 + num % 10;\n        num = Math.floor(num / 10);\n        sum2 = sum2 + num % 10;\n        num = Math.floor(num / 10);\n    }\n    return sum1 - sum2 == 0;\n}\nconsole.log(is_Diff(121));\nconsole.log(is_Diff(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even: number = 0;\n    let sum_odd: number = 0;\n    let rem: number;\n    let temp: number = n;\n    while (temp != 0) {\n        rem = temp % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    return (sum_even - sum_odd) % 11 == 0;\n}\nconsole.log(is_Diff(2468));\nconsole.log(is_Diff(1357));\nconsole.log(is_Diff(1221));\nconsole.log(is_Diff(1441));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "false\nfalse\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqpi7o8dq.js:27:12)\n    at Object.<anonymous> (/tmp/tmpqpi7o8dq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let rem = 0;\n    let temp = n;\n    while (n > 0) {\n        rem = n % 10;\n        if (rem % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        n = Math.floor(n / 10);\n    }\n    let diff = sum_even - sum_odd;\n    if (diff % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet res = is_Diff(1234);\nconsole.log(res);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp102yedcq.js:31:12)\n    at Object.<anonymous> (/tmp/tmp102yedcq.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to find whether a number is divisible by 11.\nfunction is_Diff(n: number): boolean {\n    let sum_even = 0;\n    let sum_odd = 0;\n    let i = 0;\n    while (n != 0) {\n        let rem = n % 10;\n        if (i % 2 == 0) {\n            sum_even = sum_even + rem;\n        }\n        else {\n            sum_odd = sum_odd + rem;\n        }\n        i++;\n        n = Math.floor(n / 10);\n    }\n    if (Math.abs(sum_even - sum_odd) % 11 == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1254));\nconsole.log(is_Diff(1224));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\nconsole.log(is_Diff(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Diff;\n  assert.deepEqual(candidate(12345),false);\n  assert.deepEqual(candidate(1212112),true);\n  assert.deepEqual(candidate(1212),false);\n}\n\ntest();",
      "timestamp": 1666122634,
      "stdout": "false\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
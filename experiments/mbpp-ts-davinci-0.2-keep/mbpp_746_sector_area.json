{
  "name": "mbpp_746_sector_area",
  "language": "ts",
  "prompt": "//Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunction sector_area(r: number, a: number): number | undefined {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sector_area;\n  assert.deepEqual(candidate(4, 45),6.283185307179586);\n  assert.deepEqual(candidate(9, 45),31.808625617596654);\n  assert.deepEqual(candidate(9, 361),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * (Math.PI * r * r);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a * Math.PI * r * r) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 45));\nconsole.log(sector_area(10, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(3, 360));\nconsole.log(sector_area(3, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a * Math.PI * r * r) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(4, 360));\nconsole.log(sector_area(4, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    } else {\n        return (a / 360) * Math.PI * r * r;\n    }\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(3, 360));\nconsole.log(sector_area(3, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n\nconsole.log(sector_area(2, 45));\nconsole.log(sector_area(2, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(2, 45));\nconsole.log(sector_area(2, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return 0.5 * r * r * a;\n}\n",
    "  if (a > 360) {\n    return undefined;\n  } else {\n    return (a / 360) * Math.PI * r * r;\n  }\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    } else {\n        return (a / 360) * Math.PI * r ** 2;\n    }\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a * Math.PI * Math.pow(r, 2)) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 45));\nconsole.log(sector_area(10, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "  if (a > 360) {\n    return undefined;\n  }\n  return (a * Math.PI * r * r) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n\nconsole.log(sector_area(10, 45));\nconsole.log(sector_area(10, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * Math.pow(r, 2) * a) / 360;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(2, 360));\nconsole.log(sector_area(2, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(2, 360));\nconsole.log(sector_area(2, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(2, 360));\nconsole.log(sector_area(2, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "  if (a > 360) {\n    return undefined;\n  }\n  return (a * Math.PI * r * r) / 360;\n}\n",
    "  if (a > 360) {\n    return undefined;\n  }\n  return (r * r * a) / 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a * Math.PI * r * r) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    else {\n        return (a / 360) * Math.PI * r * r;\n    }\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\nconsole.log(sector_area(2, 360));\n",
    "  if (a > 360) {\n    return undefined;\n  }\n  return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 45));\nconsole.log(sector_area(10, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n\nconsole.log(sector_area(10, 45));\nconsole.log(sector_area(10, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * Math.pow(r, 2);\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    else {\n        return (a / 360) * Math.PI * r * r;\n    }\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a * Math.PI * r * r) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    } else {\n        return (a / 360) * Math.PI * r * r;\n    }\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\nconsole.log(sector_area(2, 360));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    else {\n        return (r * r * a) / 360;\n    }\n}\nconsole.log(sector_area(3, 360));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(10, 360));\nconsole.log(sector_area(10, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    const area = (r * r * a) / 360;\n    return area;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(3, 360));\nconsole.log(sector_area(3, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (Math.PI * r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n\nconsole.log(sector_area(2, 45));\nconsole.log(sector_area(2, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r ** 2;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\nconsole.log(sector_area(10, 45));\nconsole.log(sector_area(10, 400));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (r * r * a) / 360;\n}\n\nconsole.log(sector_area(5, 360));\nconsole.log(sector_area(5, 361));\n",
    "    if (a > 360) {\n        return undefined;\n    }\n    return (a / 360) * Math.PI * r * r;\n}\n\nconsole.log(sector_area(3, 360));\nconsole.log(sector_area(3, 361));\n"
  ]
}
{
  "name": "mbpp_119_search",
  "language": "ts",
  "prompt": "//Write a python function to find the element that appears only once in a sorted array.\nfunction search(arr: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = search;\n  assert.deepEqual(candidate([1, 1, 2, 2, 3]),3);\n  assert.deepEqual(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]),8);\n  assert.deepEqual(candidate([1, 2, 2, 3, 3, 4, 4]),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let i: number = 0;\n    let j: number = arr.length - 1;\n    while (i < j) {\n        let mid: number = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        }\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 === 0) {\n      if (arr[mid] === arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else {\n      if (arr[mid] === arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else {\n                high = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1]) {\n            index = i;\n            break;\n        }\n    }\n    return arr[index];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let i = 0;\n  while (i < arr.length) {\n    if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n      return arr[i];\n    }\n    i++;\n  }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else {\n                high = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if ((mid + 1) % 2 == 0) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            }\n            else {\n                high = mid;\n            }\n        }\n        else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            }\n            else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start < end) {\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return arr[mid];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i: number = 0;\n    let j: number = arr.length - 1;\n    while (i < j) {\n        let mid: number = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i <= j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let result: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 === 0) {\n      if (arr[mid] === arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else {\n      if (arr[mid] === arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 3, 3, 4, 5, 5, 7, 7, 8, 8]));\nconsole.log(search([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]));\n",
    "    let n: number = arr.length;\n    let i: number;\n    for (i = 0; i < n; i++) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nlet arr: number[] = [1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65];\nconsole.log(search(arr));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start <= end) {\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else if (arr[mid] == arr[mid - 1]) {\n                end = mid - 2;\n            } else {\n                return arr[mid];\n            }\n        } else {\n            if (arr[mid] == arr[mid + 1]) {\n                end = mid - 1;\n            } else if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                return arr[mid];\n            }\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return -1;\n}\n",
    "    let result: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let left = 0;\n    let right = arr.length - 1;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                right = mid - 2;\n            } else {\n                left = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                left = mid + 2;\n            } else {\n                right = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[left];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let n = arr.length;\n    let i = 0;\n    while (i < n) {\n        if (arr[i] == arr[i + 1]) {\n            i = i + 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let result: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1]) {\n            result = arr[i];\n            break;\n        }\n        i++;\n    }\n    return result;\n}\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i: number;\n    for (i = 0; i < arr.length; i++) {\n        if (arr[i] != arr[i + 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 2;\n            }\n        } else {\n            if ((mid + 1) % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        }\n    }\n    return arr[i];\n}\n",
    "    let left = 0;\n    let right = arr.length - 1;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                right = mid - 2;\n            } else {\n                left = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                left = mid + 2;\n            } else {\n                right = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[left];\n}\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 === 0) {\n      if (arr[mid] === arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else {\n      if (arr[mid] === arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "  let i = 0;\n  let j = arr.length - 1;\n  while (i < j) {\n    let mid = Math.floor((i + j) / 2);\n    if (arr[mid] == arr[mid - 1]) {\n      if (mid % 2 == 0) {\n        j = mid - 2;\n      } else {\n        i = mid + 1;\n      }\n    } else if (arr[mid] == arr[mid + 1]) {\n      if (mid % 2 == 0) {\n        i = mid + 2;\n      } else {\n        j = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n  }\n  return arr[i];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    let mid = 0;\n    while (i <= j) {\n        mid = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let result: number = 0;\n    for (let i: number = 0; i < arr.length; i++) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));",
    "    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n      result = arr[i];\n    }\n  }\n  return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return arr[start];\n}\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                high = mid - 2;\n            } else {\n                low = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                low = mid + 2;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let result: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] == arr[i + 1]) {\n            i++;\n        }\n        else {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "  let left = 0;\n  let right = arr.length - 1;\n  while (left < right) {\n    let mid = Math.floor((left + right) / 2);\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        right = mid - 2;\n      } else {\n        left = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        left = mid + 2;\n      } else {\n        right = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n  }\n  return arr[left];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let i = 0;\n  while (i < arr.length) {\n    if (arr[i] === arr[i + 1]) {\n      i += 2;\n    } else {\n      return arr[i];\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else {\n                high = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n\nconsole.log(search([1, 1, 2, 4, 4, 5, 5, 6, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3]));\nconsole.log(search([1, 1, 2, 2, 3]));\nconsole.log(search([1, 1, 2, 2]));\nconsole.log(search([1, 1, 2]));\nconsole.log(search([1, 1]));\nconsole.log(search([1]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let start: number = 0;\n    let end: number = arr.length - 1;\n    let mid: number = Math.floor((start + end) / 2);\n    while (start < end) {\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return arr[mid];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      i++;\n    } else {\n      result = arr[i];\n      break;\n    }\n  }\n  return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return arr[start];\n}\n",
    "    let i: number = 0;\n    let j: number = arr.length - 1;\n    while (i < j) {\n        let mid: number = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "  let low: number = 0;\n  let high: number = arr.length - 1;\n  while (low <= high) {\n    let mid: number = Math.floor((low + high) / 2);\n    if (mid % 2 == 0) {\n      if (arr[mid] == arr[mid + 1]) {\n        low = mid + 2;\n      } else {\n        high = mid;\n      }\n    } else {\n      if (arr[mid] == arr[mid - 1]) {\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n    }\n  }\n  return arr[low];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\nconsole.log(search([1, 1, 2, 4, 4, 5, 5, 6, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 5, 5, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3]));\nconsole.log(search([1, 1, 2, 2, 3]));\nconsole.log(search([1, 1, 2, 2]));\nconsole.log(search([1, 1, 2]));\nconsole.log(search([1, 1]));\nconsole.log(search([1]));\nconsole.log(search([]));",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        }\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let result: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            result = arr[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let n = arr.length;\n    let i = 0;\n    while (i < n) {\n        if (i == n - 1)\n            return arr[i];\n        if (arr[i] != arr[i + 1])\n            return arr[i];\n        i += 2;\n    }\n    return -1;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid === 0 || mid === arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        } else {\n            if (mid % 2 === 0) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0) {\n                start = mid + 1;\n            } else {\n                end = mid - 2;\n            }\n        }\n        if (arr[mid] == arr[mid + 1]) {\n            if ((mid + 1) % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else {\n                high = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 == 0) {\n      if (arr[mid] == arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else {\n      if (arr[mid] == arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n",
    "    let n = arr.length;\n    let i = 0;\n    while (i < n) {\n        if (arr[i] != arr[i + 1]) {\n            return arr[i];\n        }\n        i = i + 2;\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid;\n    while (start <= end) {\n        mid = Math.floor((start + end) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    if (arr.length === 1) {\n        return arr[0];\n    }\n    for (let i = 0; i < arr.length; i += 2) {\n        if (arr[i] !== arr[i + 1]) {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 50, 50, 65, 65]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50, 50, 65]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50, 50, 65, 65, 66]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50, 50, 65, 65, 66, 66]));\nconsole.log(search([1]));\nconsole.log(search([1, 1]));\nconsole.log(search([1, 1, 2]));\nconsole.log(search([1, 1, 2, 2]));\nconsole.log(search([1, 1, 2, 2, 3]));\nconsole.log(search([1, 1, 2, 2, 3, 3]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50, 50]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50, 50, 65]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 50, 50, 65, 65]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4",
    "  let i: number;\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n      return arr[i];\n    }\n  }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid;\n    while (start <= end) {\n        mid = Math.floor((start + end) / 2);\n        if (mid === 0 || arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n            return arr[mid];\n        } else if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    let mid = 0;\n    while (i <= j) {\n        mid = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n            return arr[mid];\n        else if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0)\n                i = mid + 1;\n            else\n                j = mid - 2;\n        }\n        else if (arr[mid] == arr[mid + 1]) {\n            if ((mid + 1) % 2 == 0)\n                i = mid + 2;\n            else\n                j = mid - 1;\n        }\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    let mid = Math.floor((low + high) / 2);\n    if (mid % 2 == 0) {\n      if (arr[mid] == arr[mid + 1]) {\n        low = mid + 2;\n      } else {\n        high = mid;\n      }\n    } else {\n      if (arr[mid] == arr[mid - 1]) {\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n    }\n  }\n  return arr[low];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            }\n            else {\n                end = mid;\n            }\n        }\n        else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            }\n            else {\n                end = mid - 1;\n            }\n        }\n    }\n    return arr[start];\n}\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 == 0) {\n      if (arr[mid] == arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else if (mid % 2 == 1) {\n      if (arr[mid] == arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 4, 4, 5, 5, 6, 6]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start: number = 0;\n    let end: number = arr.length - 1;\n    while (start <= end) {\n        let mid: number = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                low = mid + 1;\n            }\n            else {\n                high = mid - 1;\n            }\n        }\n        else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                high = mid - 1;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  let mid = Math.floor((start + end) / 2);\n  while (start < end) {\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        end = mid - 2;\n      } else {\n        start = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        start = mid + 2;\n      } else {\n        end = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n    mid = Math.floor((start + end) / 2);\n  }\n  return arr[mid];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else {\n                high = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n      return arr[mid];\n    }\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        end = mid - 2;\n      } else {\n        start = mid + 1;\n      }\n    } else {\n      if (mid % 2 === 0) {\n        start = mid + 2;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[mid];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\nconsole.log(search([1, 1, 2, 4, 4, 5, 5, 6, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 5, 5, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3]));\nconsole.log(search([1, 1, 2, 2, 3]));\nconsole.log(search([1, 1, 2, 2]));\nconsole.log(search([1, 1, 2]));\nconsole.log(search([1, 1]));\nconsole.log(search([1]));\nconsole.log(search([]));",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                i = mid + 2;\n            } else {\n                j = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        }\n    }\n    return arr[i];\n}\n",
    "    let left = 0;\n    let right = arr.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                right = mid - 2;\n            } else {\n                left = mid + 1;\n            }\n        } else {\n            if (mid % 2 === 0) {\n                left = mid + 2;\n            } else {\n                right = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                high = mid - 2;\n            } else {\n                low = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                low = mid + 2;\n            } else {\n                high = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        }\n    }\n    return arr[i];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let left = 0;\n  let right = arr.length - 1;\n  while (left < right) {\n    let mid = Math.floor((left + right) / 2);\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        right = mid - 2;\n      } else {\n        left = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        left = mid + 2;\n      } else {\n        right = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n  }\n  return arr[left];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start: number = 0;\n    let end: number = arr.length - 1;\n    while (start <= end) {\n        let mid: number = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                start = mid + 1;\n            }\n            else {\n                end = mid - 1;\n            }\n        }\n        else {\n            if (mid % 2 == 0) {\n                end = mid - 1;\n            }\n            else {\n                start = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return arr[start];\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                high = mid - 2;\n            } else {\n                low = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                low = mid + 2;\n            } else {\n                high = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[mid];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                low = mid + 2;\n            } else {\n                high = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    return arr[low];\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start < end) {\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return arr[mid];\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 == 0) {\n      if (arr[mid] == arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else {\n      if (arr[mid] == arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i: number = 0;\n    while (i < arr.length - 1) {\n        if (arr[i] == arr[i + 1]) {\n            i = i + 2;\n        }\n        else {\n            return arr[i];\n        }\n    }\n    return arr[i];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let n = arr.length;\n    let low = 0;\n    let high = n - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (mid == 0 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1])\n            return arr[mid];\n        else if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0)\n                low = mid + 1;\n            else\n                high = mid - 2;\n        }\n        else if (arr[mid] == arr[mid + 1]) {\n            if ((mid + 1) % 2 == 0)\n                low = mid + 2;\n            else\n                high = mid - 1;\n        }\n    }\n    return -1;\n}\n",
    "  let left = 0;\n  let right = arr.length - 1;\n  while (left < right) {\n    let mid = Math.floor((left + right) / 2);\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        right = mid - 2;\n      } else {\n        left = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        left = mid + 2;\n      } else {\n        right = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n  }\n  return arr[left];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    if (arr.length === 1) {\n        return arr[0];\n    }\n    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n",
    "    let start: number = 0;\n    let end: number = arr.length - 1;\n    while (start <= end) {\n        let mid: number = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                start = mid + 1;\n            }\n            else {\n                end = mid - 1;\n            }\n        }\n        else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 1;\n            }\n            else {\n                start = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    let mid = 0;\n    while (i <= j) {\n        mid = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "  let i = 0;\n  while (i < arr.length) {\n    if (arr[i] === arr[i + 1]) {\n      i += 2;\n    } else {\n      return arr[i];\n    }\n  }\n}\n",
    "    let result: number = -1;\n    for (let i: number = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let n = arr.length;\n    let i = 0;\n    while (i < n) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i = i + 2;\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i: number = 0;\n    while (i < arr.length) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        result = result ^ arr[i];\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n      return arr[mid];\n    } else if (arr[mid] == arr[mid - 1]) {\n      if (mid % 2 == 0) {\n        end = mid - 2;\n      } else {\n        start = mid + 1;\n      }\n    } else if (arr[mid] == arr[mid + 1]) {\n      if (mid % 2 == 0) {\n        start = mid + 2;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                i = mid + 2;\n            } else {\n                j = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        }\n    }\n    return arr[i];\n}\n",
    "    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] == arr[i + 1]) {\n            i++;\n        } else {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      i++;\n    } else {\n      result = arr[i];\n      break;\n    }\n  }\n  return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let left = 0;\n  let right = arr.length - 1;\n\n  while (left < right) {\n    const mid = Math.floor((left + right) / 2);\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        right = mid - 2;\n      } else {\n        left = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        left = mid + 2;\n      } else {\n        right = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n  }\n  return arr[left];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n      result = arr[i];\n      break;\n    }\n  }\n  return result;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let result: number = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            result = arr[i];\n        }\n    }\n    return result;\n}\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0) {\n                start = mid + 1;\n            } else {\n                end = mid - 2;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i: number = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "  let left = 0;\n  let right = arr.length - 1;\n  while (left < right) {\n    let mid = Math.floor((left + right) / 2);\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        right = mid - 2;\n      } else {\n        left = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        left = mid + 2;\n      } else {\n        right = mid - 1;\n      }\n    } else {\n      return arr[mid];\n    }\n  }\n  return arr[left];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i: number = 0;\n    let j: number = arr.length - 1;\n    while (i < j) {\n        let mid: number = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        }\n    }\n    return arr[i];\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid % 2 == 0) {\n            if (arr[mid] == arr[mid + 1]) {\n                start = mid + 2;\n            } else {\n                end = mid;\n            }\n        } else {\n            if (arr[mid] == arr[mid - 1]) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return arr[start];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n\nconsole.log(search([1, 1, 3, 3, 4, 5, 5, 7, 7, 8, 8]));\nconsole.log(search([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 3, 3, 4, 5, 5, 7, 7, 8, 8]));\nconsole.log(search([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n      return arr[mid];\n    }\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        end = mid - 2;\n      } else {\n        start = mid + 1;\n      }\n    } else {\n      if (mid % 2 === 0) {\n        start = mid + 2;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            result = arr[i];\n        }\n    }\n    return result;\n}\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let left: number = 0;\n    let right: number = arr.length - 1;\n    while (left < right) {\n        let mid: number = Math.floor((left + right) / 2);\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                right = mid - 2;\n            } else {\n                left = mid + 1;\n            }\n        } else if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                left = mid + 2;\n            } else {\n                right = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[left];\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n",
    "  let i = 0;\n  while (i < arr.length) {\n    if (arr[i] === arr[i + 1]) {\n      i += 2;\n    } else {\n      return arr[i];\n    }\n  }\n  return -1;\n}\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        let mid = Math.floor((i + j) / 2);\n        if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                i = mid + 2;\n            } else {\n                j = mid - 1;\n            }\n        } else if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                j = mid - 2;\n            } else {\n                i = mid + 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return arr[i];\n}\n",
    "    let low = 0;\n    let high = arr.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                high = mid - 2;\n            } else {\n                low = mid + 1;\n            }\n        } else if (arr[mid] === arr[mid + 1]) {\n            if (mid % 2 === 0) {\n                low = mid + 2;\n            } else {\n                high = mid - 1;\n            }\n        } else {\n            return arr[mid];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\nconsole.log(search([1, 1, 2, 4, 4, 5, 5, 6, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 5, 5, 6]));\nconsole.log(search([1, 1, 2, 2, 3, 4, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 5, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4, 5]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3, 4]));\nconsole.log(search([1, 1, 2, 2, 3, 3]));\nconsole.log(search([1, 1, 2, 2, 3]));\nconsole.log(search([1, 1, 2, 2]));\nconsole.log(search([1, 1, 2]));\nconsole.log(search([1, 1]));\nconsole.log(search([1]));\nconsole.log(search([]));",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low <= high) {\n    let mid = Math.floor((low + high) / 2);\n    if (mid % 2 == 0) {\n      if (arr[mid] == arr[mid + 1]) {\n        low = mid + 2;\n      } else {\n        high = mid;\n      }\n    } else {\n      if (arr[mid] == arr[mid - 1]) {\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n    }\n  }\n  return arr[low];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start <= end) {\n        if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] === arr[mid - 1]) {\n            if (mid % 2 === 0) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        } else {\n            if (mid % 2 === 0) {\n                end = mid - 1;\n            } else {\n                start = mid + 1;\n            }\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n      return arr[mid];\n    } else if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        end = mid - 2;\n      } else {\n        start = mid + 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        start = mid + 2;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let result: number = 0;\n    let i: number = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            result = arr[i];\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(search([1, 1, 3, 3, 4, 5, 5, 7, 7, 8, 8]));\nconsole.log(search([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] !== arr[i + 1] && arr[i] !== arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  while (low < high) {\n    let mid = Math.floor((low + high) / 2);\n    if (mid % 2 === 0) {\n      if (arr[mid] === arr[mid + 1]) {\n        low = mid + 2;\n      } else {\n        high = mid;\n      }\n    } else {\n      if (arr[mid] === arr[mid - 1]) {\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n    }\n  }\n  return arr[low];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid % 2 === 0) {\n      if (arr[mid] === arr[mid + 1]) {\n        start = mid + 2;\n      } else {\n        end = mid;\n      }\n    } else {\n      if (arr[mid] === arr[mid - 1]) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return arr[start];\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid === 0 || mid === arr.length - 1) {\n      return arr[mid];\n    }\n    if (arr[mid] !== arr[mid - 1] && arr[mid] !== arr[mid + 1]) {\n      return arr[mid];\n    }\n    if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        start = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    } else {\n      if (mid % 2 === 0) {\n        end = mid - 1;\n      } else {\n        start = mid + 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (mid == 0 || mid == arr.length - 1) {\n            return arr[mid];\n        }\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0) {\n                start = mid + 1;\n            } else {\n                end = mid - 2;\n            }\n        } else {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n",
    "    let i: number = 0;\n    let j: number = arr.length - 1;\n    while (i < j) {\n        let mid: number = Math.floor((i + j) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if ((mid - 1) % 2 == 0) {\n                i = mid + 1;\n            }\n            else {\n                j = mid - 2;\n            }\n        }\n        else {\n            if (mid % 2 == 0) {\n                i = mid + 2;\n            }\n            else {\n                j = mid - 1;\n            }\n        }\n    }\n    return arr[i];\n}\n",
    "  let low = 0;\n  let high = arr.length - 1;\n  let mid = 0;\n  while (low <= high) {\n    mid = Math.floor((low + high) / 2);\n    if (mid === 0 || arr[mid - 1] < arr[mid] && arr[mid + 1] > arr[mid]) {\n      return arr[mid];\n    } else if (arr[mid] === arr[mid - 1]) {\n      if (mid % 2 === 0) {\n        low = mid + 1;\n      } else {\n        high = mid - 1;\n      }\n    } else if (arr[mid] === arr[mid + 1]) {\n      if (mid % 2 === 0) {\n        high = mid - 1;\n      } else {\n        low = mid + 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let start = 0;\n    let end = arr.length - 1;\n\n    while (start <= end) {\n        let mid = Math.floor((start + end) / 2);\n        if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n            return arr[mid];\n        }\n        if (arr[mid] == arr[mid - 1]) {\n            if (mid % 2 == 0) {\n                end = mid - 2;\n            } else {\n                start = mid + 1;\n            }\n        }\n        if (arr[mid] == arr[mid + 1]) {\n            if (mid % 2 == 0) {\n                start = mid + 2;\n            } else {\n                end = mid - 1;\n            }\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    let mid = Math.floor((start + end) / 2);\n    if (mid == 0 || mid == arr.length - 1) {\n      return arr[mid];\n    }\n    if (arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]) {\n      return arr[mid];\n    } else if (arr[mid] == arr[mid - 1]) {\n      if (mid % 2 == 0) {\n        end = mid - 2;\n      } else {\n        start = mid + 1;\n      }\n    } else if (arr[mid] == arr[mid + 1]) {\n      if (mid % 2 == 0) {\n        start = mid + 2;\n      } else {\n        end = mid - 1;\n      }\n    }\n  }\n  return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] === arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] != arr[i + 1] && arr[i] != arr[i - 1]) {\n            return arr[i];\n        }\n        i++;\n    }\n    return -1;\n}\n",
    "    let result = 0;\n    for (let i = 0; i < arr.length; i++) {\n        result = result ^ arr[i];\n    }\n    return result;\n}\n",
    "    let i = 0;\n    while (i < arr.length) {\n        if (arr[i] == arr[i + 1]) {\n            i += 2;\n        } else {\n            return arr[i];\n        }\n    }\n    return -1;\n}\n\nconsole.log(search([1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]));\n"
  ]
}
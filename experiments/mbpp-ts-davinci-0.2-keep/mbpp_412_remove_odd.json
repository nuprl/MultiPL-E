{
  "name": "mbpp_412_remove_odd",
  "language": "ts",
  "prompt": "//Write a python function to remove odd numbers from a given list.\nfunction remove_odd(l: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_odd;\n  assert.deepEqual(candidate([1, 2, 3]),[2]);\n  assert.deepEqual(candidate([2, 4, 6]),[2, 4, 6]);\n  assert.deepEqual(candidate([10, 20, 3]),[10, 20]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return l.filter(function (x) { return x % 2 == 0 });\n}\nconsole.log(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    return l.filter(function (n) {\n        return n % 2 == 0;\n    });\n}\n",
    "    return l.filter(function (x) { return x % 2 == 0; });\n}\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    return l.filter(function (value) {\n        return value % 2 == 0;\n    });\n}\n\nconsole.log(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    return l.filter(function(value) {\n        return value % 2 == 0;\n    });\n}\n\nconsole.log(remove_odd([1,2,3,4,5,6,7,8,9,10]));\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    return l.filter(function (value) {\n        return value % 2 == 0;\n    });\n}\n",
    "    return l.filter(function (value) {\n        return value % 2 == 0;\n    });\n}\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    let even_list: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] % 2 == 0) {\n            even_list.push(l[i]);\n        }\n    }\n    return even_list;\n}\n\nconsole.log(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    return l.filter(x => x % 2 == 0);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] % 2 == 0) {\n            result.push(l[i]);\n        }\n    }\n    return result;\n}\n\nconsole.log(remove_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    return l.filter(function (x) { return x % 2 == 0; });\n}\n",
    "    return l.filter(function (value) {\n        return value % 2 == 0;\n    });\n}\n",
    "    let even: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] % 2 == 0) {\n            even.push(l[i]);\n        }\n    }\n    return even;\n}\n\nlet l: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(remove_odd(l));\n",
    "    return l.filter(n => n % 2 == 0);\n}\n"
  ]
}
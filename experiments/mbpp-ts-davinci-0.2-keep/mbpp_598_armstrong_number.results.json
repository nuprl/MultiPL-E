{
  "name": "mbpp_598_armstrong_number",
  "language": "ts",
  "prompt": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    return false;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510426,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder ** 3;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum += remainder ** 3;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123066,
      "stdout": "../../../../tmp/tmp8oj_oqd8.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123068,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let armstrong_number: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        armstrong_number += remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return armstrong_number == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(370));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let temp: number = number;\n  let sum: number = 0;\n  let remainder: number;\n  while (temp != 0) {\n    remainder = temp % 10;\n    sum = sum + remainder * remainder * remainder;\n    temp = Math.floor(temp / 10);\n  }\n  if (sum == number) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    return false;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123064,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum === number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let originalNumber: number = number;\n    let remainder: number = 0;\n    let result: number = 0;\n    while (originalNumber != 0) {\n        remainder = originalNumber % 10;\n        result += Math.pow(remainder, 3);\n        originalNumber = Math.floor(originalNumber / 10);\n    }\n    if (result == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum += remainder ** 3;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(9474));\nconsole.log(armstrong_number(54748));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\ntrue\nfalse\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let originalNumber: number = number;\n    let noOfDigits: number = number.toString().length;\n    let result: number = 0;\n    while (originalNumber != 0) {\n        let remainder: number = originalNumber % 10;\n        result += Math.pow(remainder, noOfDigits);\n        originalNumber = Math.floor(originalNumber / 10);\n    }\n    if (result == number) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let originalNumber: number = number;\n    let remainder: number;\n    let result: number = 0;\n    while (originalNumber != 0) {\n        remainder = originalNumber % 10;\n        result += remainder * remainder * remainder;\n        originalNumber /= 10;\n    }\n    if (result == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp81rus81i.js:23:12)\n    at Object.<anonymous> (/tmp/tmp81rus81i.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let sum = 0;\n  let temp = number;\n  while (temp > 0) {\n    sum += Math.pow(temp % 10, 3);\n    temp = Math.floor(temp / 10);\n  }\n  return sum === number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return (number == sum);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp = number;\n    let sum = 0;\n    let remainder;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum === number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = temp / 10;\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet result: boolean = armstrong_number(153);\nconsole.log(result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123071,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7xnwqdyb.js:22:12)\n    at Object.<anonymous> (/tmp/tmp7xnwqdyb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let temp: number = number;\n  let sum: number = 0;\n  let remainder: number;\n  while (temp > 0) {\n    remainder = temp % 10;\n    sum = sum + remainder * remainder * remainder;\n    temp = Math.floor(temp / 10);\n  }\n  if (sum == number) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123064,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp != 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = temp / 10;\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpd0kvcovs.js:23:12)\n    at Object.<anonymous> (/tmp/tmpd0kvcovs.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123063,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum += remainder ** 3;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum === number) {\n        return true;\n    }\n    return false;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123059,
      "stdout": "../../../../tmp/tmptp_4_s98.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nlet result: boolean = armstrong_number(153);\nconsole.log(result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp = number;\n    let sum = 0;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (number == sum) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (number > 0) {\n        remainder = number % 10;\n        sum = sum + (remainder * remainder * remainder);\n        number = Math.floor(number / 10);\n    }\n    if (temp == sum) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp !== 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum === number) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123066,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let originalNumber: number = number;\n    let result: number = 0;\n    let remainder: number;\n    while (originalNumber != 0) {\n        remainder = originalNumber % 10;\n        result += Math.pow(remainder, 3);\n        originalNumber = Math.floor(originalNumber / 10);\n    }\n    if (result == number)\n        return true;\n    else\n        return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum += remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum === number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    return false;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let sum: number = 0;\n  let temp: number = number;\n  while (temp > 0) {\n    sum += Math.pow(temp % 10, 3);\n    temp = Math.floor(temp / 10);\n  }\n  return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp = number;\n    let sum = 0;\n    let remainder = 0;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (number == sum) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp != 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let originalNumber: number, remainder: number, result: number = 0;\n    originalNumber = number;\n    while (originalNumber != 0) {\n        remainder = originalNumber % 10;\n        result += Math.pow(remainder, 3);\n        originalNumber /= 10;\n    }\n    if (result == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "false\nfalse\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu_nsyhuy.js:22:12)\n    at Object.<anonymous> (/tmp/tmpu_nsyhuy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = temp / 10;\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpirnjtxtm.js:22:12)\n    at Object.<anonymous> (/tmp/tmpirnjtxtm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123060,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum === number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum === number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123063,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123076,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum === number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp = number;\n    let sum = 0;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let sum: number = 0;\n  let temp: number = number;\n  while (temp > 0) {\n    let remainder: number = temp % 10;\n    sum = sum + remainder * remainder * remainder;\n    temp = Math.floor(temp / 10);\n  }\n  return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123063,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = temp / 10;\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nlet result: boolean = armstrong_number(153);\nconsole.log(result);\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "false\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpir2muioz.js:23:12)\n    at Object.<anonymous> (/tmp/tmpir2muioz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp != 0) {\n        sum += Math.pow(temp % 10, 3);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123058,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum = 0;\n    let temp = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    var temp: number = number;\n    var sum: number = 0;\n    var remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123077,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let total: number = 0;\n    let rem: number;\n    while (temp != 0) {\n        rem = temp % 10;\n        total = total + (rem * rem * rem);\n        temp = Math.floor(temp / 10);\n    }\n    return (total == number);\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let sum: number = 0;\n  let temp: number = number;\n  while (temp > 0) {\n    let remainder: number = temp % 10;\n    sum = sum + remainder * remainder * remainder;\n    temp = Math.floor(temp / 10);\n  }\n  if (sum == number) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(371));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmpsoqhgfkw.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let sum = 0;\n  let temp = number;\n  while (temp > 0) {\n    sum += Math.pow(temp % 10, 3);\n    temp = Math.floor(temp / 10);\n  }\n  return sum === number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp = number;\n    let sum = 0;\n    while (temp > 0) {\n        let rem = temp % 10;\n        sum = sum + rem * rem * rem;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum += remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(370));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let rem: number = temp % 10;\n        sum = sum + (rem * rem * rem);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    return false;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123058,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n  let temp: number = number;\n  let sum: number = 0;\n  let remainder: number;\n  while (temp != 0) {\n    remainder = temp % 10;\n    sum = sum + remainder * remainder * remainder;\n    temp = Math.floor(temp / 10);\n  }\n  if (sum == number) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum += remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123074,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let total: number = 0;\n    let rem: number;\n    while (temp != 0) {\n        rem = temp % 10;\n        total = total + (rem * rem * rem);\n        temp = Math.floor(temp / 10);\n    }\n    return (total == number);\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(1634));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(123));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    return sum == number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123058,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number = 0;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123066,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum += remainder * remainder * remainder;\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123080,
      "stdout": "true\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let sum: number = 0;\n    let temp: number = number;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(armstrong_number(407));\nconsole.log(armstrong_number(371));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123079,
      "stdout": "../../../../tmp/tmplb3r0grs.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp != 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\nconsole.log(armstrong_number(154));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510427,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    let remainder: number;\n    while (temp > 0) {\n        remainder = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(armstrong_number(153));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1665510429,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to check whether the given number is armstrong or not.\nfunction armstrong_number(number: number): boolean {\n    let temp: number = number;\n    let sum: number = 0;\n    while (temp > 0) {\n        let remainder: number = temp % 10;\n        sum = sum + (remainder * remainder * remainder);\n        temp = Math.floor(temp / 10);\n    }\n    if (sum == number) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = armstrong_number;\n  assert.deepEqual(candidate(153),true);\n  assert.deepEqual(candidate(259),false);\n  assert.deepEqual(candidate(4458),false);\n}\n\ntest();",
      "timestamp": 1666123057,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_90_len_log",
  "language": "ts",
  "prompt": "//Write a python function to find the length of the longest word.\nfunction len_log(list1: string[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = len_log;\n  assert.deepEqual(candidate([\"python\", \"PHP\", \"bigdata\"]),7);\n  assert.deepEqual(candidate([\"a\", \"ab\", \"abc\"]),3);\n  assert.deepEqual(candidate([\"small\", \"big\", \"tall\"]),5);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(len_log([\"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max = list1[0].length;\n    for (let i = 1; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(len_log([\"ab\", \"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(len_log([\"sai\", \"sai\", \"sai\"]));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nlet list1: string[] = [\"abc\", \"abcd\", \"abcde\"];\nconsole.log(len_log(list1));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n",
    "    let len = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (len < list1[i].length) {\n            len = list1[i].length;\n        }\n    }\n    return len;\n}\nconsole.log(len_log([\"abcd\", \"ab\", \"abc\", \"abcd\"]));\n",
    "    let len: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > len) {\n            len = list1[i].length;\n        }\n    }\n    return len;\n}\n",
    "    let long_word = list1[0];\n    for (let i = 1; i < list1.length; i++) {\n        if (list1[i].length > long_word.length) {\n            long_word = list1[i];\n        }\n    }\n    return long_word.length;\n}\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nlet list1: string[] = [\"abc\", \"abcd\", \"abcde\"];\nconsole.log(len_log(list1));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(len_log([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (max < list1[i].length) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nlet list1: string[] = [\"abc\", \"abcd\", \"abcde\", \"abcdef\"];\nconsole.log(len_log(list1));\n",
    "    let len = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (len < list1[i].length) {\n            len = list1[i].length;\n        }\n    }\n    return len;\n}\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(len_log(['ab', 'abc', 'abcd', 'abcde']));\n",
    "    let max: number = list1[0].length;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\nconsole.log(len_log([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let max: number = list1[0].length;\n    for (let i: number = 1; i < list1.length; i++) {\n        if (list1[i].length > max) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n",
    "  let max: number = 0;\n  for (let i: number = 0; i < list1.length; i++) {\n    if (list1[i].length > max) {\n      max = list1[i].length;\n    }\n  }\n  return max;\n}\n\nconsole.log(len_log([\"abc\", \"abcde\", \"abcd\", \"abcdef\"]));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (max < list1[i].length) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n\nconsole.log(len_log([\"abc\", \"abcd\", \"abcde\"]));\n",
    "    let max: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (max < list1[i].length) {\n            max = list1[i].length;\n        }\n    }\n    return max;\n}\n",
    "    var len: number = 0;\n    var max: number = 0;\n    for (var i = 0; i < list1.length; i++) {\n        len = list1[i].length;\n        if (len > max) {\n            max = len;\n        }\n    }\n    return max;\n}\nvar list1: string[] = [\"hello\", \"hi\", \"how\", \"are\", \"you\"];\nconsole.log(len_log(list1));\n"
  ]
}
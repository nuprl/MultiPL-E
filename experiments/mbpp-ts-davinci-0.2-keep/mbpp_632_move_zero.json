{
  "name": "mbpp_632_move_zero",
  "language": "ts",
  "prompt": "//Write a python function to move all zeroes to the end of the given list.\nfunction move_zero(num_list: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_zero;\n  assert.deepEqual(candidate([1, 0, 2, 0, 3, 4]),[1, 2, 3, 4, 0, 0]);\n  assert.deepEqual(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]),[2, 3, 2, 4, 5, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([0, 1, 0, 1, 1]),[1, 1, 1, 0, 0]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let a: number = 0;\n    let b: number = num_list.length - 1;\n\n    while (a < b) {\n        while (num_list[a] != 0) {\n            a++;\n        }\n        while (num_list[b] == 0) {\n            b--;\n        }\n        if (a < b) {\n            let temp = num_list[a];\n            num_list[a] = num_list[b];\n            num_list[b] = temp;\n        }\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,0,3,12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a = [0, 0, 0];\n    let b = num_list.filter(val => val != 0);\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number = 0;\n    let b: number = num_list.length - 1;\n\n    while (a < b) {\n        while (num_list[a] != 0) {\n            a++;\n        }\n        while (num_list[b] == 0) {\n            b--;\n        }\n        if (a < b) {\n            let temp: number = num_list[a];\n            num_list[a] = num_list[b];\n            num_list[b] = temp;\n        }\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,0,3,12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let zero_list: number[] = [];\n    let non_zero_list: number[] = [];\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            zero_list.push(num_list[i]);\n        } else {\n            non_zero_list.push(num_list[i]);\n        }\n    }\n    return non_zero_list.concat(zero_list);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "  let a: number[] = [];\n  let b: number[] = [];\n\n  for (let i = 0; i < num_list.length; i++) {\n    if (num_list[i] != 0) {\n      a.push(num_list[i]);\n    } else {\n      b.push(num_list[i]);\n    }\n  }\n\n  return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number = 0;\n    let b: number = num_list.length - 1;\n    while (a < b) {\n        while (num_list[a] != 0) {\n            a++;\n        }\n        while (num_list[b] == 0) {\n            b--;\n        }\n        if (a < b) {\n            num_list[a] = num_list[b];\n            num_list[b] = 0;\n        }\n    }\n    return num_list;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\nconsole.log(move_zero([1, 2, 0, 0, 2, 312, 33, 0, 0]));\nconsole.log(move_zero([0, 0, 0]));\nconsole.log(move_zero([1, 2, 312, 11, 2]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 6]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a = [0, 0, 0];\n    let b = num_list.filter(val => val != 0);\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4]));\nconsole.log(move_zero([1, 2, 3, 4, 0, 0, 0, 0]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,0,3,12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,0,3,12]));\n",
    "    let a: number = 0;\n    let b: number = num_list.length - 1;\n    while (a < b) {\n        while (num_list[a] != 0) {\n            a++;\n        }\n        while (num_list[b] == 0) {\n            b--;\n        }\n        if (a < b) {\n            num_list[a] = num_list[b];\n            num_list[b] = 0;\n        }\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nlet num_list: number[] = [0, 1, 0, 3, 12];\nconsole.log(move_zero(num_list));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a = [0, 0, 0];\n    let b = num_list.filter(val => val != 0);\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]));\nconsole.log(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12, 0]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12, 0]));\nconsole.log(move_zero([1, 2, 0, 1, 0, 1, 0, 3, 0, 1]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]));\nconsole.log(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]));\nconsole.log(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        }\n        else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n    let output: number[] = [];\n    for (let i in num_list) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    output = b.concat(a);\n    return output;\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12, 0]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12, 0]));\nconsole.log(move_zero([1, -5, 0, 0, 8, 12, -2]));\nconsole.log(move_zero([1, -5, 0, 0, 8, 12, -2]));\nconsole.log(move_zero([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]));\nconsole.log(move_zero([0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a = [0, 0, 0];\n    let b = num_list.filter(val => val != 0);\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a = [0, 0];\n    let b = num_list.filter(num => num !== 0);\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 6]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        }\n        else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12, 0]));\nconsole.log(move_zero([12, 0, 10, 0, 8, 12, 7, 6, 0, 4, 10, 12, 0]));\nconsole.log(move_zero([1, 2, 0, 1, 0, 1, 0, 3, 0, 1]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]));\nconsole.log(move_zero([1,2,0,10,4,1,0,56,2,0,1,3,0,56,0,4]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4, 0, 5]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number = 0;\n    let b: number = num_list.length - 1;\n\n    while (a < b) {\n        while (num_list[a] != 0) {\n            a++;\n        }\n        while (num_list[b] == 0) {\n            b--;\n        }\n        if (a < b) {\n            num_list[a] = num_list[b];\n            num_list[b] = 0;\n        }\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        }\n        else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number = 0;\n    let b: number = num_list.length - 1;\n\n    while (a < b) {\n        while (num_list[a] != 0) {\n            a++;\n        }\n        while (num_list[b] == 0) {\n            b--;\n        }\n        if (a < b) {\n            num_list[a] = num_list[b];\n            num_list[b] = 0;\n        }\n    }\n    return num_list;\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] == 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i = 0; i < num_list.length; i++) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0,1,0,3,12]));\n",
    "    let a: number[] = [];\n    let b: number[] = [];\n\n    for (let i in num_list) {\n        if (num_list[i] != 0) {\n            a.push(num_list[i]);\n        } else {\n            b.push(num_list[i]);\n        }\n    }\n\n    return a.concat(b);\n}\n\nconsole.log(move_zero([0, 1, 0, 3, 12]));\n",
    "    let a = [0, 0];\n    let b = num_list.filter(function (num) {\n        return num !== 0;\n    });\n    return b.concat(a);\n}\nconsole.log(move_zero([0, 1, 0, 2, 0, 3, 0, 4]));\n"
  ]
}
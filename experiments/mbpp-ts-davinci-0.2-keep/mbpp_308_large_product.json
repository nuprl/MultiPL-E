{
  "name": "mbpp_308_large_product",
  "language": "ts",
  "prompt": "//Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\nfunction large_product(nums1: number[], nums2: number[], N: number): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = large_product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 3),[60, 54, 50]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 4),[60, 54, 50, 48]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 5),[60, 54, 50, 48, 45]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max1 = -Infinity;\n        let max2 = -Infinity;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max1 = j;\n                    max2 = k;\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max1, 1);\n        nums2.splice(max2, 1);\n    }\n    return res;\n}\n\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 2));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 3));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 4));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 5));\n",
    "    let result: number[] = [];\n    let max1: number = Math.max(...nums1);\n    let max2: number = Math.max(...nums2);\n    let max: number = max1 * max2;\n    let min1: number = Math.min(...nums1);\n    let min2: number = Math.min(...nums2);\n    let min: number = min1 * min2;\n    let temp: number = 0;\n    for (let i: number = 0; i < N; i++) {\n        if (max > min) {\n            temp = max;\n            max = min;\n            min = temp;\n        }\n        for (let j: number = 0; j < nums1.length; j++) {\n            for (let k: number = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                }\n                if (nums1[j] * nums2[k] < min) {\n                    min = nums1[j] * nums2[k];\n                }\n            }\n        }\n        result.push(max);\n        max = min;\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let temp: number = 0;\n    let temp1: number = 0;\n    let temp2: number = 0;\n    let temp3: number = 0;\n    let temp4: number = 0;\n    let temp5: number = 0;\n    let temp6: number = 0;\n    let temp7: number = 0;\n    let temp8: number = 0;\n    let temp9: number = 0;\n    let temp10: number = 0;\n    let temp11: number = 0;\n    let temp12: number = 0;\n    let temp13: number = 0;\n    let temp14: number = 0;\n    let temp15: number = 0;\n    let temp16: number = 0;\n    let temp17: number = 0;\n    let temp18: number = 0;\n    let temp19: number = 0;\n    let temp20: number = 0;\n    let temp21: number = 0;\n    let temp22: number = 0;\n    let temp23: number = 0;\n    let temp24: number = 0;\n    let temp25: number = 0;\n    let temp26: number = 0;\n    let temp27: number = 0;\n    let temp28: number = 0;\n    let temp29: number = 0;\n    let temp30: number = 0;\n    let temp31: number = 0;\n    let temp32: number = 0;\n    let temp33: number = 0;\n    let temp34: number = 0;\n    let temp35: number = 0;\n    let temp36: number = 0;\n    let temp37: number = 0;\n    let temp38: number = 0;\n    let temp39: number = 0;\n    let temp40: number = 0;\n    let temp41: number = 0;\n    let temp42: number = 0;\n    let temp43: number = 0;\n    let temp44: number = 0;\n    let temp45: number = 0;\n    let temp46: number = 0;\n    let temp47: number",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        res.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let max1: number = Math.max(...nums1);\n    let max2: number = Math.max(...nums2);\n    let max: number = max1 * max2;\n    for (let i = 0; i < N; i++) {\n        result.push(max);\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] < max) {\n                    max = nums1[j] * nums2[k];\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (N > 0) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j]) {\n            res.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            res.push(nums1[i + 1] * nums2[j]);\n            i++;\n        }\n        N--;\n    }\n    return res;\n}\n",
    "    let res = [];\n    let i = 0;\n    let j = 0;\n    while (N > 0) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j]) {\n            res.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            res.push(nums1[i + 1] * nums2[j]);\n            i++;\n        }\n        N--;\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  let result = [];\n  let max = 0;\n  for (let i = 0; i < nums1.length; i++) {\n    for (let j = 0; j < nums2.length; j++) {\n      let product = nums1[i] * nums2[j];\n      if (product > max) {\n        result.push(product);\n        max = product;\n      }\n    }\n  }\n  return result.sort((a, b) => b - a).slice(0, N);\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 10));\n",
    "    let result: number[] = [];\n    let nums1_sorted = nums1.sort((a, b) => b - a);\n    let nums2_sorted = nums2.sort((a, b) => b - a);\n    let i = 0;\n    let j = 0;\n    while (result.length < N) {\n        if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n            result.push(nums1_sorted[i] * nums2_sorted[j]);\n            j++;\n        } else {\n            result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4], [5, 6, 7, 8], 3));\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let sorted1: number[] = nums1.sort((a, b) => b - a);\n    let sorted2: number[] = nums2.sort((a, b) => b - a);\n    let i: number = 0;\n    let j: number = 0;\n    while (result.length < N) {\n        if (sorted1[i] * sorted2[j] > sorted1[i + 1] * sorted2[j + 1]) {\n            result.push(sorted1[i] * sorted2[j]);\n            j++;\n        } else {\n            result.push(sorted1[i + 1] * sorted2[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                    max_index2 = k;\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.splice(max_index2, 1);\n        max = 0;\n    }\n    return result;\n}\n",
    "    let max_products: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max_product = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                let product = nums1[j] * nums2[k];\n                if (product > max_product) {\n                    max_product = product;\n                }\n            }\n        }\n        max_products.push(max_product);\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                let product = nums1[j] * nums2[k];\n                if (product == max_product) {\n                    nums1.splice(j, 1);\n                    nums2.splice(k, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return max_products;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                    max_index2 = k;\n                }\n            }\n        }\n        result.push(max);\n        nums1[max_index] = 0;\n        nums2[max_index2] = 0;\n        max = 0;\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 1));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 0));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], -1));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 6));\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let temp: number = 0;\n    for (i = 0; i < N; i++) {\n        for (j = 0; j < nums1.length; j++) {\n            for (k = 0; k < nums2.length; k++) {\n                temp = nums1[j] * nums2[k];\n                if (result.indexOf(temp) === -1) {\n                    result.push(temp);\n                }\n            }\n        }\n    }\n    result.sort((a, b) => {\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 10));\n",
    "    let res: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let count: number = 0;\n    while (count < N) {\n        let max: number = nums1[i] * nums2[j];\n        if (i + 1 < nums1.length && nums1[i + 1] * nums2[j] > max) {\n            i++;\n        } else if (j + 1 < nums2.length && nums1[i] * nums2[j + 1] > max) {\n            j++;\n        } else {\n            res.push(max);\n            i++;\n            j++;\n            count++;\n        }\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = 0;\n        let max1 = 0;\n        let max2 = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max1 = nums1[j];\n                    max2 = nums2[k];\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "  const products = [];\n  for (let i = 0; i < nums1.length; i++) {\n    for (let j = 0; j < nums2.length; j++) {\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 2)); // [12, 20]\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 3)); // [12, 20, 18]\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 4)); // [12, 20, 18, 15]\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 5)); // [12, 20, 18, 15, 10]\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] < nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let nums1_sorted: number[] = nums1.sort((a, b) => b - a);\n    let nums2_sorted: number[] = nums2.sort((a, b) => b - a);\n    let i: number = 0;\n    let j: number = 0;\n    while (result.length < N) {\n        if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n            result.push(nums1_sorted[i] * nums2_sorted[j]);\n            j++;\n        } else {\n            result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let max: number[] = [];\n    let max1: number[] = [];\n    let max2: number[] = [];\n    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n    let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh: number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number = 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n    let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n    let xx: number = 0;\n    let yy: number = 0;\n    let zz: number = 0;\n    let aaa: number = 0;\n    let bbb: number = 0;\n    let ccc: number = 0;\n    let ddd: number = 0;\n    let eee: number = 0;\n    let fff: number = 0;\n    let ggg: number = 0;",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] < nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        }\n    }\n    while (i < nums1.length) {\n        result.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        result.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "  let result: number[] = [];\n  for (let i = 0; i < N; i++) {\n    let max = -Infinity;\n    let max_i = 0;\n    let max_j = 0;\n    for (let j = 0; j < nums1.length; j++) {\n      for (let k = 0; k < nums2.length; k++) {\n        if (nums1[j] * nums2[k] > max) {\n          max = nums1[j] * nums2[k];\n          max_i = j;\n          max_j = k;\n        }\n      }\n    }\n    result.push(max);\n    nums1.splice(max_i, 1);\n    nums2.splice(max_j, 1);\n  }\n  return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    let max = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                max = Math.max(...result);\n            } else if (product > max) {\n                result.push(product);\n                result.splice(result.indexOf(max), 1);\n                max = Math.max(...result);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let max1: number = Math.max(...nums1);\n    let max2: number = Math.max(...nums2);\n    let min1: number = Math.min(...nums1);\n    let min2: number = Math.min(...nums2);\n    let max: number = max1 * max2;\n    let min: number = min1 * min2;\n    let max_index: number = nums1.indexOf(max1);\n    let min_index: number = nums1.indexOf(min1);\n    let max_index2: number = nums2.indexOf(max2);\n    let min_index2: number = nums2.indexOf(min2);\n    for (let i: number = 0; i < N; i++) {\n        if (i % 2 == 0) {\n            result.push(max);\n            nums1.splice(max_index, 1);\n            nums2.splice(max_index2, 1);\n            max1 = Math.max(...nums1);\n            max2 = Math.max(...nums2);\n            max = max1 * max2;\n            max_index = nums1.indexOf(max1);\n            max_index2 = nums2.indexOf(max2);\n        }\n        else {\n            result.push(min);\n            nums1.splice(min_index, 1);\n            nums2.splice(min_index2, 1);\n            min1 = Math.min(...nums1);\n            min2 = Math.min(...nums2);\n            min = min1 * min2;\n            min_index = nums1.indexOf(min1);\n            min_index2 = nums2.indexOf(min2);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let temp: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            temp.push(nums1[i] * nums2[j]);\n        }\n    }\n    temp.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(temp[i]);\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 2));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 3));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 4));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 5));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 6));\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                result.sort((a, b) => b - a);\n                max = result[0];\n            } else if (product > max) {\n                result.pop();\n                result.push(product);\n                result.sort((a, b) => b - a);\n                max = result[0];\n            }\n        }\n    }\n    return result;\n}\n",
    "    let res: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    while (res.length < N) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j + 1]) {\n            res.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            res.push(nums1[i + 1] * nums2[j + 1]);\n            j++;\n        }\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let product: number;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            product = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n            } else {\n                result.sort((a, b) => b - a);\n                if (product < result[N - 1]) {\n                    result[N - 1] = product;\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        res.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let maxIndex = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    maxIndex = [j, k];\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(maxIndex[0], 1);\n        nums2.splice(maxIndex[1], 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let temp: number = 0;\n    let temp1: number = 0;\n    let temp2: number = 0;\n    let temp3: number = 0;\n    let temp4: number = 0;\n    let temp5: number = 0;\n    let temp6: number = 0;\n    let temp7: number = 0;\n    let temp8: number = 0;\n    let temp9: number = 0;\n    let temp10: number = 0;\n    let temp11: number = 0;\n    let temp12: number = 0;\n    let temp13: number = 0;\n    let temp14: number = 0;\n    let temp15: number = 0;\n    let temp16: number = 0;\n    let temp17: number = 0;\n    let temp18: number = 0;\n    let temp19: number = 0;\n    let temp20: number = 0;\n    let temp21: number = 0;\n    let temp22: number = 0;\n    let temp23: number = 0;\n    let temp24: number = 0;\n    let temp25: number = 0;\n    let temp26: number = 0;\n    let temp27: number = 0;\n    let temp28: number = 0;\n    let temp29: number = 0;\n    let temp30: number = 0;\n    let temp31: number = 0;\n    let temp32: number = 0;\n    let temp33: number = 0;\n    let temp34: number = 0;\n    let temp35: number = 0;\n    let temp36: number = 0;\n    let temp37: number = 0;\n    let temp38: number = 0;\n    let temp39: number = 0;\n    let temp40: number = 0;\n    let temp41: number = 0;\n    let temp42: number = 0;\n    let temp43: number = 0;\n    let temp44: number = 0;\n    let temp45: number = 0;\n    let temp46: number = 0;\n    let temp47: number",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    result.push(max);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number[] = [];\n    let max1: number[] = [];\n    let max2: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        max1.push(nums1[i]);\n        max1.sort((a, b) => b - a);\n        max1.splice(N);\n    }\n    for (let i = 0; i < nums2.length; i++) {\n        max2.push(nums2[i]);\n        max2.sort((a, b) => b - a);\n        max2.splice(N);\n    }\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < N; j++) {\n            max.push(max1[i] * max2[j]);\n        }\n    }\n    max.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(max[i]);\n    }\n    return result;\n}\nconsole.log(large_product([-1, -2, -3, -4, -5], [-6, -7, -8, -9, -10], 3));\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let max_products: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max_product = 0;\n        let max_product_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max_product) {\n                    max_product = nums1[j] * nums2[k];\n                    max_product_index = [j, k];\n                }\n            }\n        }\n        max_products.push(max_product);\n        nums1.splice(max_product_index[0], 1);\n        nums2.splice(max_product_index[1], 1);\n    }\n    return max_products;\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let maxIndex = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    maxIndex = [j, k];\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(maxIndex[0], 1);\n        nums2.splice(maxIndex[1], 1);\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let nums1_sorted = nums1.sort((a, b) => b - a);\n    let nums2_sorted = nums2.sort((a, b) => b - a);\n    let i = 0;\n    let j = 0;\n    while (result.length < N) {\n        if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n            result.push(nums1_sorted[i] * nums2_sorted[j]);\n            j++;\n        } else {\n            result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = -Infinity;\n        let max2 = -Infinity;\n        let max1_index = 0;\n        let max2_index = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max1) {\n                max1 = nums1[j];\n                max1_index = j;\n            }\n        }\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums2[j] > max2) {\n                max2 = nums2[j];\n                max2_index = j;\n            }\n        }\n        result.push(max1 * max2);\n        nums1[max1_index] = -Infinity;\n        nums2[max2_index] = -Infinity;\n    }\n    return result;\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let nums1_sorted: number[] = nums1.sort((a, b) => b - a);\n    let nums2_sorted: number[] = nums2.sort((a, b) => b - a);\n    let i: number = 0;\n    let j: number = 0;\n    while (result.length < N) {\n        if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n            result.push(nums1_sorted[i] * nums2_sorted[j]);\n            j++;\n        } else {\n            result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let max1: number = 0;\n    let max2: number = 0;\n    let max3: number = 0;\n    let max4: number = 0;\n    let max5: number = 0;\n    let max6: number = 0;\n    let max7: number = 0;\n    let max8: number = 0;\n    let max9: number = 0;\n    let max10: number = 0;\n    let max11: number = 0;\n    let max12: number = 0;\n    let max13: number = 0;\n    let max14: number = 0;\n    let max15: number = 0;\n    let max16: number = 0;\n    let max17: number = 0;\n    let max18: number = 0;\n    let max19: number = 0;\n    let max20: number = 0;\n    let max21: number = 0;\n    let max22: number = 0;\n    let max23: number = 0;\n    let max24: number = 0;\n    let max25: number = 0;\n    let max26: number = 0;\n    let max27: number = 0;\n    let max28: number = 0;\n    let max29: number = 0;\n    let max30: number = 0;\n    let max31: number = 0;\n    let max32: number = 0;\n    let max33: number = 0;\n    let max34: number = 0;\n    let max35: number = 0;\n    let max36: number = 0;\n    let max37: number = 0;\n    let max38: number = 0;\n    let max39: number = 0;\n    let max40: number = 0;\n    let max41: number = 0;\n    let max42: number = 0;\n    let max43: number = 0;\n    let max44: number = 0;\n    let max45: number = 0;\n    let max46: number = 0;\n    let max47: number = 0;\n    let max48: number = 0;\n    let max49: number = 0;\n    let max50: number = 0;\n    let",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  let result: number[] = [];\n  let temp: number[] = [];\n  for (let i = 0; i < nums1.length; i++) {\n    for (let j = 0; j < nums2.length; j++) {\n      temp.push(nums1[i] * nums2[j]);\n    }\n  }\n  temp.sort((a, b) => b - a);\n  for (let i = 0; i < N; i++) {\n    result.push(temp[i]);\n  }\n  return result;\n}\n\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 2));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 3));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 4));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 5));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 6));\n",
    "    let res: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] > nums2[j]) {\n            res.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            res.push(nums1[i] * nums2[j]);\n            i++;\n        }\n    }\n    while (i < nums1.length) {\n        res.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        res.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    res.sort((a, b) => b - a);\n    return res.slice(0, N);\n}\n",
    "  let products = [];\n  for (let i = 0; i < nums1.length; i++) {\n    for (let j = 0; j < nums2.length; j++) {\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        res.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 1));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 0));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], -1));\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let index: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    index = j;\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(index, 1);\n        max = 0;\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    const products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length && res.length < N) {\n        if (nums1[i] * nums2[j] > nums1[i] * nums2[j + 1]) {\n            res.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            res.push(nums1[i] * nums2[j + 1]);\n            i++;\n        }\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let temp: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            temp.push(nums1[i] * nums2[j]);\n        }\n    }\n    temp.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(temp[i]);\n    }\n    return result;\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let largestProducts: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let largestProduct = -Infinity;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > largestProduct) {\n                    largestProduct = nums1[j] * nums2[k];\n                }\n            }\n        }\n        largestProducts.push(largestProduct);\n        nums1 = nums1.filter(num => num !== largestProduct / Math.max(...nums2));\n        nums2 = nums2.filter(num => num !== largestProduct / Math.max(...nums1));\n    }\n    return largestProducts;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max: number = -Infinity;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    result.push(max);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        let max = max1 * max2;\n        result.push(max);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        res.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let temp: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            temp.push(nums1[i] * nums2[j]);\n        }\n    }\n    temp.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(temp[i]);\n    }\n    return result;\n}\n",
    "  let result: number[] = [];\n  for (let i = 0; i < N; i++) {\n    let max = 0;\n    let max_index = 0;\n    for (let j = 0; j < nums1.length; j++) {\n      if (nums1[j] * nums2[0] > max) {\n        max = nums1[j] * nums2[0];\n        max_index = j;\n      }\n    }\n    result.push(max);\n    nums1.splice(max_index, 1);\n    nums2.shift();\n  }\n  return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 3));\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i + 1] * nums2[j]);\n            i++;\n        }\n        if (result.length === N) {\n            break;\n        }\n    }\n    return result;\n}\n",
    "    let res = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_ind = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (res.indexOf(nums1[j] * nums2[k]) === -1) {\n                    if (nums1[j] * nums2[k] > max) {\n                        max = nums1[j] * nums2[k];\n                        max_ind = j;\n                    }\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max_ind, 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums1[i] * nums2[j] > max) {\n                max = nums1[i] * nums2[j];\n                result.push(max);\n            }\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 2));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 4));\n",
    "    let result: number[] = [];\n    let max1: number = Math.max(...nums1);\n    let max2: number = Math.max(...nums2);\n    let max: number = max1 * max2;\n    result.push(max);\n    for (let i: number = 0; i < N - 1; i++) {\n        if (max1 > max2) {\n            nums1.splice(nums1.indexOf(max1), 1);\n            max1 = Math.max(...nums1);\n            max = max1 * max2;\n        } else {\n            nums2.splice(nums2.indexOf(max2), 1);\n            max2 = Math.max(...nums2);\n            max = max1 * max2;\n        }\n        result.push(max);\n    }\n    return result;\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let product: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            product = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n            } else {\n                result.sort((a, b) => a - b);\n                if (product > result[0]) {\n                    result.shift();\n                    result.push(product);\n                }\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 2));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 4));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 6));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 7));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 8));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 9));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 10));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 11));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 12));\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            let curr = nums1[j];\n            if (curr > max) {\n                max = curr;\n                max_index = j;\n            }\n        }\n        nums1[max_index] = -Infinity;\n        max = -Infinity;\n        max_index = -1;\n        for (let j = 0; j < nums2.length; j++) {\n            let curr = nums2[j];\n            if (curr > max) {\n                max = curr;\n                max_index = j;\n            }\n        }\n        nums2[max_index] = -Infinity;\n        result.push(max * max);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = 0;\n        let max1 = 0;\n        let max2 = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max1 = nums1[j];\n                    max2 = nums2[k];\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max1: number = 0;\n    let max2: number = 0;\n    let max3: number = 0;\n    let max4: number = 0;\n    let max5: number = 0;\n    let max6: number = 0;\n    let max7: number = 0;\n    let max8: number = 0;\n    let max9: number = 0;\n    let max10: number = 0;\n    let max11: number = 0;\n    let max12: number = 0;\n    let max13: number = 0;\n    let max14: number = 0;\n    let max15: number = 0;\n    let max16: number = 0;\n    let max17: number = 0;\n    let max18: number = 0;\n    let max19: number = 0;\n    let max20: number = 0;\n    let max21: number = 0;\n    let max22: number = 0;\n    let max23: number = 0;\n    let max24: number = 0;\n    let max25: number = 0;\n    let max26: number = 0;\n    let max27: number = 0;\n    let max28: number = 0;\n    let max29: number = 0;\n    let max30: number = 0;\n    let max31: number = 0;\n    let max32: number = 0;\n    let max33: number = 0;\n    let max34: number = 0;\n    let max35: number = 0;\n    let max36: number = 0;\n    let max37: number = 0;\n    let max38: number = 0;\n    let max39: number = 0;\n    let max40: number = 0;\n    let max41: number = 0;\n    let max42: number = 0;\n    let max43: number = 0;\n    let max44: number = 0;\n    let max45: number = 0;\n    let max46: number = 0;\n    let max47: number = 0;\n    let max48: number = 0;\n    let max49: number = 0;\n    let max50: number = 0;\n    let",
    "    let res: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j]) {\n            res.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            res.push(nums1[i + 1] * nums2[j]);\n            i++;\n        }\n    }\n    return res.slice(0, N);\n}\n",
    "    const products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max: number = -Infinity;\n        let max_index: number = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            let temp: number = nums1[j] * nums2[0];\n            if (temp > max) {\n                max = temp;\n                max_index = j;\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.shift();\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let arr1: number[] = [];\n    let arr2: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        arr1.push(result[i]);\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (arr1[i] === nums1[j] * nums2[k]) {\n                    arr2.push(nums1[j], nums2[k]);\n                }\n            }\n        }\n    }\n    return arr2;\n}\nconsole.log(large_product([1, 2, 3, 4], [5, 6, 7, 8], 3));\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max1 = -Infinity;\n        let max2 = -Infinity;\n        let max1_index = -1;\n        let max2_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max1) {\n                max1 = nums1[j];\n                max1_index = j;\n            }\n        }\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums2[j] > max2) {\n                max2 = nums2[j];\n                max2_index = j;\n            }\n        }\n        max = max1 * max2;\n        result.push(max);\n        nums1[max1_index] = -Infinity;\n        nums2[max2_index] = -Infinity;\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                let product = nums1[j] * nums2[k];\n                if (product > max) {\n                    max = product;\n                    max_index = [j, k];\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n    }\n    return result;\n}\n",
    "  let res: number[] = [];\n  let max: number = 0;\n  let max_index: number = 0;\n  let max_index2: number = 0;\n  for (let i = 0; i < N; i++) {\n    for (let j = 0; j < nums1.length; j++) {\n      for (let k = 0; k < nums2.length; k++) {\n        if (nums1[j] * nums2[k] > max) {\n          max = nums1[j] * nums2[k];\n          max_index = j;\n          max_index2 = k;\n        }\n      }\n    }\n    res.push(max);\n    nums1.splice(max_index, 1);\n    nums2.splice(max_index2, 1);\n    max = 0;\n  }\n  return res;\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max = 0;\n        let max_index = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            let product = nums1[j] * nums2[0];\n            if (product > max) {\n                max = product;\n                max_index = j;\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.splice(0, 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max1: number = 0;\n    let max2: number = 0;\n    let max1_index: number = 0;\n    let max2_index: number = 0;\n    let max_index: number = 0;\n    for (let i: number = 0; i < N; i++) {\n        max1 = 0;\n        max2 = 0;\n        max1_index = 0;\n        max2_index = 0;\n        for (let j: number = 0; j < nums1.length; j++) {\n            if (nums1[j] > max1) {\n                max1 = nums1[j];\n                max1_index = j;\n            }\n        }\n        for (let k: number = 0; k < nums2.length; k++) {\n            if (nums2[k] > max2) {\n                max2 = nums2[k];\n                max2_index = k;\n            }\n        }\n        max = max1 * max2;\n        result.push(max);\n        nums1[max1_index] = 0;\n        nums2[max2_index] = 0;\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 1));\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                }\n            }\n        }\n        result.push(max);\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] === max) {\n                    nums1.splice(j, 1);\n                    nums2.splice(k, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let nums1_sorted = nums1.sort((a, b) => b - a);\n    let nums2_sorted = nums2.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(nums1_sorted[i] * nums2_sorted[i]);\n    }\n    return result;\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let maxIndex: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max) {\n                max = nums1[j];\n                maxIndex = j;\n            }\n        }\n        nums1[maxIndex] = 0;\n        max = 0;\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums2[j] > max) {\n                max = nums2[j];\n                maxIndex = j;\n            }\n        }\n        nums2[maxIndex] = 0;\n        max = 0;\n        result.push(nums1[maxIndex] * nums2[maxIndex]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    while (N > 0) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j + 1]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n            j++;\n        } else {\n            result.push(nums1[i + 1] * nums2[j + 1]);\n            i++;\n            j++;\n        }\n        N--;\n    }\n    return result;\n}\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 4));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = [j, k];\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                result.sort((a, b) => b - a);\n            } else if (product > result[N - 1]) {\n                result.pop();\n                result.push(product);\n                result.sort((a, b) => b - a);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        res.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    return products.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] * nums2[0] > max) {\n                max = nums1[j] * nums2[0];\n                max_index = j;\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.shift();\n    }\n    return result;\n}\n",
    "    let result = [];\n    let max = 0;\n    let max2 = 0;\n    let max3 = 0;\n    let max4 = 0;\n    let max5 = 0;\n    let max6 = 0;\n    let max7 = 0;\n    let max8 = 0;\n    let max9 = 0;\n    let max10 = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums1[i] * nums2[j] > max) {\n                max10 = max9;\n                max9 = max8;\n                max8 = max7;\n                max7 = max6;\n                max6 = max5;\n                max5 = max4;\n                max4 = max3;\n                max3 = max2;\n                max2 = max;\n                max = nums1[i] * nums2[j];\n            }\n            else if (nums1[i] * nums2[j] > max2) {\n                max10 = max9;\n                max9 = max8;\n                max8 = max7;\n                max7 = max6;\n                max6 = max5;\n                max5 = max4;\n                max4 = max3;\n                max3 = max2;\n                max2 = nums1[i] * nums2[j];\n            }\n            else if (nums1[i] * nums2[j] > max3) {\n                max10 = max9;\n                max9 = max8;\n                max8 = max7;\n                max7 = max6;\n                max6 = max5;\n                max5 = max4;\n                max4 = max3;\n                max3 = nums1[i] * nums2[j];\n            }\n            else if (nums1[i] * nums2[j] > max4) {\n                max10 = max9;\n                max9 = max8;\n                max8 = max7;\n                max7 = max6;\n                max6 = max5;\n                max5",
    "    let res: number[] = [];\n    let max: number = 0;\n    let max1: number = 0;\n    let max2: number = 0;\n    let max1_index: number = 0;\n    let max2_index: number = 0;\n    for (let i: number = 0; i < N; i++) {\n        max1 = Math.max(...nums1);\n        max2 = Math.max(...nums2);\n        max = max1 * max2;\n        max1_index = nums1.indexOf(max1);\n        max2_index = nums2.indexOf(max2);\n        res.push(max);\n        nums1.splice(max1_index, 1);\n        nums2.splice(max2_index, 1);\n    }\n    return res;\n}\n",
    "    let res = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = [j, k];\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let max1: number = 0;\n    let max2: number = 0;\n    let max_product: number = 0;\n    let max_index1: number = 0;\n    let max_index2: number = 0;\n    for (let i = 0; i < N; i++) {\n        max1 = 0;\n        max2 = 0;\n        max_product = 0;\n        max_index1 = 0;\n        max_index2 = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            if (nums1[j] > max1) {\n                max1 = nums1[j];\n                max_index1 = j;\n            }\n        }\n        for (let j = 0; j < nums2.length; j++) {\n            if (nums2[j] > max2) {\n                max2 = nums2[j];\n                max_index2 = j;\n            }\n        }\n        max_product = max1 * max2;\n        result.push(max_product);\n        nums1[max_index1] = 0;\n        nums2[max_index2] = 0;\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    let max_index3: number = 0;\n    let max_index4: number = 0;\n    let max2: number = 0;\n    let max3: number = 0;\n    let max4: number = 0;\n    for (let i: number = 0; i < nums1.length; i++) {\n        if (nums1[i] > max) {\n            max = nums1[i];\n            max_index = i;\n        }\n    }\n    for (let i: number = 0; i < nums1.length; i++) {\n        if (nums1[i] > max2 && nums1[i] < max) {\n            max2 = nums1[i];\n            max_index2 = i;\n        }\n    }\n    for (let i: number = 0; i < nums1.length; i++) {\n        if (nums1[i] > max3 && nums1[i] < max2) {\n            max3 = nums1[i];\n            max_index3 = i;\n        }\n    }\n    for (let i: number = 0; i < nums1.length; i++) {\n        if (nums1[i] > max4 && nums1[i] < max3) {\n            max4 = nums1[i];\n            max_index4 = i;\n        }\n    }\n    for (let i: number = 0; i < nums2.length; i++) {\n        result.push(nums2[i] * max);\n        result.push(nums2[i] * max2);\n        result.push(nums2[i] * max3);\n        result.push(nums2[i] * max4);\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [1,",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] < nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 2));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 3));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 4));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 5));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 6));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 7));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 8));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 9));\nconsole.log(large_product([1, 2, 3], [4, 5, 6], 10));\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let product: number = 0;\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    let max_index3: number = 0;\n    let max_index4: number = 0;\n    let max_index5: number = 0;\n    let max_index6: number = 0;\n    let max_index7: number = 0;\n    let max_index8: number = 0;\n    let max_index9: number = 0;\n    let max_index10: number = 0;\n    let max_index11: number = 0;\n    let max_index12: number = 0;\n    let max_index13: number = 0;\n    let max_index14: number = 0;\n    let max_index15: number = 0;\n    let max_index16: number = 0;\n    let max_index17: number = 0;\n    let max_index18: number = 0;\n    let max_index19: number = 0;\n    let max_index20: number = 0;\n    let max_index21: number = 0;\n    let max_index22: number = 0;\n    let max_index23: number = 0;\n    let max_index24: number = 0;\n    let max_index25: number = 0;\n    let max_index26: number = 0;\n    let max_index27: number = 0;\n    let max_index28: number = 0;\n    let max_index29: number = 0;\n    let max_index30: number = 0;\n    let max_index31: number = 0;\n    let max_index32: number = 0;\n    let max_index33: number = 0;\n    let max_index34: number = 0;\n    let max_index35: number = 0;\n    let max_index36: number = 0;\n    let max_index37: number = 0;\n    let max_index38: number = 0;\n    let",
    "    let result = [];\n    let max = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n            } else {\n                if (product > max) {\n                    result.push(product);\n                    result.sort((a, b) => a - b);\n                    result.pop();\n                    max = result[result.length - 1];\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (res.length < N) {\n                res.push(product);\n                res.sort((a, b) => b - a);\n                max = res[0];\n            } else {\n                if (product < max) {\n                    continue;\n                } else {\n                    res.pop();\n                    res.push(product);\n                    res.sort((a, b) => b - a);\n                    max = res[0];\n                }\n            }\n        }\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i: number = 0; i < nums1.length; i++) {\n        for (let j: number = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                result.sort((a, b) => b - a);\n            } else {\n                if (product > result[result.length - 1]) {\n                    result.pop();\n                    result.push(product);\n                    result.sort((a, b) => b - a);\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    for (let i = 0; i < N; i++) {\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                    max_index2 = k;\n                }\n            }\n        }\n        result.push(max);\n        nums1[max_index] = 0;\n        nums2[max_index2] = 0;\n        max = 0;\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 1));\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 0));\n",
    "  const products = [];\n  for (let i = 0; i < nums1.length; i++) {\n    for (let j = 0; j < nums2.length; j++) {\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    let max2: number = 0;\n    let max_index3: number = 0;\n    let max_index4: number = 0;\n    let max3: number = 0;\n    let max_index5: number = 0;\n    let max_index6: number = 0;\n    let max4: number = 0;\n    let max_index7: number = 0;\n    let max_index8: number = 0;\n    let max5: number = 0;\n    let max_index9: number = 0;\n    let max_index10: number = 0;\n    let max6: number = 0;\n    let max_index11: number = 0;\n    let max_index12: number = 0;\n    let max7: number = 0;\n    let max_index13: number = 0;\n    let max_index14: number = 0;\n    let max8: number = 0;\n    let max_index15: number = 0;\n    let max_index16: number = 0;\n    let max9: number = 0;\n    let max_index17: number = 0;\n    let max_index18: number = 0;\n    let max10: number = 0;\n    let max_index19: number = 0;\n    let max_index20: number = 0;\n    let max11: number = 0;\n    let max_index21: number = 0;\n    let max_index22: number = 0;\n    let max12: number = 0;\n    let max_index23: number = 0;\n    let max_index24: number = 0;\n    let max13: number = 0;\n    let max_index25: number = 0;\n    let max_index26: number = 0;\n    let max14: number = 0;\n    let max_index27: number = 0;\n    let max_index28: number = 0;\n    let max15: number = 0;\n    let max_index29: number = 0;\n    let max_index30",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  let result: number[] = [];\n  for (let i = 0; i < N; i++) {\n    let max = -Infinity;\n    let max_index = -1;\n    for (let j = 0; j < nums1.length; j++) {\n      for (let k = 0; k < nums2.length; k++) {\n        if (nums1[j] * nums2[k] > max) {\n          max = nums1[j] * nums2[k];\n          max_index = [j, k];\n        }\n      }\n    }\n    result.push(max);\n    nums1.splice(max_index[0], 1);\n    nums2.splice(max_index[1], 1);\n  }\n  return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = [j, k];\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let max = 0;\n    let max_index = 0;\n    let max_index2 = 0;\n    let max2 = 0;\n    let max_index3 = 0;\n    let max_index4 = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        if (nums1[i] > max) {\n            max = nums1[i];\n            max_index = i;\n        }\n    }\n    for (let i = 0; i < nums2.length; i++) {\n        if (nums2[i] > max2) {\n            max2 = nums2[i];\n            max_index3 = i;\n        }\n    }\n    result.push(max * max2);\n    nums1.splice(max_index, 1);\n    nums2.splice(max_index3, 1);\n    for (let i = 0; i < nums1.length; i++) {\n        if (nums1[i] > max) {\n            max = nums1[i];\n            max_index2 = i;\n        }\n    }\n    for (let i = 0; i < nums2.length; i++) {\n        if (nums2[i] > max2) {\n            max2 = nums2[i];\n            max_index4 = i;\n        }\n    }\n    result.push(max * max2);\n    return result;\n}\n",
    "    let result = [];\n    let max = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                max = Math.max(...result);\n            } else if (product > max) {\n                result.push(product);\n                result.splice(result.indexOf(max), 1);\n                max = Math.max(...result);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] < nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        }\n    }\n    while (i < nums1.length) {\n        result.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        result.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    const products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    let max_index: number = 0;\n    let max_index2: number = 0;\n    for (let i = 0; i < N; i++) {\n        max = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                    max_index2 = k;\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.splice(max_index2, 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                result.sort((a, b) => b - a);\n                max = result[0];\n            } else {\n                if (product > max) {\n                    result.pop();\n                    result.push(product);\n                    result.sort((a, b) => b - a);\n                    max = result[0];\n                }\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (result.length < N) {\n        if (nums1[i] * nums2[j] > nums1[i] * nums2[j + 1]) {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            result.push(nums1[i] * nums2[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] < nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        }\n    }\n    while (i < nums1.length) {\n        result.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        result.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let nums1_sorted = nums1.sort((a, b) => b - a);\n    let nums2_sorted = nums2.sort((a, b) => b - a);\n    let i = 0;\n    let j = 0;\n    while (result.length < N) {\n        if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n            result.push(nums1_sorted[i] * nums2_sorted[j]);\n            j++;\n        } else {\n            result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] > nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        }\n    }\n    while (i < nums1.length) {\n        result.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        result.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let max_products: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max_product = 0;\n        let max_product_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                let product = nums1[j] * nums2[k];\n                if (product > max_product) {\n                    max_product = product;\n                    max_product_index = j;\n                }\n            }\n        }\n        max_products.push(max_product);\n        nums1.splice(max_product_index, 1);\n    }\n    return max_products;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = 0;\n        let max_index = 0;\n        for (let j = 0; j < nums1.length; j++) {\n            let product = nums1[j] * nums2[0];\n            if (product > max) {\n                max = product;\n                max_index = j;\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.shift();\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        result.push(products[i]);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let nums1_sorted = nums1.sort((a, b) => b - a);\n    let nums2_sorted = nums2.sort((a, b) => b - a);\n    let result = [];\n    for (let i = 0; i < N; i++) {\n        result.push(nums1_sorted[i] * nums2_sorted[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] < nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        }\n    }\n    while (i < nums1.length) {\n        result.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        result.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max_index, 1);\n    }\n    return res;\n}\n",
    "    let res: number[] = [];\n    let temp: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            temp.push(nums1[i] * nums2[j]);\n        }\n    }\n    temp.sort((a, b) => b - a);\n    for (let i = 0; i < N; i++) {\n        res.push(temp[i]);\n    }\n    return res;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let i: number = 0;\n    let j: number = 0;\n    let count: number = 0;\n    while (count < N) {\n        if (nums1[i] * nums2[j] > nums1[i + 1] * nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            result.push(nums1[i + 1] * nums2[j]);\n            i++;\n        }\n        count++;\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 4));\nconsole.log(large_product([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 5));\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        res.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product = nums1[i] * nums2[j];\n            if (product > max) {\n                max = product;\n                result.push(max);\n                result.sort((a, b) => b - a);\n                result.splice(N);\n            }\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let max: number = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                result.sort((a, b) => b - a);\n            } else {\n                if (product > result[result.length - 1]) {\n                    result.pop();\n                    result.push(product);\n                    result.sort((a, b) => b - a);\n                }\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 3));\n",
    "    let result = [];\n    let max = 0;\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            let product = nums1[i] * nums2[j];\n            if (result.length < N) {\n                result.push(product);\n                max = Math.max(...result);\n            } else if (product > max) {\n                let index = result.indexOf(max);\n                result[index] = product;\n                max = Math.max(...result);\n            }\n        }\n    }\n    return result;\n}\n\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 3));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 5));\nconsole.log(large_product([1, 2, 3, 4, 5], [6, 7, 8, 9, 10], 8));\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products: number[] = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_index = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_index = [j, k];\n                }\n            }\n        }\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n        result.push(max);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    while (i < nums1.length && j < nums2.length) {\n        if (nums1[i] > nums2[j]) {\n            result.push(nums1[i] * nums2[j]);\n            j++;\n        } else {\n            result.push(nums1[i] * nums2[j]);\n            i++;\n        }\n    }\n    while (i < nums1.length) {\n        result.push(nums1[i] * nums2[nums2.length - 1]);\n        i++;\n    }\n    while (j < nums2.length) {\n        result.push(nums1[nums1.length - 1] * nums2[j]);\n        j++;\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    let result: number[] = [];\n    let nums1_sorted: number[] = nums1.sort((a, b) => b - a);\n    let nums2_sorted: number[] = nums2.sort((a, b) => b - a);\n    let i: number = 0;\n    let j: number = 0;\n    while (result.length < N) {\n        if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n            result.push(nums1_sorted[i] * nums2_sorted[j]);\n            j++;\n        } else {\n            result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let product = 0;\n    let max = 0;\n    let maxIndex = 0;\n    while (k < N) {\n        product = nums1[i] * nums2[j];\n        if (product > max) {\n            max = product;\n            maxIndex = k;\n        }\n        if (nums1[i] < nums2[j]) {\n            i++;\n        } else {\n            j++;\n        }\n        k++;\n    }\n    result.push(max);\n    return result;\n}\n",
    "  let result = [];\n  let nums1_sorted = nums1.sort((a, b) => b - a);\n  let nums2_sorted = nums2.sort((a, b) => b - a);\n  let i = 0;\n  let j = 0;\n  while (result.length < N) {\n    if (nums1_sorted[i] * nums2_sorted[j] > nums1_sorted[i] * nums2_sorted[j + 1]) {\n      result.push(nums1_sorted[i] * nums2_sorted[j]);\n      j++;\n    } else {\n      result.push(nums1_sorted[i] * nums2_sorted[j + 1]);\n      i++;\n    }\n  }\n  return result;\n}\n",
    "    let products = [];\n    for (let i = 0; i < nums1.length; i++) {\n        for (let j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_i = -1;\n        let max_j = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_i = j;\n                    max_j = k;\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max_i, 1);\n        nums2.splice(max_j, 1);\n    }\n    return res;\n}\n",
    "    let res: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max = -Infinity;\n        let max_i = -1;\n        let max_j = -1;\n        for (let j = 0; j < nums1.length; j++) {\n            for (let k = 0; k < nums2.length; k++) {\n                if (nums1[j] * nums2[k] > max) {\n                    max = nums1[j] * nums2[k];\n                    max_i = j;\n                    max_j = k;\n                }\n            }\n        }\n        res.push(max);\n        nums1.splice(max_i, 1);\n        nums2.splice(max_j, 1);\n    }\n    return res;\n}\n",
    "    let result: number[] = [];\n    let maxProduct: number = 0;\n    for (let i: number = 0; i < nums1.length; i++) {\n        for (let j: number = 0; j < nums2.length; j++) {\n            let product: number = nums1[i] * nums2[j];\n            if (product > maxProduct) {\n                result.push(product);\n                maxProduct = product;\n            }\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < N; i++) {\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n"
  ]
}
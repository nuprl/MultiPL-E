{
  "name": "mbpp_738_geometric_sum",
  "language": "ts",
  "prompt": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp7kqkmx6z.js:11:12)\n    at Object.<anonymous> (/tmp/tmp7kqkmx6z.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) return 1;\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "1.875\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n  if (n === 0) {\n    return 1;\n  }\n  return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n < 0) {\n        return 0;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 + (1 / Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpi708y02l.js:11:12)\n    at Object.<anonymous> (/tmp/tmpi708y02l.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n  if (n < 0) {\n    return 0;\n  }\n  if (n === 0) {\n    return 1;\n  }\n  return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpi6iikxui.js:11:12)\n    at Object.<anonymous> (/tmp/tmpi6iikxui.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n  if (n == 0) {\n    return 1;\n  }\n  return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    } else {\n        return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 1) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp4tm6e7yy.js:11:12)\n    at Object.<anonymous> (/tmp/tmp4tm6e7yy.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return (1 / Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp7kqkmx6z.js:11:12)\n    at Object.<anonymous> (/tmp/tmp7kqkmx6z.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    } else {\n        return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp7kqkmx6z.js:11:12)\n    at Object.<anonymous> (/tmp/tmp7kqkmx6z.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 + (1 / 2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122747,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp81ul1ha0.js:11:12)\n    at Object.<anonymous> (/tmp/tmp81ul1ha0.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "1.875\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmpi6iikxui.js:11:12)\n    at Object.<anonymous> (/tmp/tmpi6iikxui.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 1) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp4tm6e7yy.js:11:12)\n    at Object.<anonymous> (/tmp/tmp4tm6e7yy.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n  if (n === 0) {\n    return 1;\n  }\n  return 1 / 2 ** n + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n < 0) {\n        return 0;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / 2 ** n + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "1.875\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\nconsole.log(geometric_sum(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "1.875\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n < 0) {\n        return 0;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\nconsole.log(geometric_sum(5));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "1.96875\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n  if (n === 1) {\n    return 1;\n  }\n  return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmprmu5yq77.js:11:12)\n    at Object.<anonymous> (/tmp/tmprmu5yq77.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 + (1 / 2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp9segwnmh.js:11:12)\n    at Object.<anonymous> (/tmp/tmp9segwnmh.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13700\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp7kqkmx6z.js:11:12)\n    at Object.<anonymous> (/tmp/tmp7kqkmx6z.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13700,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) return 1;\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (Math.pow(2, n)) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    } else {\n        return 1 + (1 / 2 ** n) + geometric_sum(n - 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.9921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp16c5pp93.js:13:12)\n    at Object.<anonymous> (/tmp/tmp16c5pp93.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.9921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    } else {\n        return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return geometric_sum(n - 1) + 1 / Math.pow(2, n);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / 2 ** n + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n == 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\nconsole.log(geometric_sum(3));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "1.875\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 1) {\n        return 1;\n    }\n    return 1 / Math.pow(2, n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1666122748,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4921875\n\nshould loosely deep-equal\n\n1.9921875\n    at test (/tmp/tmp7x334t9n.js:11:12)\n    at Object.<anonymous> (/tmp/tmp7x334t9n.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4921875,\n  expected: 1.9921875,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunction geometric_sum(n: number): number {\n    if (n === 0) {\n        return 1;\n    }\n    return 1 / (2 ** n) + geometric_sum(n - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = geometric_sum;\n  assert.deepEqual(candidate(7),1.9921875);\n  assert.deepEqual(candidate(4),1.9375);\n  assert.deepEqual(candidate(8),1.99609375);\n}\n\ntest();",
      "timestamp": 1665517204,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
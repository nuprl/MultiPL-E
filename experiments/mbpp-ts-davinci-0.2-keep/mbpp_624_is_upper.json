{
  "name": "mbpp_624_is_upper",
  "language": "ts",
  "prompt": "//Write a python function to convert a given string to uppercase.\nfunction is_upper(string: string): string {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\nconsole.log(is_upper(\"hello\"));\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n\nconsole.log(is_upper('python'));\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\nconsole.log(is_upper('python'));\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}\n"
  ]
}
{
  "name": "mbpp_595_min_Swaps",
  "language": "ts",
  "prompt": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"1001\"));\nconsole.log(min_Swaps(\"110011\", \"010111\"));\nconsole.log(min_Swaps(\"10011001\", \"01100101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpwbua2r8r.js:22:12)\n    at Object.<anonymous> (/tmp/tmpwbua2r8r.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"01100\"));\nconsole.log(min_Swaps(\"1100\", \"1001\"));\nconsole.log(min_Swaps(\"1101\", \"0111\"));\nconsole.log(min_Swaps(\"10011001\", \"01100110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "2\n1\n1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpjy8h43tt.js:22:12)\n    at Object.<anonymous> (/tmp/tmpjy8h43tt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('11101', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp613e0qhf.js:19:12)\n    at Object.<anonymous> (/tmp/tmp613e0qhf.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"10011001\", \"01100101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp4vy88sq0.js:22:12)\n    at Object.<anonymous> (/tmp/tmp4vy88sq0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpakcnw38x.js:22:12)\n    at Object.<anonymous> (/tmp/tmpakcnw38x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpatlut9u6.js:16:12)\n    at Object.<anonymous> (/tmp/tmpatlut9u6.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let arr1 = str1.split('');\n    let arr2 = str2.split('');\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpy7110qnv.js:18:12)\n    at Object.<anonymous> (/tmp/tmpy7110qnv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\nconsole.log(min_Swaps(\"10011\", \"10101\"));\nconsole.log(min_Swaps(\"1001\", \"0100\"));\nconsole.log(min_Swaps(\"010110\", \"101001\"));\nconsole.log(min_Swaps(\"111001011\", \"010110110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1\n1\n3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpbn2vj93p.js:23:12)\n    at Object.<anonymous> (/tmp/tmpbn2vj93p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"01110011011000110110001101011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsede4ksp.js:19:12)\n    at Object.<anonymous> (/tmp/tmpsede4ksp.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"110011\", \"011111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"100\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "../../../../tmp/tmpnkiqmy93.ts(35,27): error TS1002: Unterminated string literal.\n../../../../tmp/tmpnkiqmy93.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpnkiqmy93.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpg6f2_4zc.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg6f2_4zc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1110010', '0100101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "2.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpp83tcd47.js:21:12)\n    at Object.<anonymous> (/tmp/tmpp83tcd47.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11100\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpm7g4a8iz.js:21:12)\n    at Object.<anonymous> (/tmp/tmpm7g4a8iz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpjco_gqb5.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjco_gqb5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11101', '10101'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "../../../../tmp/tmpauxmjqy2.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpauxmjqy2.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('11', '01'));\nconsole.log(min_Swaps('1', '0'));\nconsole.log(min_Swaps('10', '01'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1\n0.5\n0.5\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmppme76c8u.js:25:12)\n    at Object.<anonymous> (/tmp/tmppme76c8u.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"10011\", \"10101\"));\nconsole.log(min_Swaps(\"11000\", \"10101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpf5x3kjrg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpf5x3kjrg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsjj3o18k.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsjj3o18k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "../../../../tmp/tmp6npdq94s.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n            for (j = i + 1; j < str2.length; j++) {\n                if (str1[j] == str2[i]) {\n                    let temp = str1[j];\n                    str1[j] = str1[i];\n                    str1[i] = temp;\n                }\n            }\n        }\n    }\n    return count;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "../../../../tmp/tmp6l_ni4eh.ts(12,21): error TS2542: Index signature in type 'String' only permits reading.\n../../../../tmp/tmp6l_ni4eh.ts(13,21): error TS2542: Index signature in type 'String' only permits reading.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length === str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] !== str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "../../../../tmp/tmpi58br7ky.ts(35,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmpi58br7ky.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpi58br7ky.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100110'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprgymq53g.js:23:12)\n    at Object.<anonymous> (/tmp/tmprgymq53g.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11100', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11100', '10011'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "../../../../tmp/tmpq0z0e0vq.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpq0z0e0vq.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpq2qdsz_d.js:19:12)\n    at Object.<anonymous> (/tmp/tmpq2qdsz_d.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"11001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpiha2_gqv.js:19:12)\n    at Object.<anonymous> (/tmp/tmpiha2_gqv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    var count = 0;\n    if (str1.length == str2.length) {\n        for (var i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '01111'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "../../../../tmp/tmplvrf8hwb.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmplvrf8hwb.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('1110010', '1100110'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n1\n4\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpokdlq08e.js:22:12)\n    at Object.<anonymous> (/tmp/tmpokdlq08e.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"1110010111\", \"0101101110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "3.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpckl_jtoy.js:21:12)\n    at Object.<anonymous> (/tmp/tmpckl_jtoy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11100\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpm7g4a8iz.js:21:12)\n    at Object.<anonymous> (/tmp/tmpm7g4a8iz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp4rjr2m2m.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4rjr2m2m.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpyvir9z1i.js:19:12)\n    at Object.<anonymous> (/tmp/tmpyvir9z1i.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"011100110111010111011010111111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpnyz36b7n.js:21:12)\n    at Object.<anonymous> (/tmp/tmpnyz36b7n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpm4j3xkwy.js:19:12)\n    at Object.<anonymous> (/tmp/tmpm4j3xkwy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp6sil310o.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6sil310o.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsjj3o18k.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsjj3o18k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"010110011111111001110101010110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmph08mdwe7.js:19:12)\n    at Object.<anonymous> (/tmp/tmph08mdwe7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"10011001\", \"01100101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n1\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzgycr_or.js:22:12)\n    at Object.<anonymous> (/tmp/tmpzgycr_or.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"11100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpq6nu3ad7.js:19:12)\n    at Object.<anonymous> (/tmp/tmpq6nu3ad7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmppantu826.js:16:12)\n    at Object.<anonymous> (/tmp/tmppantu826.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpfzz1wjuy.js:19:12)\n    at Object.<anonymous> (/tmp/tmpfzz1wjuy.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp6yjtk6a1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6yjtk6a1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"010110011111111001110101010110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpo63um7zh.js:19:12)\n    at Object.<anonymous> (/tmp/tmpo63um7zh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100101', '01011011'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp5qyikkxm.js:21:12)\n    at Object.<anonymous> (/tmp/tmp5qyikkxm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('1101', '010111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "0.5\n1\n-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprbxii3co.js:23:12)\n    at Object.<anonymous> (/tmp/tmprbxii3co.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1100', '0111'));\nconsole.log(min_Swaps('1101', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0101'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "../../../../tmp/tmp5n99_b38.ts(38,28): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5n99_b38.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmp5n99_b38.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpjco_gqb5.js:19:12)\n    at Object.<anonymous> (/tmp/tmpjco_gqb5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"10011001\", \"01100101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n1\n1\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzgycr_or.js:22:12)\n    at Object.<anonymous> (/tmp/tmpzgycr_or.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpalcp9imf.js:18:12)\n    at Object.<anonymous> (/tmp/tmpalcp9imf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100110'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp5q20d63_.js:23:12)\n    at Object.<anonymous> (/tmp/tmp5q20d63_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('110001', '010001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprb3o0riq.js:16:12)\n    at Object.<anonymous> (/tmp/tmprb3o0riq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count: number = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpz6dah8ad.js:19:12)\n    at Object.<anonymous> (/tmp/tmpz6dah8ad.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp_po9z72u.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_po9z72u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1110010111\", \"0101101110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpcka6yua5.js:19:12)\n    at Object.<anonymous> (/tmp/tmpcka6yua5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count: number = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i: number = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpy9naz1q5.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy9naz1q5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"10011\", \"01100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "2.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmplufxd5o5.js:21:12)\n    at Object.<anonymous> (/tmp/tmplufxd5o5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '11001'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpiqdafv25.js:19:12)\n    at Object.<anonymous> (/tmp/tmpiqdafv25.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"01100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpdms4e7n7.js:19:12)\n    at Object.<anonymous> (/tmp/tmpdms4e7n7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"10011\", \"10101\"));\nconsole.log(min_Swaps(\"11000\", \"10101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpf5x3kjrg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpf5x3kjrg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpr0cjyva8.js:18:12)\n    at Object.<anonymous> (/tmp/tmpr0cjyva8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011001', '01100110'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpnwqokc7p.js:19:12)\n    at Object.<anonymous> (/tmp/tmpnwqokc7p.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprk5_7nkm.js:19:12)\n    at Object.<anonymous> (/tmp/tmprk5_7nkm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11111', '01111'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('01111', '11100'));\nconsole.log(min_Swaps('01111', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "../../../../tmp/tmpb65_s5if.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpb65_s5if.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10111', '11011'));\nconsole.log(min_Swaps('10111', '11101'));\nconsole.log(min_Swaps('10111', '11101'));\nconsole.log(min_Swaps('10111', '11101'));\nconsole.log(min_Swaps('10111', '11101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n1\n1\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp8xj95jm8.js:25:12)\n    at Object.<anonymous> (/tmp/tmp8xj95jm8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11100', '10101'));\nconsole.log(min_Swaps('10011', '11100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n1\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpthsbui0m.js:23:12)\n    at Object.<anonymous> (/tmp/tmpthsbui0m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('100100', '101010'));\nconsole.log(min_Swaps('100100', '111010'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpmebiu_x2.js:20:12)\n    at Object.<anonymous> (/tmp/tmpmebiu_x2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpww3dsb8c.js:16:12)\n    at Object.<anonymous> (/tmp/tmpww3dsb8c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length === str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] !== str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"110011\", \"011111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "../../../../tmp/tmphf11bzcs.ts(35,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmphf11bzcs.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmphf11bzcs.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpm6ol06hd.js:16:12)\n    at Object.<anonymous> (/tmp/tmpm6ol06hd.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpww3dsb8c.js:16:12)\n    at Object.<anonymous> (/tmp/tmpww3dsb8c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(min_Swaps('10011001', '01111111'));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122498,
      "stdout": "../../../../tmp/tmpvzloewyg.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11000', '10101'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min_Swaps('10011', '11001'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122498,
      "stdout": "../../../../tmp/tmpizl6a533.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpizl6a533.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"011100110111010111011010111111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpnyz36b7n.js:21:12)\n    at Object.<anonymous> (/tmp/tmpnyz36b7n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11101', '01111'));\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('11000', '00111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n1\n2.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp314ff9s1.js:23:12)\n    at Object.<anonymous> (/tmp/tmp314ff9s1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp9llfy3go.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9llfy3go.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpg6f2_4zc.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg6f2_4zc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let str1_arr = str1.split(\"\");\n    let str2_arr = str2.split(\"\");\n    for (let i = 0; i < str1_arr.length; i++) {\n        if (str1_arr[i] != str2_arr[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpulokedit.js:18:12)\n    at Object.<anonymous> (/tmp/tmpulokedit.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count: number = 0;\n    if (str1.length == str2.length) {\n        for (let i: number = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"1110010111\", \"0101101110\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "3.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpxrcovo5x.js:21:12)\n    at Object.<anonymous> (/tmp/tmpxrcovo5x.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpyk79_8uf.js:20:12)\n    at Object.<anonymous> (/tmp/tmpyk79_8uf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpg6f2_4zc.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg6f2_4zc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "../../../../tmp/tmpls93_oev.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpls93_oev.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\n\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('11001', '011111'));\nconsole.log(min_Swaps('10011', '11111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n1.5\n-1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpgtz3rgnl.js:22:12)\n    at Object.<anonymous> (/tmp/tmpgtz3rgnl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let str1_arr = str1.split('');\n    let str2_arr = str2.split('');\n    for (let i = 0; i < str1_arr.length; i++) {\n        if (str1_arr[i] != str2_arr[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp2a9u_71a.js:18:12)\n    at Object.<anonymous> (/tmp/tmp2a9u_71a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpuamhaql9.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuamhaql9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpln6nv1e_.js:21:12)\n    at Object.<anonymous> (/tmp/tmpln6nv1e_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\n\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpgq2ba25w.js:19:12)\n    at Object.<anonymous> (/tmp/tmpgq2ba25w.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpg6f2_4zc.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg6f2_4zc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp9llfy3go.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9llfy3go.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100101'));\nconsole.log(min_Swaps('10011001', '01100111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n1\n3\n3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpxvgj0bzx.js:22:12)\n    at Object.<anonymous> (/tmp/tmpxvgj0bzx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count += 1;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprjj7fwhx.js:21:12)\n    at Object.<anonymous> (/tmp/tmprjj7fwhx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11101', '10101'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11100', '11100'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "0.5\n2\n0\n0.5\n0.5\n0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpl6tsaki8.js:26:12)\n    at Object.<anonymous> (/tmp/tmpl6tsaki8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length === str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] !== str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpq2l_8531.js:19:12)\n    at Object.<anonymous> (/tmp/tmpq2l_8531.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let str1_arr = str1.split('');\n    let str2_arr = str2.split('');\n    for (let i = 0; i < str1_arr.length; i++) {\n        if (str1_arr[i] != str2_arr[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp53i6zccd.js:18:12)\n    at Object.<anonymous> (/tmp/tmp53i6zccd.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\nconsole.log(min_Swaps('10011', '01100'));\nconsole.log(min_Swaps('10011', '11100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "0.5\n2.5\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmph9m5c4bt.js:23:12)\n    at Object.<anonymous> (/tmp/tmph9m5c4bt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let arr1 = str1.split('');\n    let arr2 = str2.split('');\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != arr2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('11100', '11111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp65sjtl_p.js:18:12)\n    at Object.<anonymous> (/tmp/tmp65sjtl_p.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpww3dsb8c.js:16:12)\n    at Object.<anonymous> (/tmp/tmpww3dsb8c.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\nconsole.log(min_Swaps('10101', '11001'));\nconsole.log(min_Swaps('10101', '11101'));\nconsole.log(min_Swaps('11100', '11001'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min_Swaps('11100', '11101'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "../../../../tmp/tmpzu2kmo0q.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmpzu2kmo0q.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsjj3o18k.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsjj3o18k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"010110011111111001110111111111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpme1mrhl1.js:21:12)\n    at Object.<anonymous> (/tmp/tmpme1mrhl1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprk5_7nkm.js:19:12)\n    at Object.<anonymous> (/tmp/tmprk5_7nkm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmplhepmy9s.js:19:12)\n    at Object.<anonymous> (/tmp/tmplhepmy9s.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('111000111', '111111111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122501,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmppudc42nc.js:21:12)\n    at Object.<anonymous> (/tmp/tmppudc42nc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11101', '10101'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min_Swaps('11111', '11111'));\nconsole.log(min\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122501,
      "stdout": "../../../../tmp/tmp4iq15w7a.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp4iq15w7a.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp4rjr2m2m.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4rjr2m2m.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count: number = 0;\n    if (str1.length == str2.length) {\n        for (let i: number = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122501,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpux_3_8qd.js:21:12)\n    at Object.<anonymous> (/tmp/tmpux_3_8qd.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11100\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpuwi7vmqg.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuwi7vmqg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let str1_arr = str1.split('');\n    let str2_arr = str2.split('');\n    for (let i = 0; i < str1_arr.length; i++) {\n        if (str1_arr[i] != str2_arr[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp4ki0suct.js:17:12)\n    at Object.<anonymous> (/tmp/tmp4ki0suct.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let str1_len = str1.length;\n    let str2_len = str2.length;\n    if (str1_len != str2_len) {\n        return -1;\n    }\n    for (let i = 0; i < str1_len; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"10011\", \"11100\"));\nconsole.log(min_Swaps(\"10011\", \"11100\"));\nconsole.log(min_Swaps(\"10011\", \"11100\"));\nconsole.log(min_Swaps(\"10011\", \"11100\"));\nconsole.log(min_Swaps(\"10011\", \"11100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "2\n2\n2\n2\n2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpvrz4_mm7.js:25:12)\n    at Object.<anonymous> (/tmp/tmpvrz4_mm7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\nconsole.log(min_Swaps('1101', '0101'));\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1101', '0110'));\nconsole.log(min_Swaps('1101', '0001'));\nconsole.log(min_Swaps('1101', '1101'));\nconsole.log(min_Swaps('1101', '1111'));\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1101', '1011'));\nconsole.log(min_Swaps('1101', '1110'));\nconsole.log(min_Swaps('1101', '0110'));\nconsole.log(min_Swaps('1101', '1100'));\nconsole.log(min_Swaps('1101', '1000'));\nconsole.log(min_Swaps('1101', '0100'));\nconsole.log(min_Swaps('1101', '0010'));\nconsole.log(min_Swaps('1101', '0001'));\nconsole.log(min_Swaps('1101', '0000'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "0\n1\n1\n1\n0\n0\n1\n1\n1\n1\n0\n1\n1\n2\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpqgv1m9fa.js:34:12)\n    at Object.<anonymous> (/tmp/tmpqgv1m9fa.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp9llfy3go.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9llfy3go.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('10011', '01100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_Swaps('10011', '11100'));\nconsole.log(min_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122501,
      "stdout": "../../../../tmp/tmpyfh98r3b.ts(38,1): error TS1005: ',' expected.\n../../../../tmp/tmpyfh98r3b.ts(38,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp9llfy3go.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9llfy3go.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\n\nconsole.log(min_Swaps('10101', '11001'));\nconsole.log(min_Swaps('11000', '01100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpmgfswq_g.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmgfswq_g.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpakcnw38x.js:22:12)\n    at Object.<anonymous> (/tmp/tmpakcnw38x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpg6f2_4zc.js:19:12)\n    at Object.<anonymous> (/tmp/tmpg6f2_4zc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\n\nconsole.log(min_Swaps('110001', '010111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp341upnaw.js:16:12)\n    at Object.<anonymous> (/tmp/tmp341upnaw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11100\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpuwi7vmqg.js:19:12)\n    at Object.<anonymous> (/tmp/tmpuwi7vmqg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11100\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpm7g4a8iz.js:21:12)\n    at Object.<anonymous> (/tmp/tmpm7g4a8iz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1100', '0101'));\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('100', '001'));\nconsole.log(min_Swaps('10101', '11100'));\nconsole.log(min_Swaps('10101', '11100'));\nconsole.log(min_Swaps('11100', '01111'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110'));\nconsole.log(min_Swaps('10011001', '01100110\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "../../../../tmp/tmpr97f_uyr.ts(35,44): error TS1002: Unterminated string literal.\n../../../../tmp/tmpr97f_uyr.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpr97f_uyr.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i])\n                count++;\n        }\n        return count / 2;\n    }\n    else\n        return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"110011\", \"011111\"));\nconsole.log(min_Swaps(\"10011\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n1.5\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp7qs_2yej.js:21:12)\n    at Object.<anonymous> (/tmp/tmp7qs_2yej.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"011100111011110111100111111111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpocnv_bj9.js:19:12)\n    at Object.<anonymous> (/tmp/tmpocnv_bj9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('10011', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n1.5\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp05k_hcph.js:23:12)\n    at Object.<anonymous> (/tmp/tmp05k_hcph.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1101', '0110'));\nconsole.log(min_Swaps('1101', '1110'));\nconsole.log(min_Swaps('1101', '010111'));\nconsole.log(min_Swaps('1101', '1101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "0.5\n1\n1.5\n1\n-1\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp9neiftwz.js:26:12)\n    at Object.<anonymous> (/tmp/tmp9neiftwz.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('10011', '11111'));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "../../../../tmp/tmps57kljxq.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10011', '01100'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "2.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpjyxxdofr.js:21:12)\n    at Object.<anonymous> (/tmp/tmpjyxxdofr.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp30a1bnqw.js:20:12)\n    at Object.<anonymous> (/tmp/tmp30a1bnqw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11101\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmphtd7_n3j.js:19:12)\n    at Object.<anonymous> (/tmp/tmphtd7_n3j.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\nconsole.log(min_Swaps('1100', '0111'));\nconsole.log(min_Swaps('110011', '010111'));\nconsole.log(min_Swaps('10011001', '01100110'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1\n1\n1\n4\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpkysc6jtm.js:22:12)\n    at Object.<anonymous> (/tmp/tmpkysc6jtm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpiranwth7.js:19:12)\n    at Object.<anonymous> (/tmp/tmpiranwth7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let arr1 = str1.split('');\n    let arr2 = str2.split('');\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != arr2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpe72lo_9y.js:18:12)\n    at Object.<anonymous> (/tmp/tmpe72lo_9y.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\n\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('110011', '011111'));\nconsole.log(min_Swaps('110011', '0111111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122502,
      "stdout": "1.5\n1.5\n-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpbxrwx3kg.js:21:12)\n    at Object.<anonymous> (/tmp/tmpbxrwx3kg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('11', '11'));\nconsole.log(min_Swaps('000', '111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122503,
      "stdout": "1\n1\n0\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpqsaw1tt8.js:22:12)\n    at Object.<anonymous> (/tmp/tmpqsaw1tt8.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122503,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp_zaiu4cx.js:19:12)\n    at Object.<anonymous> (/tmp/tmp_zaiu4cx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122504,
      "stdout": "0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp2_k6zp2q.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2_k6zp2q.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\n\nconsole.log(min_Swaps('11101', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122504,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp75c82lqs.js:21:12)\n    at Object.<anonymous> (/tmp/tmp75c82lqs.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp6yjtk6a1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6yjtk6a1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp6yjtk6a1.js:19:12)\n    at Object.<anonymous> (/tmp/tmp6yjtk6a1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11101', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122504,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpkfsm9lrs.js:21:12)\n    at Object.<anonymous> (/tmp/tmpkfsm9lrs.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let arr1 = str1.split('');\n    let arr2 = str2.split('');\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != arr2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122504,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpooyad4g5.js:18:12)\n    at Object.<anonymous> (/tmp/tmpooyad4g5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"011100110111010111011010111111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "6\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpnyz36b7n.js:21:12)\n    at Object.<anonymous> (/tmp/tmpnyz36b7n.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"01011001111101111001111101111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122504,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp36qs_5bv.js:19:12)\n    at Object.<anonymous> (/tmp/tmp36qs_5bv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11100', '01111'));\nconsole.log(min_Swaps('11100', '11111'));\nconsole.log(min_Swaps('10011', '11111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n1\n1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsbj6cj58.js:22:12)\n    at Object.<anonymous> (/tmp/tmpsbj6cj58.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11000', '10101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpxkoxddnx.js:20:12)\n    at Object.<anonymous> (/tmp/tmpxkoxddnx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"10011\", \"10101\"));\nconsole.log(min_Swaps(\"11000\", \"10101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpf5x3kjrg.js:22:12)\n    at Object.<anonymous> (/tmp/tmpf5x3kjrg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count: number = 0;\n    if (str1.length == str2.length) {\n        for (let i: number = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpmp6o4zui.js:21:12)\n    at Object.<anonymous> (/tmp/tmpmp6o4zui.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122499,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpln6nv1e_.js:21:12)\n    at Object.<anonymous> (/tmp/tmpln6nv1e_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1101\", \"0101\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpl_u6tmyq.js:16:12)\n    at Object.<anonymous> (/tmp/tmpl_u6tmyq.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let i = 0;\n    let j = 0;\n    while (i < str1.length && j < str2.length) {\n        if (str1[i] !== str2[j]) {\n            count++;\n        }\n        i++;\n        j++;\n    }\n    return count;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpxn29dx08.js:19:12)\n    at Object.<anonymous> (/tmp/tmpxn29dx08.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let arr1 = str1.split('');\n    let arr2 = str2.split('');\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(min_Swaps('11100', '11111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpgtoo0ybo.js:17:12)\n    at Object.<anonymous> (/tmp/tmpgtoo0ybo.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp2brp7khv.js:19:12)\n    at Object.<anonymous> (/tmp/tmp2brp7khv.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"111011110011111011111100011111\", \"01011001111101111001111101111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "-1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmplw7a9cix.js:21:12)\n    at Object.<anonymous> (/tmp/tmplw7a9cix.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length === str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] !== str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11001', '01111'));\nconsole.log(min_Swaps('100', '111'));\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n1.5\n1\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp2i2j6643.js:22:12)\n    at Object.<anonymous> (/tmp/tmp2i2j6643.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmppantu826.js:16:12)\n    at Object.<anonymous> (/tmp/tmppantu826.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11001', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzd5jo1hf.js:21:12)\n    at Object.<anonymous> (/tmp/tmpzd5jo1hf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11100\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpm7g4a8iz.js:21:12)\n    at Object.<anonymous> (/tmp/tmpm7g4a8iz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100101', '01011011'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122496,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp5qyikkxm.js:21:12)\n    at Object.<anonymous> (/tmp/tmp5qyikkxm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"1101\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp5syilbwc.js:19:12)\n    at Object.<anonymous> (/tmp/tmp5syilbwc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp6r2vdkrw.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6r2vdkrw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsjj3o18k.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsjj3o18k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return false;\n}\nconsole.log(min_Swaps('11101', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpzmhpwe0b.js:19:12)\n    at Object.<anonymous> (/tmp/tmpzmhpwe0b.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1110111\", \"0110011\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp6ehq4qi9.js:16:12)\n    at Object.<anonymous> (/tmp/tmp6ehq4qi9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"1100\", \"0111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1.5\n1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpakcnw38x.js:22:12)\n    at Object.<anonymous> (/tmp/tmpakcnw38x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('1101', '0111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp4rjr2m2m.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4rjr2m2m.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpnq2hvbw0.js:20:12)\n    at Object.<anonymous> (/tmp/tmpnq2hvbw0.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpel6p5tpr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpel6p5tpr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"110011\", \"011111\"));\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "../../../../tmp/tmpznkkf5kp.ts(35,32): error TS1002: Unterminated string literal.\n../../../../tmp/tmpznkkf5kp.ts(36,1): error TS1005: ',' expected.\n../../../../tmp/tmpznkkf5kp.ts(36,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let arr1 = str1.split(\"\");\n    let arr2 = str2.split(\"\");\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != arr2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps(\"1110111\", \"0110001\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp330j7v4r.js:18:12)\n    at Object.<anonymous> (/tmp/tmp330j7v4r.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('10111', '11101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122505,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmptspuk3oe.js:21:12)\n    at Object.<anonymous> (/tmp/tmptspuk3oe.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\n\nconsole.log(min_Swaps(\"10011\", \"01100\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122506,
      "stdout": "2\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpkx0gjjpb.js:19:12)\n    at Object.<anonymous> (/tmp/tmpkx0gjjpb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1101', '0101'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpsjj3o18k.js:21:12)\n    at Object.<anonymous> (/tmp/tmpsjj3o18k.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('11100', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122493,
      "stdout": "1.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmprqxl14ux.js:21:12)\n    at Object.<anonymous> (/tmp/tmprqxl14ux.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length != str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    return count / 2;\n}\nconsole.log(min_Swaps('10011', '10101'));\nconsole.log(min_Swaps('11100', '01111'));\nconsole.log(min_Swaps('100', '111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122506,
      "stdout": "1\n1.5\n1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmpgxa6fa5p.js:21:12)\n    at Object.<anonymous> (/tmp/tmpgxa6fa5p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    else {\n        return -1;\n    }\n}\nconsole.log(min_Swaps('1100', '1001'));\nconsole.log(min_Swaps('1100', '1110'));\nconsole.log(min_Swaps('1100', '0110'));\nconsole.log(min_Swaps('1100', '0101'));\nconsole.log(min_Swaps('1100', '0111'));\nconsole.log(min_Swaps('1100', '1101'));\nconsole.log(min_Swaps('1100', '1111'));\nconsole.log(min_Swaps('1100', '0000'));\nconsole.log(min_Swaps('1100', '0001'));\nconsole.log(min_Swaps('1100', '0010'));\nconsole.log(min_Swaps('1100', '0011'));\nconsole.log(min_Swaps('1100', '0100'));\nconsole.log(min_Swaps('1100', '0111'));\nconsole.log(min_Swaps('1100', '1000'));\nconsole.log(min_Swaps('1100', '1010'));\nconsole.log(min_Swaps('1100', '1011'));\nconsole.log(min_Swaps('1100', '1100'));\nconsole.log(min_Swaps('1100', '1101'));\nconsole.log(min_Swaps('1100', '1110'));\nconsole.log(min_Swaps('1100', '1111'));\nconsole.log(min_Swaps('1100', '0001'));\nconsole.log(min_Swaps('1100', '0010'));\nconsole.log(min_Swaps('1100', '0011'));\nconsole.log(min_Swaps('1100', '0100'));\nconsole.log(min_Swaps('1100', '0101'));\nconsole.log(min_\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122506,
      "stdout": "../../../../tmp/tmp0jqib5ou.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp0jqib5ou.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    let str1_arr = str1.split('');\n    let str2_arr = str2.split('');\n    for (let i = 0; i < str1_arr.length; i++) {\n        if (str1_arr[i] != str2_arr[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(min_Swaps(\"11001\", \"01111\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122506,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpp6td_zr1.js:17:12)\n    at Object.<anonymous> (/tmp/tmpp6td_zr1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length == str2.length) {\n        for (let i = 0; i < str1.length; i++) {\n            if (str1[i] != str2[i]) {\n                count++;\n            }\n        }\n        return count / 2;\n    }\n    return -1;\n}\n\nconsole.log(min_Swaps(\"11001\", \"01111\"));\nconsole.log(min_Swaps(\"110011\", \"011111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"10011001\", \"01111111\"));\nconsole.log(min_Swaps(\"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1666122506,
      "stdout": "../../../../tmp/tmp5cg1bsi1.ts(36,24): error TS1002: Unterminated string literal.\n../../../../tmp/tmp5cg1bsi1.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmp5cg1bsi1.ts(37,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nfunction min_Swaps(str1: string, str2: string): any {\n    let count = 0;\n    if (str1.length !== str2.length) {\n        return -1;\n    }\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] !== str2[i]) {\n            count++;\n        }\n    }\n    return Math.floor(count / 2);\n}\nconsole.log(min_Swaps('11101', '01111'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_Swaps;\n  assert.deepEqual(candidate(\"1101\", \"1110\"),1);\n  assert.deepEqual(candidate(\"111\", \"000\"),\"Not Possible\");\n  assert.deepEqual(candidate(\"111\", \"110\"),\"Not Possible\");\n}\n\ntest();",
      "timestamp": 1665517200,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely deep-equal\n\n'Not Possible'\n    at test (/tmp/tmp613e0qhf.js:19:12)\n    at Object.<anonymous> (/tmp/tmp613e0qhf.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 'Not Possible',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_745_divisible_by_digits",
  "language": "ts",
  "prompt": "//Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\nfunction divisible_by_digits(startnum: number, endnum: number): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = divisible_by_digits;\n  assert.deepEqual(candidate(1, 22),[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]);\n  assert.deepEqual(candidate(1, 15),[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]);\n  assert.deepEqual(candidate(20, 25),[22, 24]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let is_divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = digits.every(digit => i % digit === 0);\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 500));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split('');\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    return Array.from({ length: endnum - startnum + 1 }, (_, i) => i + startnum).filter(num => {\n        const digits = Array.from(String(num), Number);\n        return digits.every(digit => num % digit === 0);\n    });\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(d => i % d == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    const result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        const digits = i.toString().split('');\n        if (digits.every(digit => i % parseInt(digit) === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    return Array.from(Array(endnum - startnum + 1).keys()).map(i => i + startnum).filter(x => x.toString().split('').map(y => parseInt(y)).every(y => x % y == 0));\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        let divisible: boolean = digits.every(x => i % x == 0);\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let isDivisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i: number = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let divisible: boolean = true;\n        let num: number = i;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    const result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible: boolean = true;\n        const digits: number[] = i.toString().split('').map(x => parseInt(x));\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 1000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    const result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        const digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i.toString();\n        let divisible = true;\n        for (let j = 0; j < num.length; j++) {\n            if (i % parseInt(num[j]) != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible: boolean = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = digits.every(digit => i % digit === 0);\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\nconsole.log(divisible_by_digits(1000, 2000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num_str: string = i.toString();\n        let is_divisible: boolean = true;\n        for (let j = 0; j < num_str.length; j++) {\n            if (i % parseInt(num_str[j]) !== 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit !== 0 && i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i: number = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    return range(startnum, endnum).filter(num => num.toString().split('').every(digit => num % parseInt(digit) === 0));\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let is_divisible: boolean = true;\n        let num: number = i;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                is_divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        let digits = i.toString().split('');\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = digits.every(digit => i % digit === 0);\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(d => i % d == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = digits.every(digit => i % digit == 0);\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split(\"\");\n        let isDivisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible: boolean = true;\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let divisible: boolean = true;\n        let num: number = i;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[j] === 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let flag = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                flag = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (flag) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split(\"\");\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num: number = i;\n        let divisible: boolean = true;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i < endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(100, 200));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\nconsole.log(divisible_by_digits(1000, 10000));\n",
    "    return Array.from(Array(endnum - startnum + 1), (_, i) => i + startnum).filter(x => x.toString().split('').every(y => x % parseInt(y) === 0));\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let flag = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                flag = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (flag) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num_str: string = i.toString();\n        let divisible: boolean = true;\n        for (let j = 0; j < num_str.length; j++) {\n            if (i % parseInt(num_str[j]) != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits = i.toString().split('');\n        if (digits.every(digit => i % parseInt(digit) == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        if (i.toString().split(\"\").every(x => i % parseInt(x) == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = digits.every(digit => i % digit === 0);\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i.toString();\n        let divisible = true;\n        for (let j = 0; j < num.length; j++) {\n            if (i % parseInt(num[j]) != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: string[] = i.toString().split('');\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        let num = i;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        let divisible = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[j] == 0) {\n                divisible = false;\n                break;\n            }\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(divisible_by_digits(1, 100));\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let is_divisible: boolean = digits.every(digit => i % digit === 0);\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let divisible = true;\n        while (num > 0) {\n            let digit = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let is_divisible: boolean = true;\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                is_divisible = false;\n                break;\n            }\n        }\n        if (is_divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        let isDivisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let divisible: boolean = true;\n        let num: number = i;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit === 0 || i % digit !== 0) {\n                divisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split(\"\").map(x => parseInt(x));\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let nums: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit == 0)) {\n            nums.push(i);\n        }\n    }\n    return nums;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(x => parseInt(x));\n        let divisible: boolean = true;\n        for (let j = 0; j < digits.length; j++) {\n            if (i % digits[j] != 0) {\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(x => i % x == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible: boolean = true;\n        let num: number = i;\n        while (num > 0) {\n            let digit: number = num % 10;\n            if (digit == 0 || i % digit != 0) {\n                isDivisible = false;\n                break;\n            }\n            num = Math.floor(num / 10);\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    const result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let isDivisible = true;\n        const digits = i.toString().split('');\n        for (let j = 0; j < digits.length; j++) {\n            if (i % parseInt(digits[j]) !== 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i;\n        let digits: number[] = [];\n        while (num > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num / 10);\n        }\n        if (digits.every(d => i % d == 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let divisible_by_all_digits = true;\n        for (let j = 0; j < i.toString().length; j++) {\n            if (i % parseInt(i.toString().charAt(j)) !== 0) {\n                divisible_by_all_digits = false;\n                break;\n            }\n        }\n        if (divisible_by_all_digits) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let digits: number[] = i.toString().split('').map(Number);\n        if (digits.every(digit => i % digit === 0)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = startnum; i <= endnum; i++) {\n        let num = i.toString();\n        let isDivisible = true;\n        for (let j = 0; j < num.length; j++) {\n            if (i % parseInt(num[j]) != 0) {\n                isDivisible = false;\n                break;\n            }\n        }\n        if (isDivisible) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n"
  ]
}
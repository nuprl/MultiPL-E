{
  "name": "mbpp_792_count_list",
  "language": "ts",
  "prompt": "//Write a python function to count the number of lists in a given number of lists.\nfunction count_list(input_list: number[][]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_792_count_list.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_list;\n  assert.deepEqual(candidate([[1, 3], [5, 7], [9, 11], [13, 15, 17]]),4);\n  assert.deepEqual(candidate([[1, 2], [2, 3], [4, 5]]),3);\n  assert.deepEqual(candidate([[1, 0], [2, 0]]),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3], [1, 2, 3], [1, 2, 3]]));\n",
    "    let count = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [4, 5], [6, 7, 8], [9, 10, 11, 12]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([1, 2, 3]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([1, 2, 3]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] === 'object') {\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8, 9]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] === 'object') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] === 'object') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [4, 5, 6], [7, 8, 9]]));\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([1, 2, 3]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8, 9]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\nlet input_list: number[][] = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nconsole.log(count_list(input_list));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8, 9]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count += 1;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([1, 2, 3]));\n",
    "    let count: number = 0;\n    for (let i: number = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count = count + 1;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([1, 2, 3]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (typeof input_list[i] == 'object') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\nconsole.log(count_list([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8, 9]]));\n",
    "    let count: number = 0;\n    for (let i = 0; i < input_list.length; i++) {\n        if (Array.isArray(input_list[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]));\nconsole.log(count_list([1, 2, 3]));\n"
  ]
}
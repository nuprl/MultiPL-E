{
  "name": "mbpp_764_number_ctr",
  "language": "ts",
  "prompt": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('123456789'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('python'));\nconsole.log(number_ctr('python3.6'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    return str.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n14\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpyq258bya.js:8:12)\n    at Object.<anonymous> (/tmp/tmpyq258bya.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 14,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('Hello world!'));\nconsole.log(number_ctr('123456789'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr(\"123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            ctr++;\n        }\n    }\n    return ctr;\n}\nconsole.log(number_ctr(\"12345\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('1234567890'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\nconsole.log(number_ctr(\"abc123\"));\nconsole.log(number_ctr(\"abc\"));\nconsole.log(number_ctr(\"123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charAt(i) >= '0' && str.charAt(i) <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"python\"));\nconsole.log(number_ctr(\"python123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"Python 3.2\"));\nconsole.log(number_ctr(\"Python 3.2.1\"));\nconsole.log(number_ctr(\"Python 3.2.1.4\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "2\n3\n4\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\nconsole.log(number_ctr('123456789'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"Hello World\"));\nconsole.log(number_ctr(\"123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let num_ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            num_ctr++;\n        }\n    }\n    return num_ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world!'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n  let count: number = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] >= \"0\" && str[i] <= \"9\") {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(number_ctr(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"Hello world! 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('123456789'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('sdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfs\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "../../../../tmp/tmpnozqy837.ts(11,677): error TS1002: Unterminated string literal.\n../../../../tmp/tmpnozqy837.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpnozqy837.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr(\"python\"));\nconsole.log(number_ctr(\"python123\"));\nconsole.log(number_ctr(\"python12345\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n3\n5\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('sdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfs\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "../../../../tmp/tmpnozqy837.ts(11,677): error TS1002: Unterminated string literal.\n../../../../tmp/tmpnozqy837.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpnozqy837.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\nconsole.log(number_ctr(\"hello world 123 456\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n3\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world!'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('hello world'));\nconsole.log(number_ctr('hello 123 world'));\nconsole.log(number_ctr('hello 123 world 123'));\nconsole.log(number_ctr('hello 123 world 123 123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122654,
      "stdout": "0\n3\n6\n9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"Python 3.2\"));\nconsole.log(number_ctr(\"Python 3.2\"));\nconsole.log(number_ctr(\"Python 3.2\"));\nconsole.log(number_ctr(\"Python 3.2\"));\nconsole.log(number_ctr(\"Python 3.2\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122654,
      "stdout": "2\n2\n2\n2\n2\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('python'));\nconsole.log(number_ctr('python123'));\nconsole.log(number_ctr('123python'));\nconsole.log(number_ctr('123python123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "0\n3\n3\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('abc123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('sdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfsdfs\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "../../../../tmp/tmpvlrltcd5.ts(11,680): error TS1002: Unterminated string literal.\n../../../../tmp/tmpvlrltcd5.ts(12,1): error TS1005: ',' expected.\n../../../../tmp/tmpvlrltcd5.ts(12,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\nconsole.log(number_ctr('123456789'));\nconsole.log(number_ctr('hello123'));\nconsole.log(number_ctr('123hello'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122654,
      "stdout": "0\n9\n3\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('hello world'));\nconsole.log(number_ctr('hello 123'));\nconsole.log(number_ctr('hello 123456'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122654,
      "stdout": "0\n3\n6\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str.charAt(i) >= '0' && str.charAt(i) <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"1234567890\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "10\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"123456789\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n  let count: number = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] >= \"0\" && str[i] <= \"9\") {\n      count++;\n    }\n  }\n  return count;\n}\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122653,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122651,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) >= 48 && str.charCodeAt(i) <= 57) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\nconsole.log(number_ctr('123456789'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr('abc123'));\nconsole.log(number_ctr('abc'));\nconsole.log(number_ctr('123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "3\n0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let ctr: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;\n}\nconsole.log(number_ctr('abc123def'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr(\"hello123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122650,
      "stdout": "0\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i: number = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    var count: number = 0;\n    for (var i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(number_ctr('hello world'));\nconsole.log(number_ctr('hello world 123'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1665510131,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to count number of digits in a given string.\nfunction number_ctr(str: string): number {\n    let count: number = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(number_ctr(\"hello world\"));\nconsole.log(number_ctr(\"hello world 123\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = number_ctr;\n  assert.deepEqual(candidate(\"program2bedone\"),1);\n  assert.deepEqual(candidate(\"3wonders\"),1);\n  assert.deepEqual(candidate(\"123\"),3);\n  assert.deepEqual(candidate(\"3wond-1ers2\"),3);\n}\n\ntest();",
      "timestamp": 1666122655,
      "stdout": "0\n3\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
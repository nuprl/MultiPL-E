{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "ts",
  "prompt": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjr7vg_rk.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpjr7vg_rk.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i != a && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmp16y1153_.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp16y1153_.ts(6,23): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum: number = 0;\n        for (let j = 1; j < i; j++) {\n            if (i % j === 0) {\n                divisors_sum += j;\n            }\n        }\n        let divisors_sum_2: number = 0;\n        for (let j = 1; j < divisors_sum; j++) {\n            if (divisors_sum % j === 0) {\n                divisors_sum_2 += j;\n            }\n        }\n        if (divisors_sum_2 === i && divisors_sum !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpgygtprwd.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmppss_s096.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppss_s096.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of_number(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of_number(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpe68ss2j7.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n../../../../tmp/tmpe68ss2j7.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8ujls_hy.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8ujls_hy.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpvxdv69p9.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpvxdv69p9.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of_number(i);\n        if (sum_of_divisors > i && sum_of_divisors_of_number(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjnjmvxi7.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n../../../../tmp/tmpjnjmvxi7.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of_number(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of_number(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpe68ss2j7.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n../../../../tmp/tmpe68ss2j7.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpv6dy8h6o.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpv6dy8h6o.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        if (amicable_numbers(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmp64hg_ubr.ts(5,13): error TS2304: Cannot find name 'amicable_numbers'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i == sum_of_divisors(a) && a != i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmp5jz0akrk.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp5jz0akrk.ts(6,18): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = get_divisors_sum(i);\n        if (divisors_sum < limit) {\n            let divisors_sum_divisors_sum = get_divisors_sum(divisors_sum);\n            if (divisors_sum_divisors_sum == i && divisors_sum != i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpa_3q7nk3.ts(5,28): error TS2304: Cannot find name 'get_divisors_sum'.\n../../../../tmp/tmpa_3q7nk3.ts(7,45): error TS2304: Cannot find name 'get_divisors_sum'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpopmqm344.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpopmqm344.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmppss_s096.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppss_s096.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpojhoeclx.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpojhoeclx.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        let sum_divisors_j = sum_divisors(sum_divisors_i);\n        if (sum_divisors_j == i && sum_divisors_i != sum_divisors_j) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmp6z_aj23q.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmp6z_aj23q.ts(6,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122691,
      "stdout": "../../../../tmp/tmpx5jjcva5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpx5jjcva5.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpjei0cux1.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpf2tl6sdn.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpf2tl6sdn.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        let sum_divisors_sum_divisors_i = sum_divisors(sum_divisors_i);\n        if (i === sum_divisors_sum_divisors_i && i !== sum_divisors_i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpyg1ees71.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpyg1ees71.ts(6,43): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_proper_divisors(i);\n        let b: number = sum_of_proper_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmpgmve6izy.ts(5,25): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmpgmve6izy.ts(6,25): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = sum_of_divisors(i);\n        if (i === sum_of_divisors(divisors_sum) && i !== divisors_sum) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmp8w9em2ia.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8w9em2ia.ts(6,19): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors = get_divisors(i);\n        let sum_divisors = divisors.reduce((a, b) => a + b, 0);\n        if (sum_divisors > i) {\n            let divisors_sum_divisors = get_divisors(sum_divisors);\n            let sum_divisors_sum_divisors = divisors_sum_divisors.reduce((a, b) => a + b, 0);\n            if (sum_divisors_sum_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmp_xxf0gl6.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp_xxf0gl6.ts(8,41): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_divisors = sum_of_divisors(i);\n        if (sum_divisors > i && sum_of_divisors(sum_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmp2rilkyi5.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp2rilkyi5.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmph46doq66.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmph46doq66.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of_number(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of_number(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpuoecf6hu.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n../../../../tmp/tmpuoecf6hu.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxne4_ou0.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxne4_ou0.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (b == i && a != b) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmpmpx1a2bt.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpmpx1a2bt.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_divisors(i);\n        if (a > i && sum_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpmggfibyq.ts(5,17): error TS2304: Cannot find name 'sum_divisors'.\n../../../../tmp/tmpmggfibyq.ts(6,22): error TS2304: Cannot find name 'sum_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpf2tl6sdn.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpf2tl6sdn.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmppss_s096.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppss_s096.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmp5b03_hii.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp5b03_hii.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b === i && a !== b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmph46doq66.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmph46doq66.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmptxeksbul.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors = sum_of_divisors(i);\n        if (sum_divisors > i && sum_of_divisors(sum_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmptdp5yrgf.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmptdp5yrgf.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxne4_ou0.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxne4_ou0.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmppss_s096.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppss_s096.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_divisors(i);\n        let b = sum_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmp330wnn8k.ts(5,17): error TS2304: Cannot find name 'sum_divisors'.\n../../../../tmp/tmp330wnn8k.ts(6,17): error TS2304: Cannot find name 'sum_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let divisors_sum: number = divisors_sum_of_number(i);\n        if (divisors_sum > i) {\n            if (divisors_sum_of_number(divisors_sum) == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmp7uj271x_.ts(5,36): error TS2304: Cannot find name 'divisors_sum_of_number'.\n../../../../tmp/tmp7uj271x_.ts(7,17): error TS2304: Cannot find name 'divisors_sum_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n            sum += a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmp5cvq0hgd.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp5cvq0hgd.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_factors_i = sum_factors(i);\n        let sum_factors_sum_factors_i = sum_factors(sum_factors_i);\n        if (sum_factors_sum_factors_i == i && sum_factors_i != i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmp_5q1_mar.ts(5,29): error TS2552: Cannot find name 'sum_factors'. Did you mean 'sum_factors_i'?\n../../../../tmp/tmp_5q1_mar.ts(6,41): error TS2552: Cannot find name 'sum_factors'. Did you mean 'sum_factors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjr7vg_rk.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpjr7vg_rk.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpjmfa1lkq.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpjmfa1lkq.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i: number = sum_of_divisors(i);\n        let sum_of_divisors_j: number = sum_of_divisors(sum_of_divisors_i);\n        if (sum_of_divisors_j == i && sum_of_divisors_i != sum_of_divisors_j) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmp1hoowlrs.ts(5,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmp1hoowlrs.ts(6,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122701,
      "stdout": "../../../../tmp/tmpaqtvtxr6.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpaqtvtxr6.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpjei0cux1.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpxne4_ou0.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpxne4_ou0.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let divisors_sum: number = 0;\n        for (let j: number = 1; j < i; j++) {\n            if (i % j == 0) {\n                divisors_sum += j;\n            }\n        }\n        if (divisors_sum > i) {\n            let divisors_sum_2: number = 0;\n            for (let j: number = 1; j < divisors_sum; j++) {\n                if (divisors_sum % j == 0) {\n                    divisors_sum_2 += j;\n                }\n            }\n            if (divisors_sum_2 == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n220\n\nshould loosely deep-equal\n\n504\n    at test (/tmp/tmp_eiuwcxd.js:28:12)\n    at Object.<anonymous> (/tmp/tmp_eiuwcxd.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 220,\n  expected: 504,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        if (amicable_numbers(i, sum_of_divisors(i)) && amicable_numbers(sum_of_divisors(i), i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmp4cw8z0i5.ts(5,13): error TS2304: Cannot find name 'amicable_numbers'.\n../../../../tmp/tmp4cw8z0i5.ts(5,33): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp4cw8z0i5.ts(5,56): error TS2304: Cannot find name 'amicable_numbers'.\n../../../../tmp/tmp4cw8z0i5.ts(5,73): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i <= limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (i === b && i !== a) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpjokuejlk.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpjokuejlk.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpiilr5oz_.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpiilr5oz_.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        const d1 = divisors_sum(i);\n        if (d1 > i) {\n            const d2 = divisors_sum(d1);\n            if (d2 === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpgukg675l.ts(5,20): error TS2304: Cannot find name 'divisors_sum'.\n../../../../tmp/tmpgukg675l.ts(7,24): error TS2304: Cannot find name 'divisors_sum'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    if (is_amicable(i)) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "../../../../tmp/tmpcm_9b4d3.ts(5,9): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors_i: number = sum_of_divisors(i);\n        let sum_of_divisors_sum_of_divisors_i: number = sum_of_divisors(sum_of_divisors_i);\n        if (i == sum_of_divisors_sum_of_divisors_i && i != sum_of_divisors_i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "../../../../tmp/tmpaeax6b83.ts(5,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpaeax6b83.ts(6,57): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmp__dwuj_y.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp__dwuj_y.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors = get_divisors(i);\n        let divisors_sum = divisors.reduce((a, b) => a + b, 0);\n        if (i !== divisors_sum) {\n            let divisors_divisors = get_divisors(divisors_sum);\n            let divisors_divisors_sum = divisors_divisors.reduce((a, b) => a + b, 0);\n            if (i === divisors_divisors_sum) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "../../../../tmp/tmp81pu9y14.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp81pu9y14.ts(8,37): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpmy29f2og.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpmy29f2og.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i + a;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmpvlkgj65x.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpvlkgj65x.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i = sum_of_divisors(i);\n        if (sum_of_divisors_i > i) {\n            let sum_of_divisors_sum_of_divisors_i = sum_of_divisors(sum_of_divisors_i);\n            if (sum_of_divisors_sum_of_divisors_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpwl0tg7sx.ts(5,33): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpwl0tg7sx.ts(7,53): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_proper_divisors(i);\n        if (a > i && sum_of_proper_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "../../../../tmp/tmprgv337fq.ts(5,17): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmprgv337fq.ts(6,22): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors_of(sum_of_divisors) === i && sum_of_divisors !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpvw12soc5.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpvw12soc5.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpddwb34id.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpddwb34id.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_proper_divisors(i);\n        let b = sum_of_proper_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "../../../../tmp/tmpt3qxbjew.ts(5,17): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmpt3qxbjew.ts(6,17): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpvc4q1d0f.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpvc4q1d0f.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8ujls_hy.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8ujls_hy.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors_of(sum_of_divisors) === i && i !== sum_of_divisors) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122706,
      "stdout": "../../../../tmp/tmpd__75e44.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpd__75e44.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpdap6l5v5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdap6l5v5.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpjmfa1lkq.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpjmfa1lkq.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_i = sum_divisors(i);\n        if (sum_i > i && sum_divisors(sum_i) === i) {\n            sum += i + sum_i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpxcc7hpjc.ts(5,21): error TS2304: Cannot find name 'sum_divisors'.\n../../../../tmp/tmpxcc7hpjc.ts(6,26): error TS2304: Cannot find name 'sum_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors = get_divisors(i);\n        let sum_divisors = sum_array(divisors);\n        if (sum_divisors > i) {\n            let divisors_sum_divisors = get_divisors(sum_divisors);\n            let sum_divisors_sum_divisors = sum_array(divisors_sum_divisors);\n            if (sum_divisors_sum_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpi4p8nqzq.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmpi4p8nqzq.ts(6,28): error TS2304: Cannot find name 'sum_array'.\n../../../../tmp/tmpi4p8nqzq.ts(8,41): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmpi4p8nqzq.ts(9,45): error TS2304: Cannot find name 'sum_array'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i + a;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmpvlkgj65x.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpvlkgj65x.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum_i = divisors_sum(i);\n        if (divisors_sum_i > i) {\n            let divisors_sum_divisors_sum_i = divisors_sum(divisors_sum_i);\n            if (divisors_sum_divisors_sum_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpwdlig2sm.ts(5,30): error TS2552: Cannot find name 'divisors_sum'. Did you mean 'divisors_sum_i'?\n../../../../tmp/tmpwdlig2sm.ts(7,47): error TS2552: Cannot find name 'divisors_sum'. Did you mean 'divisors_sum_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_sum_divisors_i = sum_divisors(sum_divisors_i);\n            if (sum_divisors_sum_divisors_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmp842abtdz.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmp842abtdz.ts(7,47): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i: number = sum_of_divisors(i);\n        let sum_of_divisors_sum_of_divisors_i: number = sum_of_divisors(sum_of_divisors_i);\n        if (sum_of_divisors_sum_of_divisors_i == i && i != sum_of_divisors_i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmp7mqlqwre.ts(5,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmp7mqlqwre.ts(6,57): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjr7vg_rk.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpjr7vg_rk.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjr7vg_rk.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpjr7vg_rk.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i = sum_of_divisors(i);\n        if (sum_of_divisors_i > i) {\n            let sum_of_divisors_j = sum_of_divisors(sum_of_divisors_i);\n            if (sum_of_divisors_j == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmp92p78hzq.ts(5,33): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmp92p78hzq.ts(7,37): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_j'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let divisors_sum: number = sum_divisors(i);\n        if (divisors_sum > i) {\n            let divisors_sum_of_divisors_sum: number = sum_divisors(divisors_sum);\n            if (divisors_sum_of_divisors_sum == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpki_7dvfj.ts(5,36): error TS2304: Cannot find name 'sum_divisors'.\n../../../../tmp/tmpki_7dvfj.ts(7,56): error TS2304: Cannot find name 'sum_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpdap6l5v5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdap6l5v5.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let divisors_sum: number = 0;\n        for (let j: number = 1; j < i; j++) {\n            if (i % j === 0) {\n                divisors_sum += j;\n            }\n        }\n        let divisors_sum_2: number = 0;\n        for (let j: number = 1; j < divisors_sum; j++) {\n            if (divisors_sum % j === 0) {\n                divisors_sum_2 += j;\n            }\n        }\n        if (divisors_sum_2 === i && divisors_sum !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors = get_divisors(i);\n        let sum_divisors = divisors.reduce((a, b) => a + b, 0);\n        if (sum_divisors !== i) {\n            let sum_divisors_divisors = get_divisors(sum_divisors);\n            let sum_divisors_divisors_sum = sum_divisors_divisors.reduce((a, b) => a + b, 0);\n            if (sum_divisors_divisors_sum === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmp2lc8wplp.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmp2lc8wplp.ts(8,41): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of_number(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of_number(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122702,
      "stdout": "../../../../tmp/tmpuoecf6hu.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n../../../../tmp/tmpuoecf6hu.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        const a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpdjik9srt.ts(5,19): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdjik9srt.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmps8hpy3ob.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += a + b;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpmcne8242.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpmcne8242.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpe97k6qtw.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpe97k6qtw.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpufc31fcq.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors: number = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpvc4q1d0f.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpvc4q1d0f.ts(7,62): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += a + b;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpu940_da5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpu940_da5.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjr7vg_rk.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpjr7vg_rk.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (i === b && a !== b) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpjjoy5a5l.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpjjoy5a5l.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        if (sum_divisors_i > i && sum_divisors_i < limit && sum_divisors(sum_divisors_i) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpe5lc1u3z.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpe5lc1u3z.ts(6,61): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmpjr7vg_rk.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpjr7vg_rk.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmp7qetja9u.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp7qetja9u.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (i === sum_of_divisors(a) && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpl8ugl_mk.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpl8ugl_mk.ts(6,19): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_proper_divisors(i);\n        if (a > i && sum_of_proper_divisors(a) === i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpdw3ap0y6.ts(5,17): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmpdw3ap0y6.ts(6,22): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_divisors_i = sum_divisors(i);\n        if (sum_divisors_i > i) {\n            let sum_divisors_sum_divisors_i = sum_divisors(sum_divisors_i);\n            if (sum_divisors_sum_divisors_i === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpf4393ma1.ts(5,30): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n../../../../tmp/tmpf4393ma1.ts(7,47): error TS2552: Cannot find name 'sum_divisors'. Did you mean 'sum_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmp5ee8tr22.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmp5ee8tr22.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i <= limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpny_4gmmd.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            if (sum_of_divisors_of(sum_of_divisors) == i) {\n                sum += i;\n                sum += sum_of_divisors;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmp87pcqmgv.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp87pcqmgv.ts(7,17): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i) {\n            let sum_of_divisors_of_sum_of_divisors = sum_of_divisors_of(sum_of_divisors);\n            if (sum_of_divisors_of_sum_of_divisors === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp0o8r21g4.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp0o8r21g4.ts(7,54): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_divisors(i);\n        let b = sum_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp7jfqdyx5.ts(5,17): error TS2304: Cannot find name 'sum_divisors'.\n../../../../tmp/tmp7jfqdyx5.ts(6,17): error TS2304: Cannot find name 'sum_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpt13200xp.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpt13200xp.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        if (amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122711,
      "stdout": "../../../../tmp/tmp8iv3ukhd.ts(5,13): error TS2304: Cannot find name 'amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_divisors: number = sum_of_divisors(i);\n        if (sum_divisors > i && sum_of_divisors(sum_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp261cbfmp.ts(5,36): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp261cbfmp.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (b == i && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp8fgec4z7.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp8fgec4z7.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors_of(sum_of_divisors) === i && sum_of_divisors !== i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpts63gloy.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpts63gloy.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors = get_divisors(i);\n        let divisors_sum = divisors.reduce((a, b) => a + b);\n        if (divisors_sum > i) {\n            let divisors_divisors = get_divisors(divisors_sum);\n            let divisors_divisors_sum = divisors_divisors.reduce((a, b) => a + b);\n            if (divisors_divisors_sum == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpsl5dnisw.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmpsl5dnisw.ts(8,37): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "../../../../tmp/tmpddwb34id.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpddwb34id.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpk9th76xe.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpk9th76xe.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = sum_of_divisors(i);\n        if (divisors_sum > i && sum_of_divisors(divisors_sum) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp61ghu4lw.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp61ghu4lw.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = 0;\n        for (let j = 1; j < i; j++) {\n            if (i % j == 0) {\n                divisors_sum += j;\n            }\n        }\n        let divisors_sum_2 = 0;\n        for (let j = 1; j < divisors_sum; j++) {\n            if (divisors_sum % j == 0) {\n                divisors_sum_2 += j;\n            }\n        }\n        if (divisors_sum_2 == i && divisors_sum != i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpt13200xp.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpt13200xp.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpfrnp3wnt.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpfrnp3wnt.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        let a: number = sum_of_proper_divisors(i);\n        let b: number = sum_of_proper_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpzdys69oc.ts(5,25): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n../../../../tmp/tmpzdys69oc.ts(6,25): error TS2304: Cannot find name 'sum_of_proper_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let sum_of_divisors = sum_of_divisors_of(i);\n    if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp_91p6d2a.ts(5,27): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp_91p6d2a.ts(6,32): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let sum_of_divisors: number = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpsnqs54uo.ts(5,39): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpsnqs54uo.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        const sum_divisors = sum_of_divisors(i);\n        if (sum_divisors > i && sum_of_divisors(sum_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmphm0xkhtd.ts(5,30): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmphm0xkhtd.ts(6,33): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let result: number = 0;\n    for (let i: number = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            result += i;\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp_ehdfzvo.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum: number = divisors_sum_of(i);\n        if (divisors_sum > i && divisors_sum_of(divisors_sum) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122692,
      "stdout": "../../../../tmp/tmpgx04sl3c.ts(5,36): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpgx04sl3c.ts(6,33): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmp28zhp6rh.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp28zhp6rh.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (i === b && i !== a) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpss4l5hs8.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpss4l5hs8.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors_i: number = sum_of_divisors(i);\n        if (sum_of_divisors_i > i) {\n            let sum_of_divisors_sum_of_divisors_i: number = sum_of_divisors(sum_of_divisors_i);\n            if (sum_of_divisors_sum_of_divisors_i == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpofvw9mof.ts(5,41): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n../../../../tmp/tmpofvw9mof.ts(7,61): error TS2552: Cannot find name 'sum_of_divisors'. Did you mean 'sum_of_divisors_i'?\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpt13200xp.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpt13200xp.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) === i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpsuz28kat.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmpsuz28kat.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && a != b) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122681,
      "stdout": "../../../../tmp/tmpzotfq1go.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzotfq1go.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpbo0xvnzu.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpbo0xvnzu.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (i === b && a !== b) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122707,
      "stdout": "../../../../tmp/tmpjjoy5a5l.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpjjoy5a5l.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum: number = 0;\n    for (let i: number = 1; i <= limit; i++) {\n        let a: number = sum_of_divisors(i);\n        let b: number = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpre4_x327.ts(5,25): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpre4_x327.ts(6,25): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let a = sum_of_divisors(i);\n    let b = sum_of_divisors(a);\n    if (i == b && a != b) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmp0nj16pn3.ts(5,13): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmp0nj16pn3.ts(6,13): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable_number(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122686,
      "stdout": "../../../../tmp/tmpf7sy4lji.ts(5,13): error TS2304: Cannot find name 'is_amicable_number'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i) {\n            let b = sum_of_divisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpf2tl6sdn.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpf2tl6sdn.ts(7,21): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmppss_s096.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppss_s096.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        if (is_amicable(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnu7_aqxg.ts(5,13): error TS2304: Cannot find name 'is_amicable'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i <= limit; i++) {\n        let divisors_sum = divisors_sum_of(i);\n        if (divisors_sum > i) {\n            let divisors_sum_of_divisors_sum = divisors_sum_of(divisors_sum);\n            if (divisors_sum_of_divisors_sum === i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmpt6ehpmsz.ts(5,28): error TS2304: Cannot find name 'divisors_sum_of'.\n../../../../tmp/tmpt6ehpmsz.ts(7,48): error TS2304: Cannot find name 'divisors_sum_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i === b && i !== a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpnvxm91pm.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpnvxm91pm.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if (i == b && i != a) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509957,
      "stdout": "../../../../tmp/tmpzs9nkfrj.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpzs9nkfrj.ts(6,17): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509958,
      "stdout": "../../../../tmp/tmppss_s096.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmppss_s096.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) == i) {\n            sum += i + a;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1665509954,
      "stdout": "../../../../tmp/tmpwayjsotr.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpwayjsotr.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let sum_of_divisors = sum_of_divisors_of(i);\n        if (sum_of_divisors > i && sum_of_divisors_of(sum_of_divisors) == i) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122682,
      "stdout": "../../../../tmp/tmp2f_x46e6.ts(5,31): error TS2304: Cannot find name 'sum_of_divisors_of'.\n../../../../tmp/tmp2f_x46e6.ts(6,36): error TS2304: Cannot find name 'sum_of_divisors_of'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors = get_divisors(i);\n        let divisors_sum = divisors.reduce((a, b) => a + b);\n        if (divisors_sum > i) {\n            let divisors2 = get_divisors(divisors_sum);\n            let divisors_sum2 = divisors2.reduce((a, b) => a + b);\n            if (divisors_sum2 == i) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmppoz7_9ry.ts(5,24): error TS2304: Cannot find name 'get_divisors'.\n../../../../tmp/tmppoz7_9ry.ts(8,29): error TS2304: Cannot find name 'get_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let a = sum_of_divisors(i);\n        if (a > i && sum_of_divisors(a) === i) {\n            sum += a + i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122687,
      "stdout": "../../../../tmp/tmpdap6l5v5.ts(5,17): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmpdap6l5v5.ts(6,22): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum(limit: number): number {\n    let sum = 0;\n    for (let i = 1; i < limit; i++) {\n        let divisors_sum = sum_of_divisors(i);\n        if (i === sum_of_divisors(divisors_sum) && i !== divisors_sum) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = amicable_numbers_sum;\n  assert.deepEqual(candidate(999),504);\n  assert.deepEqual(candidate(9999),31626);\n  assert.deepEqual(candidate(99),0);\n}\n\ntest();",
      "timestamp": 1666122712,
      "stdout": "../../../../tmp/tmptjj27n9n.ts(5,28): error TS2304: Cannot find name 'sum_of_divisors'.\n../../../../tmp/tmptjj27n9n.ts(6,19): error TS2304: Cannot find name 'sum_of_divisors'.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_457_Find_Min",
  "language": "ts",
  "prompt": "//Write a python function to find the sublist having minimum length.\nfunction Find_Min(lst: any): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Find_Min;\n  assert.deepEqual(candidate([[1], [1, 2], [1, 2, 3]]),[1]);\n  assert.deepEqual(candidate([[1, 1], [1, 1, 1], [1, 2, 7, 8]]),[1, 1]);\n  assert.deepEqual(candidate([[\"x\"], [\"x\", \"y\"], [\"x\", \"y\", \"z\"]]),[\"x\"]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    var min = lst[0].length;\n    var min_index = 0;\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"def\", \"ghi\", \"jkl\"]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nlet lst1: any = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]];\nconsole.log(Find_Min(lst1));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [6, 7, 8, 9]]));\n",
    "    let min = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7]]));\n",
    "    var min: number = lst[0].length;\n    var sublist: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_list: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n        }\n    }\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length == min) {\n            min_list.push(lst[i]);\n        }\n    }\n    return min_list;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [6, 7, 8, 9]]));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nlet lst: any = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nlet lst: any = [[1, 2, 3], [4, 5], [6, 7, 8, 9], [10, 11, 12, 13, 14, 15]];\nconsole.log(Find_Min(lst));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    var min: number = lst[0].length;\n    var min_list: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]));\n",
    "    var min: number = lst[0].length;\n    var min_lst: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nvar lst = [[1, 2, 3, 4], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"def\", \"ghi\", \"jkl\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let min = lst[0].length;\n    let index = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_list: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3], [1, 2, 3, 4]]));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let sub_lst: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sub_lst = lst[i];\n        }\n    }\n    return sub_lst;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"how\"]));\n",
    "    let min_length = lst[0].length;\n    let min_list = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min_length > lst[i].length) {\n            min_length = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\n",
    "    let min = lst[0].length;\n    let sublist = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0].length;\n    var sublist = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nlet lst: any = [[1, 2, 3], [4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]];\nconsole.log(Find_Min(lst));\n",
    "    var min: number = lst[0].length;\n    var min_list: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1]];\nconsole.log(Find_Min(lst));",
    "    let min: number = lst[0].length;\n    let sub_list: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sub_list = lst[i];\n        }\n    }\n    return sub_list;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0].length;\n    var index = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]];\nconsole.log(Find_Min(lst));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nlet lst: any = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst.push(lst[i]);\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\nlet lst: any = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([\"apple\", \"banana\", \"orange\", \"grapes\"]));\n",
    "    let min_len: number = lst[0].length;\n    let min_sublist: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_sublist = lst[i];\n        }\n    }\n    return min_sublist;\n}\nconsole.log(Find_Min(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    var min_len = lst[0].length;\n    var min_lst = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nvar lst = [[1, 2, 3, 4], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n        }\n    }\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length == min) {\n            sublist.push(lst[i]);\n        }\n    }\n    return sublist;\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10], [11, 12, 13, 14, 15]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nconsole.log(Find_Min(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let min: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    var min: number = lst[0].length;\n    var sublist: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4]];\nconsole.log(Find_Min(lst));\n",
    "    var min: number = lst[0].length;\n    var sublist: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len: number = lst[0].length;\n    let min_lst: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7]]));\n",
    "    var min: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nlet lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nlet lst = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    var min: number = lst[0].length;\n    var sublist: any = lst[0];\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst: any = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n\nlet lst: any = [[1, 2, 3], [4, 5], [6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    var min: number = lst[0].length;\n    var sublist: any;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n\nvar lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6, 7, 8, 9]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    var min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [6, 7, 8, 9]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3]]));\nconsole.log(Find_Min([[1, 2, 3, 4, 5], [3, 4, 5], [1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3]]));\n",
    "    var min: number = lst[0].length;\n    var min_lst: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nvar lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2], [3, 4, 5], [6], [7, 8, 9, 10]]));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min: number = lst[0].length;\n    var sub: any = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sub = lst[i];\n        }\n    }\n    return sub;\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0].length;\n    let min_index = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [6, 7, 8, 9]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (typeof lst[i] == 'object') {\n            let temp = Find_Min(lst[i]);\n            if (temp.length < min.length) {\n                min = temp;\n            }\n        }\n    }\n    return min;\n}\n\nlet lst = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([\"apple\", \"mango\", \"grapes\", \"banana\"]));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5, 6], [7, 8, 9]]));\n",
    "    let min = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    var min = lst[0].length;\n    var min_index = 0;\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min(['abc', 'abcd', 'abcde', 'abcdef']));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"abcd\", \"ab\", \"abcd\", \"abcd\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2, 3], [4, 5, 6]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2, 3, 4, 5], [4, 5]]));\n",
    "    let min_len: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let index = 0; index < lst.length; index++) {\n        if (lst[index].length < min) {\n            min = lst[index].length;\n            min_index = index;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\"]));\n",
    "    var min = lst[0].length;\n    var min_index = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"abcd\", \"ab\", \"abcde\"]));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2, 3, 4, 5], [4, 5]]));\nconsole.log(Find_Min([[1, 2, 3, 4, 5], [1, 2, 3], [4, 5]]));\n",
    "    var min: number = lst[0].length;\n    var sublist: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nconsole.log(Find_Min(lst));\n",
    "    let min = lst[0].length;\n    let sublist = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    var min: number = lst[0].length;\n    var sublist: any = [];\n    for (var i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]];\nconsole.log(\"Sublist having minimum length is: \" + Find_Min(lst));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\"]));\n",
    "    var min: number = lst[0].length;\n    var index: number = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\n",
    "    let min: number = lst[0].length;\n    let min_list: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\nconsole.log(\"Minimum length list is: \" + Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_list: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [6, 7, 8, 9]]));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nvar lst: any = [[1, 2, 3], [2, 3, 4, 5], [3, 4, 5, 6, 7]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_list: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    var min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i]) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"Minimum length of sublist is: \" + Find_Min(lst));\n",
    "    var min_len = lst[0].length;\n    var min_lst = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0].length;\n    var min_index = 0;\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"this\", \"is\", \"python\"]));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"how are you\"]));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"abc\", \"def\", \"ghi\", \"jkl\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nlet lst: any = [[1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11, 12]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_lst: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2, 3], [4, 5, 6]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2, 3, 4, 5], [4, 5]]));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]]));\n",
    "    var min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nvar lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1]];\nconsole.log(\"The sublist having minimum length is: \" + Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let index: number = 0;\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3], [1, 2, 3, 4]]));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"hello world\"]));\n",
    "    var min: number = lst[0].length;\n    var sublist: any = [];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12, 13]];\nconsole.log(Find_Min(lst));\n",
    "    var min: number = lst[0].length;\n    var sublist: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"how\", \"are\", \"you\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n\nlet lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1, 2, 3, 4, 5, 6, 7, 8, 9]];\nconsole.log(Find_Min(lst));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min_len: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min_length = lst[0].length;\n    let min_list = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min_length > lst[i].length) {\n            min_length = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\nlet lst = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([\"Red\", \"Green\", \"White\", \"Black\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min_index: number = 0;\n    var min_length: number = lst[0].length;\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min_length) {\n            min_length = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n\nvar lst: any = [[1, 2, 3], [4, 5], [6, 7, 8, 9], [10, 11, 12, 13, 14]];\nconsole.log(\"The sublist having minimum length is: \" + Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([\"abc\", \"abcd\", \"abcde\", \"abcdef\"]));\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i = 1; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nvar lst: any = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_list: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_list = lst[i];\n        }\n    }\n    return min_list;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nconsole.log(Find_Min(lst));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    var min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i]) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7]]));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    var min: number = lst[0].length;\n    var min_index: number = 0;\n    for (var i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min_len: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5, 6], [7, 8, 9]]));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7]]));\n",
    "    var min: number = lst[0].length;\n    var index: number = 0;\n    for (var i: number = 1; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\nvar lst: any = [[1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min_length = lst[0].length;\n    let min_index = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_length) {\n            min_length = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    var min: number = lst[0].length;\n    var index: number = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            index = i;\n        }\n    }\n    return lst[index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    var min = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nconsole.log(\"The sublist having minimum length is: \" + Find_Min(lst));\n",
    "    let min_length = lst[0].length;\n    let min_sublist = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min_length) {\n            min_length = lst[i].length;\n            min_sublist = lst[i];\n        }\n    }\n    return min_sublist;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    var min: any = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (typeof lst[i] == 'object') {\n            var tmp = Find_Min(lst[i]);\n            if (min == undefined || tmp.length < min.length) {\n                min = tmp;\n            }\n        }\n    }\n    return min;\n}\nconsole.log(Find_Min([[2, 3], [4, 5, 6], [7, 8, 9, 10]]));\n",
    "    var min: number = lst[0].length;\n    var sublist: any = [];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10], [11, 12, 13, 14, 15]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let sub_list: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sub_list = lst[i];\n        }\n    }\n    return sub_list;\n}\n",
    "    let min: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (typeof lst[i] == 'object') {\n            let tmp = Find_Min(lst[i]);\n            if (min > tmp || min == -1) {\n                min = tmp;\n            }\n        }\n    }\n    return min;\n}\n\nlet lst1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20]]]]]]];\nconsole.log(Find_Min(lst1));\n",
    "    let min = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min.length > lst[i].length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 1; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5, 6], [7, 8, 9]]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [6, 7, 8, 9]]));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [1, 2], [1, 2, 3, 4, 5]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3]]));\nconsole.log(Find_Min([[3, 4, 5], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3], [1, 2, 3, 4]]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i: number = 1; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min: number = lst[0].length;\n    let sublist: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([[1, 2, 3], [4, 5], [1, 2, 3, 4, 5]]));\n",
    "    let min: number = lst[0].length;\n    let sublist: any = [];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nlet lst: any = [[1, 2, 3], [1, 2], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let min_lst: any = lst[0];\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nlet lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n        }\n    }\n    return min;\n}\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\nconsole.log(Find_Min(['abc', 'def', 'ghi']));\n",
    "    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}\nvar lst = [[1, 2, 3, 4], [1, 2, 3], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (min_len > lst[i].length) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\n",
    "    var min: number = lst[0].length;\n    var sublist: any = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nvar lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min: number = lst[0].length;\n    let sublist: any;\n    for (let i = 0; i < lst.length; i++) {\n        if (min > lst[i].length) {\n            min = lst[i].length;\n            sublist = lst[i];\n        }\n    }\n    return sublist;\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n",
    "    let min: number = lst[0].length;\n    let min_index: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n        if (lst[i].length < min) {\n            min = lst[i].length;\n            min_index = i;\n        }\n    }\n    return lst[min_index];\n}\n\nlet lst: any = [[1, 2, 3], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7], [1, 2], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]];\nconsole.log(Find_Min(lst));\n",
    "    let min_len = lst[0].length;\n    let min_lst = lst[0];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i].length < min_len) {\n            min_len = lst[i].length;\n            min_lst = lst[i];\n        }\n    }\n    return min_lst;\n}\nconsole.log(Find_Min([\"hello\", \"world\", \"hi\", \"bye\"]));\n"
  ]
}
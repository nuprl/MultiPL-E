{
  "name": "mbpp_283_validate",
  "language": "ts",
  "prompt": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(223344));\nconsole.log(validate(223345));\nconsole.log(validate(223346));\nconsole.log(validate(223347));\nconsole.log(validate(223348));\nconsole.log(validate(223349));\nconsole.log(validate(223350));\nconsole.log(validate(223351));\nconsole.log(validate(223352));\nconsole.log(validate(223353));\nconsole.log(validate(223354));\nconsole.log(validate(223355));\nconsole.log(validate(223356));\nconsole.log(validate(223357));\nconsole.log(validate(223358));\nconsole.log(validate(223359));\nconsole.log(validate(223360));\nconsole.log(validate(223361));\nconsole.log(validate(223362));\nconsole.log(validate(223363));\nconsole.log(validate(223364));\nconsole.log(validate(223365));\nconsole.log(validate(223366));\nconsole.log(validate(223367));\nconsole.log(validate(223368));\nconsole.log(validate(223369));\nconsole.log(validate(223370));\nconsole.log(validate(223371));\nconsole.log(validate(223372));\nconsole.log(validate(223373));\nconsole.log(validate(223374));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmpvpn1nn0_.ts(52,1): error TS1005: ',' expected.\n../../../../tmp/tmpvpn1nn0_.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(arr[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(1222333));\nconsole.log(validate(12222333));\nconsole.log(validate(122222333));\nconsole.log(validate(1222222333));\nconsole.log(validate(12222222333));\nconsole.log(validate(122222222333));\nconsole.log(validate(1222222222333));\nconsole.log(validate(12222222222333));\nconsole.log(validate(122222222222333));\nconsole.log(validate(1222222222222333));\nconsole.log(validate(12222222222222333));\nconsole.log(validate(122222222222222333));\nconsole.log(validate(1222222222222222333));\nconsole.log(validate(12222222222222222333));\nconsole.log(validate(122222222222222222333));\nconsole.log(validate(1222222222222222222333));\nconsole.log(validate(12222222222222222222333));\nconsole.log(validate(122222222222222222222333));\nconsole.log(validate(1222222222222222222222333));\nconsole.log(validate(12222222222222222222222333));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmp3bfjaxbs.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(123322));\nconsole.log(validate(12332211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(validate(1233211));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmpy0qt7ex2.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2212));\nconsole.log(validate(2222222222));\nconsole.log(validate(2222222221));\nconsole.log(validate(2222222212));\nconsole.log(validate(22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510247,
      "stdout": "../../../../tmp/tmpenaahow2.ts(27,1): error TS1005: ',' expected.\n../../../../tmp/tmpenaahow2.ts(27,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(1234567890123456789));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(122333));\nconsole.log(validate(122334));\nconsole.log(validate(122335));\nconsole.log(validate(122336));\nconsole.log(validate(122337));\nconsole.log(validate(122338));\nconsole.log(validate(122339));\nconsole.log(validate(122340));\nconsole.log(validate(122341));\nconsole.log(validate(122342));\nconsole.log(validate(122343));\nconsole.log(validate(122344));\nconsole.log(validate(122345));\nconsole.log(validate(122346));\nconsole.log(validate(122347));\nconsole.log(validate(122348));\nconsole.log(validate(122349));\nconsole.log(validate(122350));\nconsole.log(validate(122351));\nconsole.log(validate(122352));\nconsole.log(validate(122353));\nconsole.log(validate(122354));\nconsole.log(validate(122355));\nconsole.log(validate(122356));\nconsole.log(validate(122357));\nconsole.log(validate(122358));\nconsole.log(validate(122359));\nconsole.log(validate(122360));\nconsole.log(validate(122361));\nconsole.log(validate(122362));\nconsole.log(validate(122363\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmpy7swcmgf.ts(50,1): error TS1005: ',' expected.\n../../../../tmp/tmpy7swcmgf.ts(50,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let len = str.length;\n    let freq = {};\n    for (let i = 0; i < len; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < len; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(122222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmpze_ybmoe.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpze_ybmoe.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(12));\nconsole.log(validate(22));\nconsole.log(validate(12345));\nconsole.log(validate(1213));\nconsole.log(validate(121121));\nconsole.log(validate(222222));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(1234567899));\nconsole.log(validate(1234567891));\nconsole.log(validate(1234567892));\nconsole.log(validate(1234567893));\nconsole.log(validate(1234567894));\nconsole.log(validate(1234567895));\nconsole.log(validate(1234567896));\nconsole.log(validate(1234567897));\nconsole.log(validate(1234567898));\nconsole.log(validate(1234567899));\nconsole.log(validate(1234567800));\nconsole.log(validate(1234567801));\nconsole.log(validate(1234567802));\nconsole.log(validate(1234567803));\nconsole.log(validate(1234567804));\nconsole.log(validate(1234567805));\nconsole.log(validate(1234567806));\nconsole.log(validate(1234567807));\nconsole.log(validate(1234567808));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "true\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\ntrue\nfalse\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(arr[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(12233334));\nconsole.log(validate(12233335));\nconsole.log(validate(12233336));\nconsole.log(validate(12233337));\nconsole.log(validate(12233338));\nconsole.log(validate(12233339));\nconsole.log(validate(12233330));\nconsole.log(validate(12233331));\nconsole.log(validate(12233332));\nconsole.log(validate(12233333));\nconsole.log(validate(12233334));\nconsole.log(validate(12233335));\nconsole.log(validate(12233336));\nconsole.log(validate(12233337));\nconsole.log(validate(12233338));\nconsole.log(validate(12233339));\nconsole.log(validate(12233340));\nconsole.log(validate(12233341));\nconsole.log(validate(12233342));\nconsole.log(validate(12233343));\nconsole.log(validate(12233344));\nconsole.log(validate(12233345));\nconsole.log(validate(12233346));\nconsole.log(validate(12233347));\nconsole.log(validate(12233348));\nconsole.log(validate(12233349));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmp5m_gb47c.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp5m_gb47c.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222222222));\nconsole.log(validate(12222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "../../../../tmp/tmp21d1ijzj.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp21d1ijzj.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1245));\nconsole.log(validate(1256));\nconsole.log(validate(1267));\nconsole.log(validate(1278));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1245));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510247,
      "stdout": "../../../../tmp/tmpj_hhu28n.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1222));\nconsole.log(validate(1213));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\ntrue\nfalse\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > Number(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        if (map.has(str[i])) {\n            map.set(str[i], map.get(str[i]) + 1);\n        } else {\n            map.set(str[i], 1);\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (map.get(str[i]) > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1232));\nconsole.log(validate(1231));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1210));\nconsole.log(validate(1220));\nconsole.log(validate(1230));\nconsole.log(validate(1240));\nconsole.log(validate(1250));\nconsole.log(validate(1260));\nconsole.log(validate(1270));\nconsole.log(validate(1280));\nconsole.log(validate(1290));\nconsole.log(validate(1200));\nconsole.log(validate(1201));\nconsole.log(validate(1202));\nconsole.log(validate(1203));\nconsole.log(validate(1204));\nconsole.log(validate(1205));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmpemt7i_uh.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmpemt7i_uh.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmp5vsbosmz.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1122));\nconsole.log(validate(1112));\nconsole.log(validate(1111));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let s = n.toString();\n    let d = {};\n    for (let i = 0; i < s.length; i++) {\n        if (d[s[i]]) {\n            d[s[i]]++;\n        } else {\n            d[s[i]] = 1;\n        }\n    }\n    for (let i = 0; i < s.length; i++) {\n        if (d[s[i]] > parseInt(s[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let num = n;\n    let digits = [];\n    let freq = [];\n    let i = 0;\n    while (num > 0) {\n        digits[i] = num % 10;\n        num = Math.floor(num / 10);\n        i++;\n    }\n    for (let i = 0; i < digits.length; i++) {\n        let count = 0;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[i] === digits[j]) {\n                count++;\n            }\n        }\n        freq[i] = count;\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (digits[i] < freq[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122223));\nconsole.log(validate(12222223));\nconsole.log(validate(1222222223));\nconsole.log(validate(122222222223));\nconsole.log(validate(12222222222223));\nconsole.log(validate(1222222222222223));\nconsole.log(validate(122222222222222223));\nconsole.log(validate(12222222222222222223));\nconsole.log(validate(1222222222222222222223));\nconsole.log(validate(122222222222222222222223));\nconsole.log(validate(12222222222222222222222223));\nconsole.log(validate(1222222222222222222222222223));\nconsole.log(validate(122222222222222222222222222223));\nconsole.log(validate(12222222222222222222222222222223));\nconsole.log(validate(1222222222222222222222222222222223));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmp6lzl3e4d.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp6lzl3e4d.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let dict = {};\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]]) {\n            dict[str[i]]++;\n        } else {\n            dict[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(2234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\nconsole.log(validate(12345));\nconsole.log(validate(23456));\nconsole.log(validate(34567));\nconsole.log(validate(45678));\nconsole.log(validate(56789));\nconsole.log(validate(67890));\nconsole.log(validate(78901));\nconsole.log(validate(89012));\nconsole.log(validate(90123));\nconsole.log(validate(123456));\nconsole.log(validate(234567));\nconsole.log(validate(345678));\nconsole.log(validate(456789));\nconsole.log(validate(567890));\nconsole.log(validate(678901));\nconsole.log(validate(789012));\nconsole.log(validate(890123));\nconsole.log(validate(901234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('');\n    const freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]] += 1;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1240));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1250));\nconsole.log(validate(1251));\nconsole.log(validate(1252));\nconsole.log(validate(1253));\nconsole.log(validate(1254));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1257));\nconsole.log(validate(1258));\nconsole.log(validate(1259));\nconsole.log(validate(1260));\nconsole.log(validate(1261));\nconsole.log(validate(1262));\nconsole.log(validate(1263));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmpg8g87se4.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpg8g87se4.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq: number[] = [];\n    for (let i = 0; i < 10; i++) {\n        freq[i] = 0;\n    }\n    for (let i = 0; i < str.length; i++) {\n        freq[parseInt(str[i])]++;\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[parseInt(str[i])] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmpxzgkmrdo.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmpxzgkmrdo.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\nfalse\nfalse\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let char = str.charAt(i);\n        if (freq[char]) {\n            freq[char]++;\n        } else {\n            freq[char] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let char = str.charAt(i);\n        if (freq[char] > parseInt(char)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1224));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmp2z56p1fz.ts(47,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1211));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1221));\nconsole.log(validate(1231));\nconsole.log(validate(1241));\nconsole.log(validate(1251));\nconsole.log(validate(1261));\nconsole.log(validate(1271));\nconsole.log(validate(1281));\nconsole.log(validate(1291));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1221));\nconsole.log(validate(1231));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmpfq6icqcn.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let count = 0;\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(123322));\nconsole.log(validate(12332211));\nconsole.log(validate(1233221133));\nconsole.log(validate(123322113322));\nconsole.log(validate(12332211332211));\nconsole.log(validate(1233221133221133));\nconsole.log(validate(123322113322113322));\nconsole.log(validate(12332211332211332211));\nconsole.log(validate(1233221133221133221133));\nconsole.log(validate(123322113322113322113322));\nconsole.log(validate(12332211332211332211332211));\nconsole.log(validate(1233221133221133221133221133));\nconsole.log(validate(123322113322113322113322113322));\nconsole.log(validate(12332211332211332211332211332211));\nconsole.log(validate(1233221133221133221133221133221133));\nconsole.log(validate(123322113322113322113322113322113322));\nconsole.log(validate(12332211332211332211332211332211332211));\nconsole.log(validate(123322113322113322\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "../../../../tmp/tmpeeg5b41m.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpeeg5b41m.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(1234567890123456789));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(arr[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122898,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1300));\nconsole.log(validate(1311));\nconsole.log(validate(1322));\nconsole.log(validate(1333));\nconsole.log(validate(1344));\nconsole.log(validate(1355));\nconsole.log(validate(1366));\nconsole.log(validate(1377));\nconsole.log(validate(1388));\nconsole.log(validate(1399));\nconsole.log(validate(1400));\nconsole.log(validate(1411));\nconsole.log(validate(1422));\nconsole.log(validate(1433));\nconsole.log(validate(1444));\nconsole.log(validate(1455));\nconsole.log(validate(1466));\nconsole.log(validate(1477));\nconsole.log(validate(1488));\nconsole.log(validate(1499));\nconsole.log(validate(1500));\nconsole.log(validate(1511));\nconsole.log(validate(1522));\nconsole.log(validate(1533\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122897,
      "stdout": "../../../../tmp/tmplwid3w_7.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmplwid3w_7.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] === arr[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(arr[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(2234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1220));\nconsole.log(validate(1221));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1230));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1240));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmpb8i3a8wg.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmpb8i3a8wg.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let count = 0;\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(123322));\nconsole.log(validate(123321));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(123322));\nconsole.log(validate(1233\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmp66iqnzeg.ts(51,1): error TS1005: ',' expected.\n../../../../tmp/tmp66iqnzeg.ts(51,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1123));\nconsole.log(validate(1124));\nconsole.log(validate(1125));\nconsole.log(validate(1126));\nconsole.log(validate(1127));\nconsole.log(validate(1128));\nconsole.log(validate(1129));\nconsole.log(validate(1133));\nconsole.log(validate(1134));\nconsole.log(validate(1135));\nconsole.log(validate(1136));\nconsole.log(validate(1137));\nconsole.log(validate(1138));\nconsole.log(validate(1139));\nconsole.log(validate(1144));\nconsole.log(validate(1145));\nconsole.log(validate(1146));\nconsole.log(validate(1147));\nconsole.log(validate(1148));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1333));\nconsole.log(validate(1444));\nconsole.log(validate(1555));\nconsole.log(validate(1666));\nconsole.log(validate(1777));\nconsole.log(validate(1888));\nconsole.log(validate(1999));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmphbejappd.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmphbejappd.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let char = str.charAt(i);\n        if (freq[char]) {\n            freq[char]++;\n        } else {\n            freq[char] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let char = str.charAt(i);\n        if (freq[char] > parseInt(char)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit] += 1;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (obj[digit]) {\n            obj[digit]++;\n        } else {\n            obj[digit] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1240));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1250));\nconsole.log(validate(1251));\nconsole.log(validate(1252));\nconsole.log(validate(1253));\nconsole.log(validate(1254));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1257));\nconsole.log(validate(1258));\nconsole.log(validate(1259));\nconsole.log(validate(1260));\nconsole.log(validate(1261));\nconsole.log(validate(1262));\nconsole.log(validate(1263));\nconsole.log(validate(1264));\nconsole.log(validate(1265));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmp87ncj7jm.ts(56,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(123322));\nconsole.log(validate(12333));\nconsole.log(validate(1233322));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "true\ntrue\ntrue\nfalse\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]] > parseInt(nums[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (parseInt(key) < freq[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(122223));\nconsole.log(validate(122222));\nconsole.log(validate(1222222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(12222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(122222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(12222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(1222222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(122222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(12222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(1222222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmp97012lmp.ts(44,1): error TS1005: ',' expected.\n../../../../tmp/tmp97012lmp.ts(44,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(123322));\nconsole.log(validate(123321));\nconsole.log(validate(12332211));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "false\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        freq[str[i]] = (freq[str[i]] || 0) + 1;\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1212));\nconsole.log(validate(1221));\nconsole.log(validate(1333));\nconsole.log(validate(1444));\nconsole.log(validate(1555));\nconsole.log(validate(1666));\nconsole.log(validate(1777));\nconsole.log(validate(1888));\nconsole.log(validate(1999));\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1333));\nconsole.log(validate(1444));\nconsole.log(validate(1555));\nconsole.log(validate(1666));\nconsole.log(validate(1777));\nconsole.log(validate(1888));\nconsole.log(validate(1999));\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1333));\nconsole.log(validate(1444));\nconsole.log(validate(1555));\nconsole.log(validate(1666));\nconsole.log(validate(1777));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "../../../../tmp/tmp6j0d0i22.ts(52,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2212));\nconsole.log(validate(2122));\nconsole.log(validate(2112));\nconsole.log(validate(2111));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1222));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "../../../../tmp/tmp7x5e00gh.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmp7x5e00gh.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split(\"\");\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmp6l_s1vh4.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmp6l_s1vh4.ts(42,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let num = n;\n    let digits = [];\n    while (num > 0) {\n        digits.push(num % 10);\n        num = Math.floor(num / 10);\n    }\n    digits.sort();\n    let count = 1;\n    for (let i = 1; i < digits.length; i++) {\n        if (digits[i] === digits[i - 1]) {\n            count++;\n        } else {\n            if (count > digits[i - 1]) {\n                return false;\n            }\n            count = 1;\n        }\n    }\n    if (count > digits[digits.length - 1]) {\n        return false;\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(2234));\nconsole.log(validate(22244));\nconsole.log(validate(12334));\nconsole.log(validate(123444));\nconsole.log(validate(1234444));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "true\ntrue\nfalse\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(2222));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(1234567890123456789));\nconsole.log(validate(12345678901234567890));\nconsole.log(validate(123456789012345678901));\nconsole.log(validate(1234567890123456789012));\nconsole.log(validate(12345678901234567890123));\nconsole.log(validate(123456789012345678901234));\nconsole.log(validate(1234567890123456789012345));\nconsole.log(validate(12345678901234567\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122900,
      "stdout": "../../../../tmp/tmpugynfsy_.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmpugynfsy_.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(1234567890123456789));\nconsole.log(validate(12345678901234567890));\nconsole.log(validate(123456789012345678901));\nconsole.log(validate(1234567890123456789012));\nconsole.log(validate(12345678901234567890123));\nconsole.log(validate(123456789012345678901234));\nconsole.log(validate(123\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "../../../../tmp/tmp8p6wo4yu.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmp8p6wo4yu.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let count = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (count[digits[i]]) {\n            count[digits[i]]++;\n        } else {\n            count[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (count[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let num = n.toString();\n    let freq = {};\n    for (let i = 0; i < num.length; i++) {\n        if (freq[num[i]]) {\n            freq[num[i]] += 1;\n        } else {\n            freq[num[i]] = 1;\n        }\n    }\n    for (let i = 0; i < num.length; i++) {\n        if (freq[num[i]] > parseInt(num[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122902,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let count = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (count[arr[i]]) {\n            count[arr[i]]++;\n        } else {\n            count[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (count[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(12222));\nconsole.log(validate(122222));\nconsole.log(validate(1222222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(12222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(122222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(12222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(1222222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(122222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(12222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122902,
      "stdout": "../../../../tmp/tmp6e70wmou.ts(44,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122902,
      "stdout": "../../../../tmp/tmpboe193t0.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(123322));\nconsole.log(validate(122322));\nconsole.log(validate(122333));\nconsole.log(validate(122334));\nconsole.log(validate(122344));\nconsole.log(validate(122345));\nconsole.log(validate(122355));\nconsole.log(validate(122356));\nconsole.log(validate(122366));\nconsole.log(validate(122367));\nconsole.log(validate(122377));\nconsole.log(validate(122378));\nconsole.log(validate(122388));\nconsole.log(validate(122389));\nconsole.log(validate(122399));\nconsole.log(validate(122499));\nconsole.log(validate(122599));\nconsole.log(validate(122699));\nconsole.log(validate(122799));\nconsole.log(validate(122899));\nconsole.log(validate(122999));\nconsole.log(validate(123999));\nconsole.log(validate(124999));\nconsole.log(validate(125999));\nconsole.log(validate(126999));\nconsole.log(validate(127999));\nconsole.log(validate(128999));\nconsole.log(validate(129999));\nconsole.log(validate(139999));\nconsole.log(validate(149999));\nconsole.log(validate(159999));\nconsole.log(validate(169999));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmpj4hi1aoj.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmpj4hi1aoj.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let freq = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]]) {\n            freq[arr[i]] += 1;\n        } else {\n            freq[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let dict = {};\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]]) {\n            dict[str[i]] += 1;\n        } else {\n            dict[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let dict = {};\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]]) {\n            dict[str[i]] += 1;\n        } else {\n            dict[str[i]] = 1;\n        }\n    }\n    for (let key in dict) {\n        if (dict[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmp3jh4_15h.ts(53,1): error TS1005: ',' expected.\n../../../../tmp/tmp3jh4_15h.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let num: number = n;\n    let digit: number = 0;\n    let freq: number = 0;\n    let digitFreq: number[] = [];\n    let i: number = 0;\n    while (num > 0) {\n        digit = num % 10;\n        freq = 0;\n        while (num > 0) {\n            if (digit == num % 10) {\n                freq++;\n            }\n            num = Math.floor(num / 10);\n        }\n        digitFreq[i] = freq;\n        i++;\n        num = n;\n    }\n    for (let i = 0; i < digitFreq.length; i++) {\n        if (digitFreq[i] > i) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error 169220804\n#\n#\n#\n#FailureMessage Object: 0x7ffd9e15eb60\n 1: 0x2b3321df7727  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b332298c28e V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 3: 0x2b33222c6f8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 4: 0x2b3322458760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 5: 0x2b33224600cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 6: 0x2b332264a7db v8::internal::Runtime_GrowArrayElements(int, unsigned long*, v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 7: 0x2b3321fa97f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n",
      "exit_code": -5,
      "status": "Exception"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmp8w3m7vym.ts(28,1): error TS1005: ',' expected.\n../../../../tmp/tmp8w3m7vym.ts(28,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\n\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2223));\nconsole.log(validate(2224));\nconsole.log(validate(2225));\nconsole.log(validate(2226));\nconsole.log(validate(2227));\nconsole.log(validate(2228));\nconsole.log(validate(2229));\nconsole.log(validate(2220));\nconsole.log(validate(2211));\nconsole.log(validate(2212));\nconsole.log(validate(2213));\nconsole.log(validate(2214));\nconsole.log(validate(2215));\nconsole.log(validate(2216));\nconsole.log(validate(2217));\nconsole.log(validate(2218));\nconsole.log(validate(2219));\nconsole.log(validate(2210));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(2224));\nconsole.log(validate(2225));\nconsole.log(validate(2226));\nconsole.log(validate(2227));\nconsole.log(validate(2228));\nconsole.log(validate(2229));\nconsole.log(validate(2220));\nconsole.log(validate(2221));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(2224));\nconsole.log(validate(2225\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmpp_uczm75.ts(55,1): error TS1005: ',' expected.\n../../../../tmp/tmpp_uczm75.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\nconsole.log(validate(122333444444));\nconsole.log(validate(12233344444444));\nconsole.log(validate(1223334444444444));\nconsole.log(validate(122333444444444444));\nconsole.log(validate(12233344444444444444));\nconsole.log(validate(1223334444444444444444));\nconsole.log(validate(122333444444444444444444));\nconsole.log(validate(12233344444444444444444444));\nconsole.log(validate(1223334444444444444444444444));\nconsole.log(validate(122333444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444));\nconsole.log(validate(122333444444444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444444444));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmpt2h3z1rl.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(2234));\nconsole.log(validate(1224));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate(1234));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmp12yu4p8c.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp12yu4p8c.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > key) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1210));\nconsole.log(validate(1220));\nconsole.log(validate(1230));\nconsole.log(validate(1240));\nconsole.log(validate(1250));\nconsole.log(validate(1260));\nconsole.log(validate(1270));\nconsole.log(validate(1280));\nconsole.log(validate(1290));\nconsole.log(validate(1200));\nconsole.log(validate(1201));\nconsole.log(validate(1202));\nconsole.log(validate(1203));\nconsole.log(validate(1204));\nconsole.log(validate(1205));\nconsole.log(validate(1206));\nconsole.log(validate(1207));\nconsole.log(validate(1208));\nconsole.log(validate(1209));\nconsole.log(validate(1211));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmprvwdo18a.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmprvwdo18a.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let dict = {};\n    for (let i = 0; i < str.length; i++) {\n        if (dict[str[i]]) {\n            dict[str[i]]++;\n        } else {\n            dict[str[i]] = 1;\n        }\n    }\n    for (let key in dict) {\n        if (dict[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "true\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(12233333));\nconsole.log(validate(122333333));\nconsole.log(validate(1223333333));\nconsole.log(validate(12233333333));\nconsole.log(validate(122333333333));\nconsole.log(validate(1223333333333));\nconsole.log(validate(12233333333333));\nconsole.log(validate(122333333333333));\nconsole.log(validate(1223333333333333));\nconsole.log(validate(12233333333333333));\nconsole.log(validate(122333333333333333));\nconsole.log(validate(1223333333333333333));\nconsole.log(validate(12233333333333333333));\nconsole.log(validate(122333333333333333333));\nconsole.log(validate(1223333333333333333333));\nconsole.log(validate(12233333333333333333333));\nconsole.log(validate(122333333333333333333333));\nconsole.log(validate(1223333333333333333333333));\nconsole.log(validate(12233333333333333333333333));\nconsole.log(validate(122333333333333333333333333));\nconsole.log(validate(1223333333333333333333333333));\nconsole.log(validate(12233333333333333333333333333));\nconsole.log(validate(122333333333333333333333333333));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122904,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(123321));\nconsole.log(validate(123312));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let digitFreq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (digitFreq[digits[i]]) {\n            digitFreq[digits[i]] += 1;\n        } else {\n            digitFreq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (digitFreq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        freq[str[i]] = (freq[str[i]] || 0) + 1;\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(122333));\nconsole.log(validate(122334));\nconsole.log(validate(122335));\nconsole.log(validate(122336));\nconsole.log(validate(122337));\nconsole.log(validate(122338));\nconsole.log(validate(122339));\nconsole.log(validate(122330));\nconsole.log(validate(122331));\nconsole.log(validate(122332));\nconsole.log(validate(122333));\nconsole.log(validate(122334));\nconsole.log(validate(122335));\nconsole.log(validate(122336));\nconsole.log(validate(122337));\nconsole.log(validate(122338));\nconsole.log(validate(122339));\nconsole.log(validate(122340));\nconsole.log(validate(122341));\nconsole.log(validate(122342));\nconsole.log(validate(122343));\nconsole.log(validate(122344));\nconsole.log(validate(122345));\nconsole.log(validate(122346));\nconsole.log(validate(122347));\nconsole.log(validate(122348));\nconsole.log(validate(122349));\nconsole.log(validate(122350));\nconsole.log(validate(122351));\nconsole.log(validate(122352));\nconsole.log(validate(122353));\nconsole.log(validate(122354));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122904,
      "stdout": "../../../../tmp/tmpi1j1hvcq.ts(49,1): error TS1005: ',' expected.\n../../../../tmp/tmpi1j1hvcq.ts(49,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let key = str[i];\n        if (freq[key]) {\n            freq[key] += 1;\n        } else {\n            freq[key] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let key = str[i];\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "../../../../tmp/tmpfw82lhgd.ts(26,1): error TS1005: ',' expected.\n../../../../tmp/tmpfw82lhgd.ts(26,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let freq = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]]) {\n            freq[arr[i]]++;\n        } else {\n            freq[arr[i]] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122904,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1120));\nconsole.log(validate(1121));\nconsole.log(validate(1122));\nconsole.log(validate(1123));\nconsole.log(validate(1124));\nconsole.log(validate(1125));\nconsole.log(validate(1126));\nconsole.log(validate(1127));\nconsole.log(validate(1128));\nconsole.log(validate(1129));\nconsole.log(validate(1130));\nconsole.log(validate(1131));\nconsole.log(validate(1132));\nconsole.log(validate(1133));\nconsole.log(validate(1134));\nconsole.log(validate(1135));\nconsole.log(validate(1136));\nconsole.log(validate(1137));\nconsole.log(validate(1138));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122905,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split(\"\");\n    let freq = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]]) {\n            freq[arr[i]]++;\n        } else {\n            freq[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (freq[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(12345));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(12222));\nconsole.log(validate(122222));\nconsole.log(validate(1222222));\nconsole.log(validate(12222222));\nconsole.log(validate(122222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(12222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(1222222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(122222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(12222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(1222222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(122222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(12222222222222222222222));\nconsole.log(validate(12222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122905,
      "stdout": "../../../../tmp/tmp7vqn4kle.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmp7vqn4kle.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122333));\nconsole.log(validate(1223333));\nconsole.log(validate(12233333));\nconsole.log(validate(122333333));\nconsole.log(validate(1223333333));\nconsole.log(validate(12233333333));\nconsole.log(validate(122333333333));\nconsole.log(validate(1223333333333));\nconsole.log(validate(12233333333333));\nconsole.log(validate(122333333333333));\nconsole.log(validate(1223333333333333));\nconsole.log(validate(12233333333333333));\nconsole.log(validate(122333333333333333));\nconsole.log(validate(1223333333333333333));\nconsole.log(validate(12233333333333333333));\nconsole.log(validate(122333333333333333333));\nconsole.log(validate(1223333333333333333333));\nconsole.log(validate(12233333333333333333333));\nconsole.log(validate(122333333333333333333333));\nconsole.log(validate(1223333333333333333333333));\nconsole.log(validate(12233333333333333333333333));\nconsole.log(validate(122333333333333333333333333));\nconsole.log(validate(1223333333333333333333333333));\nconsole.log(validate(12233333333333333333\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122905,
      "stdout": "../../../../tmp/tmp0kg3d8_w.ts(46,1): error TS1005: ',' expected.\n../../../../tmp/tmp0kg3d8_w.ts(46,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let num = n.toString();\n    let freq = {};\n    for (let i = 0; i < num.length; i++) {\n        let digit = num[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < num.length; i++) {\n        let digit = num[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let digitFreq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (digitFreq[digits[i]]) {\n            digitFreq[digits[i]]++;\n        } else {\n            digitFreq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (digitFreq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmpjk1lsdh4.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpjk1lsdh4.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1210));\nconsole.log(validate(1220));\nconsole.log(validate(1230));\nconsole.log(validate(1240));\nconsole.log(validate(1250));\nconsole.log(validate(1260));\nconsole.log(validate(1270));\nconsole.log(validate(1280));\nconsole.log(validate(1290));\nconsole.log(validate(1200));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(valid\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmpej56e4e5.ts(56,1): error TS1005: ',' expected.\n../../../../tmp/tmpej56e4e5.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\nconsole.log(validate(122333444444));\nconsole.log(validate(12233344444444));\nconsole.log(validate(1223334444444444));\nconsole.log(validate(122333444444444444));\nconsole.log(validate(12233344444444444444));\nconsole.log(validate(1223334444444444444444));\nconsole.log(validate(122333444444444444444444));\nconsole.log(validate(12233344444444444444444444));\nconsole.log(validate(1223334444444444444444444444));\nconsole.log(validate(122333444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444));\nconsole.log(validate(122333444444444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444444444));\nconsole.log(validate(122333\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmp3yla3h4y.ts(39,1): error TS1005: ',' expected.\n../../../../tmp/tmp3yla3h4y.ts(39,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222222222));\nconsole.log(validate(12222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmpbqr2aw_h.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpbqr2aw_h.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1121));\nconsole.log(validate(1122));\nconsole.log(validate(1123));\nconsole.log(validate(1124));\nconsole.log(validate(1125));\nconsole.log(validate(1126));\nconsole.log(validate(1127));\nconsole.log(validate(1128));\nconsole.log(validate(1129));\nconsole.log(validate(1131));\nconsole.log(validate(1132));\nconsole.log(validate(1133));\nconsole.log(validate(1134));\nconsole.log(validate(1135));\nconsole.log(validate(1136));\nconsole.log(validate(1137));\nconsole.log(validate(1138));\nconsole.log(validate(1139));\nconsole.log(validate(1141));\nconsole.log(validate(1142\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmpzupegdsx.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpzupegdsx.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmp6fg0ozb0.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1234));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(2222));\nconsole.log(validate(3333));\nconsole.log(validate(4444));\nconsole.log(validate(5555));\nconsole.log(validate(6666));\nconsole.log(validate(7777));\nconsole.log(validate(8888));\nconsole.log(validate(9999));\nconsole.log(validate(12345));\nconsole.log(validate(123456));\nconsole.log(validate(1234567));\nconsole.log(validate(12345678));\nconsole.log(validate(123456789));\nconsole.log(validate(1234567890));\nconsole.log(validate(12345678901));\nconsole.log(validate(123456789012));\nconsole.log(validate(1234567890123));\nconsole.log(validate(12345678901234));\nconsole.log(validate(123456789012345));\nconsole.log(validate(1234567890123456));\nconsole.log(validate(12345678901234567));\nconsole.log(validate(123456789012345678));\nconsole.log(validate(12345\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmpweveg8ud.ts(51,1): error TS1005: ',' expected.\n../../../../tmp/tmpweveg8ud.ts(51,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let count = 0;\n    for (let i = 0; i < str.length; i++) {\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n        count = 0;\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1122));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(12333));\nconsole.log(validate(123333));\nconsole.log(validate(1233334));\nconsole.log(validate(12333344));\nconsole.log(validate(123333444));\nconsole.log(validate(1233334444));\nconsole.log(validate(12333344444));\nconsole.log(validate(123333444444));\nconsole.log(validate(1233334444444));\nconsole.log(validate(12333344444444));\nconsole.log(validate(123333444444444));\nconsole.log(validate(1233334444444444));\nconsole.log(validate(12333344444444444));\nconsole.log(validate(123333444444444444));\nconsole.log(validate(1233334444444444444));\nconsole.log(validate(12333344444444444444));\nconsole.log(validate(123333444444444444444));\nconsole.log(validate(1233334444444444444444));\nconsole.log(validate(12333344444444444444444));\nconsole.log(validate(123333444444444444444444));\nconsole.log(validate(1233334444444444444444444));\nconsole.log(validate(12333344444444444444444444));\nconsole.log(validate(12\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmp5wmc0wg7.ts(45,1): error TS1005: ',' expected.\n../../../../tmp/tmp5wmc0wg7.ts(45,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]] > parseInt(nums[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(2234));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n  let str = n.toString();\n  let arr = str.split(\"\");\n  let obj = {};\n  for (let i = 0; i < arr.length; i++) {\n    if (obj[arr[i]]) {\n      obj[arr[i]]++;\n    } else {\n      obj[arr[i]] = 1;\n    }\n  }\n  for (let key in obj) {\n    if (obj[key] > parseInt(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let s = n.toString();\n    let freq = {};\n    for (let i = 0; i < s.length; i++) {\n        let c = s.charAt(i);\n        if (freq[c] == undefined) {\n            freq[c] = 1;\n        } else {\n            freq[c] += 1;\n        }\n    }\n    for (let i = 0; i < s.length; i++) {\n        let c = s.charAt(i);\n        if (freq[c] > parseInt(c)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(2234));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "true\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(123322));\nconsole.log(validate(12332222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122907,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        if (map.has(arr[i])) {\n            map.set(arr[i], map.get(arr[i]) + 1);\n        } else {\n            map.set(arr[i], 1);\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (map.get(arr[i]) > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split(\"\");\n    let freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]]) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]] > parseInt(nums[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1230));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1240));\nconsole.log(validate(1241));\nconsole.log(validate(1242));\nconsole.log(validate(1243));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1250));\nconsole.log(validate(1251));\nconsole.log(validate(1252));\nconsole.log(validate(1253));\nconsole.log(validate(1254));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "../../../../tmp/tmpkmx81jsy.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpkmx81jsy.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let arr = n.toString().split('').map(Number);\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > arr[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(12222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122908,
      "stdout": "../../../../tmp/tmp0l6fm_8j.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp0l6fm_8j.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]] += 1;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(121111));\nconsole.log(validate(122222));\nconsole.log(validate(123333));\nconsole.log(validate(124444));\nconsole.log(validate(125555));\nconsole.log(validate(126666));\nconsole.log(validate(127777));\nconsole.log(validate(128888));\nconsole.log(validate(129999));\nconsole.log(validate(1211111));\nconsole.log(validate(1222222));\nconsole.log(validate(1233333));\nconsole.log(validate(1244444));\nconsole.log(validate(1255555));\nconsole.log(validate(1266666));\nconsole.log(validate(1277777));\nconsole.log(validate(1288888));\nconsole.log(validate(1299999));\nconsole.log(validate(12111111));\nconsole.log(validate(12222222));\nconsole.log(validate(12333333));\nconsole.log(validate(12444444));\nconsole.log(validate(12555555));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122907,
      "stdout": "../../../../tmp/tmpn1sn06pd.ts(53,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    const digits = n.toString().split('').map(Number);\n    const freq = {};\n    for (let i = 0; i < digits.length; i++) {\n        if (digits[i] in freq) {\n            freq[digits[i]]++;\n        } else {\n            freq[digits[i]] = 1;\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (freq[digits[i]] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1222));\nconsole.log(validate(2222));\nconsole.log(validate(2221));\nconsole.log(validate(2211));\nconsole.log(validate(2212));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\nconsole.log(validate(2222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122908,
      "stdout": "false\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122908,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let freq = {};\n    for (let i = 0; i < arr.length; i++) {\n        let char = arr[i];\n        if (freq[char]) {\n            freq[char]++;\n        } else {\n            freq[char] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        let char = arr[i];\n        if (freq[char] > parseInt(char)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122908,
      "stdout": "../../../../tmp/tmpho5srtsh.ts(55,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122906,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122908,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits: number[] = n.toString().split('').map(Number);\n    let frequency: number[] = [];\n    for (let i = 0; i < digits.length; i++) {\n        frequency[i] = 0;\n        for (let j = 0; j < digits.length; j++) {\n            if (digits[i] == digits[j]) {\n                frequency[i]++;\n            }\n        }\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[i] > digits[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let temp: number = n;\n    while (temp != 0) {\n        freq[temp % 10]++;\n        temp = Math.floor(temp / 10);\n    }\n    temp = n;\n    while (temp != 0) {\n        if (freq[temp % 10] > temp % 10) {\n            return false;\n        }\n        temp = Math.floor(temp / 10);\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let num = n;\n    let digit: number;\n    let digitCount: number[] = [];\n    for (let i = 0; i < 10; i++) {\n        digitCount[i] = 0;\n    }\n    while (num > 0) {\n        digit = num % 10;\n        digitCount[digit]++;\n        num = Math.floor(num / 10);\n    }\n    for (let i = 0; i < 10; i++) {\n        if (digitCount[i] > i) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1213));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237));\nconsole.log(validate(1238));\nconsole.log(validate(1239));\nconsole.log(validate(1244));\nconsole.log(validate(1245));\nconsole.log(validate(1246));\nconsole.log(validate(1247));\nconsole.log(validate(1248));\nconsole.log(validate(1249));\nconsole.log(validate(1255));\nconsole.log(validate(1256));\nconsole.log(validate(1257));\nconsole.log(validate(1258));\nconsole.log(validate(1259));\nconsole.log(validate(1266));\nconsole.log(validate(1267));\nconsole.log(validate(1268));\nconsole.log(validate(1269));\nconsole.log(validate(1277));\nconsole.log(validate(1278));\nconsole.log(validate(1279));\nconsole.log(validate(1288));\nconsole.log(validate(1289));\nconsole.log(validate(1299));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "../../../../tmp/tmpa226z1z4.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpa226z1z4.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str: string = n.toString();\n    let arr: number[] = str.split('').map(Number);\n    let count: number[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        count[i] = 0;\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count[i]++;\n            }\n        }\n    }\n    for (let i = 0; i < count.length; i++) {\n        if (count[i] > arr[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(123322));\nconsole.log(validate(12332234));\nconsole.log(validate(1233223445));\nconsole.log(validate(123322344555));\nconsole.log(validate(12332234455566));\nconsole.log(validate(1233223445556667));\nconsole.log(validate(123322344555666777));\nconsole.log(validate(12332234455566677788));\nconsole.log(validate(1233223445556667778899));\nconsole.log(validate(123322344555666777889900));\nconsole.log(validate(12332234455566677788990011));\nconsole.log(validate(1233223445556667778899001112));\nconsole.log(validate(123322344555666777889900111213));\nconsole.log(validate(12332234455566677788990011121314));\nconsole.log(validate(1233223445556667778899001112131415));\nconsole.log(validate(123322344555666777889900111213141516));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1243));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1242));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "../../../../tmp/tmp3j6jqcvw.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp3j6jqcvw.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\nfalse\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(2222));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1220));\nconsole.log(validate(1221));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1230));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(1236));\nconsole.log(validate(1237\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "../../../../tmp/tmp9clehd5y.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmp9clehd5y.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]]) {\n            obj[str[i]]++;\n        } else {\n            obj[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (obj[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "../../../../tmp/tmpeelqa_iz.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmpeelqa_iz.ts(40,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = parseInt(str[i]);\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = parseInt(str[i]);\n        if (freq[digit] > digit) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1122));\nconsole.log(validate(1123));\nconsole.log(validate(1124));\nconsole.log(validate(1125));\nconsole.log(validate(1126));\nconsole.log(validate(1127));\nconsole.log(validate(1128));\nconsole.log(validate(1129));\nconsole.log(validate(1133));\nconsole.log(validate(1134));\nconsole.log(validate(1135));\nconsole.log(validate(1136));\nconsole.log(validate(1137));\nconsole.log(validate(1138));\nconsole.log(validate(1139));\nconsole.log(validate(1144));\nconsole.log(validate(1145));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    let result = true;\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > key) {\n            result = false;\n        }\n    }\n    return result;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(123322));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1233));\nconsole.log(validate(122222));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "../../../../tmp/tmp0x8w_mwu.ts(27,1): error TS1005: ',' expected.\n../../../../tmp/tmp0x8w_mwu.ts(27,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        if (map.has(str[i])) {\n            map.set(str[i], map.get(str[i]) + 1);\n        } else {\n            map.set(str[i], 1);\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (map.get(str[i]) > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1113));\nconsole.log(validate(1114));\nconsole.log(validate(1115));\nconsole.log(validate(1116));\nconsole.log(validate(1117));\nconsole.log(validate(1118));\nconsole.log(validate(1119));\nconsole.log(validate(1120));\nconsole.log(validate(1121));\nconsole.log(validate(1122));\nconsole.log(validate(1123));\nconsole.log(validate(1124));\nconsole.log(validate(1125));\nconsole.log(validate(1126));\nconsole.log(validate(1127));\nconsole.log(validate(1128));\nconsole.log(validate(1129));\nconsole.log(validate(1130));\nconsole.log(validate(1131));\nconsole.log(validate(1132));\nconsole.log(validate(1133));\nconsole.log(validate(1134));\nconsole.log(validate(1135));\nconsole.log(validate(1136));\nconsole.log(validate(1137));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "../../../../tmp/tmpogwa72ed.ts(53,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122903,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str.charAt(i);\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str.charAt(i);\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122909,
      "stdout": "true\ntrue\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] > parseInt(arr[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122910,
      "stdout": "true\ntrue\ntrue\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split(\"\");\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]] > parseInt(nums[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let s = n.toString();\n    let freq = new Array(10).fill(0);\n    for (let i = 0; i < s.length; i++) {\n        freq[parseInt(s[i])]++;\n    }\n    for (let i = 0; i < s.length; i++) {\n        if (freq[parseInt(s[i])] > parseInt(s[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let obj = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (obj[digit]) {\n            obj[digit]++;\n        } else {\n            obj[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (obj[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1212));\nconsole.log(validate(1213));\nconsole.log(validate(1214));\nconsole.log(validate(1215));\nconsole.log(validate(1216));\nconsole.log(validate(1217));\nconsole.log(validate(1218));\nconsole.log(validate(1219));\nconsole.log(validate(1221));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1224));\nconsole.log(validate(1225));\nconsole.log(validate(1226));\nconsole.log(validate(1227));\nconsole.log(validate(1228));\nconsole.log(validate(1229));\nconsole.log(validate(1231));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1235));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmpstxmx8dm.ts(56,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let map = new Map();\n    for (let i = 0; i < str.length; i++) {\n        if (map.has(str[i])) {\n            map.set(str[i], map.get(str[i]) + 1);\n        } else {\n            map.set(str[i], 1);\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (map.get(str[i]) > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(122222222222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmp1794ofyf.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp1794ofyf.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let nums = n.toString().split('');\n    let freq = {};\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]]) {\n            freq[nums[i]]++;\n        } else {\n            freq[nums[i]] = 1;\n        }\n    }\n    for (let i = 0; i < nums.length; i++) {\n        if (freq[nums[i]] > parseInt(nums[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122901,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1222));\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\nfalse\ntrue\ntrue\ntrue\ntrue\ntrue\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validate(1211));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmpk9bjsz4z.ts(54,1): error TS1005: ',' expected.\n../../../../tmp/tmpk9bjsz4z.ts(54,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1233));\nconsole.log(validate(1222));\nconsole.log(validate(122222));\nconsole.log(validate(12222222));\nconsole.log(validate(1222222222));\nconsole.log(validate(122222222222));\nconsole.log(validate(12222222222222));\nconsole.log(validate(1222222222222222));\nconsole.log(validate(122222222222222222));\nconsole.log(validate(12222222222222222222));\nconsole.log(validate(1222222222222222222222));\nconsole.log(validate(122222222222222222222222));\nconsole.log(validate(12222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222));\nconsole.log(validate(12222222222222222222222222222222));\nconsole.log(validate(1222222222222222222222222222222222));\nconsole.log(validate(122222222222222222222222222222222222));\nconsole.log(validate(1222\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmp9nsvb1_1.ts(43,1): error TS1005: ',' expected.\n../../../../tmp/tmp9nsvb1_1.ts(43,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let count = 0;\n        for (let j = 0; j < str.length; j++) {\n            if (str[i] == str[j]) {\n                count++;\n            }\n        }\n        if (count > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(12233));\nconsole.log(validate(122233));\nconsole.log(validate(1222333));\nconsole.log(validate(12223333));\nconsole.log(validate(122233333));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1233));\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1221));\nconsole.log(validate(1211));\nconsole.log(validate(1111));\nconsole.log(validate(1112));\nconsole.log(validate(1122));\nconsole.log(validate(1212));\nconsole.log(validate(1222));\nconsole.log(validate(1232));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1243));\nconsole.log(validate(1333));\nconsole.log(validate(2222));\nconsole.log(validate(2223));\nconsole.log(validate(2232));\nconsole.log(validate(2233));\nconsole.log(validate(2234));\nconsole.log(validate(2243));\nconsole.log(validate(2333));\nconsole.log(validate(2334));\nconsole.log(validate(2343));\nconsole.log(validate(2433));\nconsole.log(validate(3333));\nconsole.log(validate(3334));\nconsole.log(validate(3343));\nconsole.log(validate(3433));\nconsole.log(validate(4433));\nconsole.log(validate(5555));\nconsole.log(validate(5556));\nconsole.log(validate(5565));\nconsole.log(validate(5566));\nconsole.log(validate(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmpjd_7my6w.ts(55,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1223));\nconsole.log(validate(1234));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(122333));\nconsole.log(validate(12233344));\nconsole.log(validate(1223334444));\nconsole.log(validate(122333444444));\nconsole.log(validate(12233344444444));\nconsole.log(validate(1223334444444444));\nconsole.log(validate(122333444444444444));\nconsole.log(validate(12233344444444444444));\nconsole.log(validate(1223334444444444444444));\nconsole.log(validate(122333444444444444444444));\nconsole.log(validate(12233344444444444444444444));\nconsole.log(validate(1223334444444444444444444444));\nconsole.log(validate(122333444444444444444444444444));\nconsole.log(validate(12233344444444444444444444444444));\nconsole.log(validate(1223334444444444444444444444444444));\nconsole.log(validate(122333444444444444444444444444444444));\nconsole.log(validate(1223334444444444\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmp8eqx9djv.ts(41,1): error TS1005: ',' expected.\n../../../../tmp/tmp8eqx9djv.ts(41,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let digits = n.toString().split('');\n    let frequency = {};\n    for (let i = 0; i < digits.length; i++) {\n        frequency[digits[i]] = (frequency[digits[i]] || 0) + 1;\n    }\n    for (let i = 0; i < digits.length; i++) {\n        if (frequency[digits[i]] > parseInt(digits[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let arr = str.split('');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]]++;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] > parseInt(key)) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(validate(1223));\nconsole.log(validate(1222));\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1255));\nconsole.log(validate(1266));\nconsole.log(validate(1277));\nconsole.log(validate(1288));\nconsole.log(validate(1299));\nconsole.log(validatendeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "../../../../tmp/tmpfnvqt7br.ts(31,1): error TS1005: ',' expected.\n../../../../tmp/tmpfnvqt7br.ts(31,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str.charAt(i);\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str.charAt(i);\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1233));\nconsole.log(validate(1234));\nconsole.log(validate(1244));\nconsole.log(validate(1222));\nconsole.log(validate(1222222222));\nconsole.log(validate(1222222223));\nconsole.log(validate(1222222224));\nconsole.log(validate(1222222225));\nconsole.log(validate(1222222226));\nconsole.log(validate(1222222227));\nconsole.log(validate(1222222228));\nconsole.log(validate(1222222229));\nconsole.log(validate(1222222220));\nconsole.log(validate(1222222221));\nconsole.log(validate(1222222222));\nconsole.log(validate(1222222223));\nconsole.log(validate(1222222224));\nconsole.log(validate(1222222225));\nconsole.log(validate(1222222226));\nconsole.log(validate(1222222227));\nconsole.log(validate(1222222228));\nconsole.log(validate(1222222229));\nconsole.log(validate(1222222220));\nconsole.log(validate(1222222221));\nconsole.log(validate(1222222222));\nconsole.log(validate(1222222223));\nconsole.log(validate(1222222224));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "true\ntrue\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]]++;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit] > parseInt(digit)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(validate(1234));\nconsole.log(validate(1224));\nconsole.log(validate(1222));\nconsole.log(validate(1212));\nconsole.log(validate(1211));\nconsole.log(validate(2211));\nconsole.log(validate(2111));\nconsole.log(validate(1111));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log(validate(1222));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1666122911,
      "stdout": "true\ntrue\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunction validate(n: number): boolean {\n    let str = n.toString();\n    let freq = {};\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]]) {\n            freq[str[i]] += 1;\n        } else {\n            freq[str[i]] = 1;\n        }\n    }\n    for (let i = 0; i < str.length; i++) {\n        if (freq[str[i]] > parseInt(str[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = validate;\n  assert.deepEqual(candidate(1234),true);\n  assert.deepEqual(candidate(51241),false);\n  assert.deepEqual(candidate(321),true);\n}\n\ntest();",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
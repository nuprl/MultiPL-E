{
  "name": "mbpp_728_sum_list",
  "language": "ts",
  "prompt": "//Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list(lst1: number[], lst2: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_728_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_list;\n  assert.deepEqual(candidate([10, 20, 30], [15, 25, 35]),[25, 45, 65]);\n  assert.deepEqual(candidate([1, 2, 3], [5, 6, 7]),[6, 8, 10]);\n  assert.deepEqual(candidate([15, 20, 30], [15, 45, 75]),[30, 65, 105]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    if (lst1.length != lst2.length) {\n        throw new Error(\"The lists must be of the same length\");\n    }\n    var sum_lst: number[] = [];\n    for (var i: number = 0; i < lst1.length; i++) {\n        sum_lst.push(lst1[i] + lst2[i]);\n    }\n    return sum_lst;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let lst3: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        lst3[i] = lst1[i] + lst2[i];\n    }\n    return lst3;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let sum: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        sum.push(lst1[i] + lst2[i]);\n    }\n    return sum;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let sum_lst: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        sum_lst.push(lst1[i] + lst2[i]);\n    }\n    return sum_lst;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let sum: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        sum[i] = lst1[i] + lst2[i];\n    }\n    return sum;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    if (lst1.length != lst2.length) {\n        throw new Error(\"Lists must be of the same length\");\n    }\n    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n",
    "    let result: number[] = [];\n    for (let i = 0; i < lst1.length; i++) {\n        result.push(lst1[i] + lst2[i]);\n    }\n    return result;\n}\n"
  ]
}
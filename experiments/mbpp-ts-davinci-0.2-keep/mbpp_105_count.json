{
  "name": "mbpp_105_count",
  "language": "ts",
  "prompt": "//Write a python function to count true booleans in the given list.\nfunction count(lst: boolean[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_105_count.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count;\n  assert.deepEqual(candidate([true, false, true]),2);\n  assert.deepEqual(candidate([false, false]),0);\n  assert.deepEqual(candidate([true, true, true]),3);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    let count: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] == true) {\n            count++;\n        }\n    }\n    return count;\n}\n"
  ]
}
{
  "name": "mbpp_442_positive_count",
  "language": "ts",
  "prompt": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let num of nums) {\n        if (num > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpyqbvw_do.js:14:12)\n    at Object.<anonymous> (/tmp/tmpyqbvw_do.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let num of nums) {\n    if (num > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp3zdxlo8n.js:14:12)\n    at Object.<anonymous> (/tmp/tmp3zdxlo8n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "1\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpkxfft6jm.js:15:12)\n    at Object.<anonymous> (/tmp/tmpkxfft6jm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123799,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp_wwb0vjz.js:14:12)\n    at Object.<anonymous> (/tmp/tmp_wwb0vjz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count: number = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpcryhcf9n.js:14:12)\n    at Object.<anonymous> (/tmp/tmpcryhcf9n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, 4, 5]));\nconsole.log(positive_count([-1, -2, -3, -4, -5]));\nconsole.log(positive_count([0, 0, 0, 0, 0]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "1\n0\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp22n0zstw.js:17:12)\n    at Object.<anonymous> (/tmp/tmp22n0zstw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count: number = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpcryhcf9n.js:14:12)\n    at Object.<anonymous> (/tmp/tmpcryhcf9n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123799,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp_wwb0vjz.js:14:12)\n    at Object.<anonymous> (/tmp/tmp_wwb0vjz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let num of nums) {\n    if (num > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp3zdxlo8n.js:14:12)\n    at Object.<anonymous> (/tmp/tmp3zdxlo8n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, -1, -2, -3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp4wj7ya35.js:15:12)\n    at Object.<anonymous> (/tmp/tmp4wj7ya35.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123799,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpc5vb92ru.js:14:12)\n    at Object.<anonymous> (/tmp/tmpc5vb92ru.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, -1, -2, -3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp_1adwuew.js:15:12)\n    at Object.<anonymous> (/tmp/tmp_1adwuew.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count: number = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, 4, 5]));\nconsole.log(positive_count([1, -2, 3, -4, 5]));\nconsole.log(positive_count([-1, -2, -3, -4, -5]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "1\n0.6\n0\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppbvyb4_k.js:17:12)\n    at Object.<anonymous> (/tmp/tmppbvyb4_k.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpekcrpq1x.js:14:12)\n    at Object.<anonymous> (/tmp/tmpekcrpq1x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count: number = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpcryhcf9n.js:14:12)\n    at Object.<anonymous> (/tmp/tmpcryhcf9n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmp2zgu7tv3.js:14:12)\n    at Object.<anonymous> (/tmp/tmp2zgu7tv3.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, -1, -2, -3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123799,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpnikheu6r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpnikheu6r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, -1, -2, -3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123799,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpnikheu6r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpnikheu6r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\nconsole.log(positive_count([1, 2, 3, -1, -2, -3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123799,
      "stdout": "0.5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpnikheu6r.js:15:12)\n    at Object.<anonymous> (/tmp/tmpnikheu6r.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(positive_count([1, 2, 3, -1, -2, -3]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1666123802,
      "stdout": "3\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmprcjl_fhu.js:15:12)\n    at Object.<anonymous> (/tmp/tmprcjl_fhu.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmppucatc6o.js:14:12)\n    at Object.<anonymous> (/tmp/tmppucatc6o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpwhwcj9zt.js:14:12)\n    at Object.<anonymous> (/tmp/tmpwhwcj9zt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count: number = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmpxeiioxz8.js:14:12)\n    at Object.<anonymous> (/tmp/tmpxeiioxz8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums: number[]): number {\n    let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 0) {\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
      "timestamp": 1665509676,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.5384615384615384\n\nshould loosely deep-equal\n\n0.54\n    at test (/tmp/tmporsnsml8.js:14:12)\n    at Object.<anonymous> (/tmp/tmporsnsml8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.5384615384615384,\n  expected: 0.54,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
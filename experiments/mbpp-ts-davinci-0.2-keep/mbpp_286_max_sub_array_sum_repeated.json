{
  "name": "mbpp_286_max_sub_array_sum_repeated",
  "language": "ts",
  "prompt": "//Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\nfunction max_sub_array_sum_repeated(a: number[], n: number, k: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sub_array_sum_repeated;\n  assert.deepEqual(candidate([10, 20, -30, -1], 4, 3),30);\n  assert.deepEqual(candidate([-1, 10, 20], 3, 2),59);\n  assert.deepEqual(candidate([-1, -2, -3], 3, 3),-1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    // max_ending_here is used to store the sum of the contiguous subarray\n    // which is ending at the current position\n    let max_ending_here: number = 0;\n\n    // max_so_far is used to store the maximum sum of the contiguous subarray\n    // which is ending at any position\n    let max_so_far: number = 0;\n\n    // max_element is used to store the maximum element of the array\n    let max_element: number = -Infinity;\n\n    // max_sum_array is used to store the maximum sum of the contiguous subarray\n    // which is ending at any position and is repeated k times\n    let max_sum_array: number = 0;\n\n    // max_sum_array_ending_here is used to store the sum of the contiguous subarray\n    // which is ending at the current position and is repeated k times\n    let max_sum_array_ending_here: number = 0;\n\n    // max_sum_array_so_far is used to store the maximum sum of the contiguous subarray\n    // which is ending at any position and is repeated k times\n    let max_sum_array_so_far: number = 0;\n\n    // max_sum_array_element is used to store the maximum element of the array\n    // which is repeated k times\n    let max_sum_array_element: number = -Infinity;\n\n    // max_sum_array_element_so_far is used to store the maximum element of the array\n    // which is repeated k times and is ending at any position\n    let max_sum_array_element_so_far: number = -Infinity;\n\n    // max_sum_array_element_ending_here is used to store the maximum element of the array\n    // which is repeated k times and is ending at the current position\n    let max_sum_array_element_ending_here: number = -Infinity;\n\n    // max_sum_array_element_ending_here_index is used to store the index of the maximum element of the array\n    // which is repeated k times and is ending at the current position\n    let max_sum_array_element_ending_here_index: number = -1;\n\n    // max_sum_array_element_so",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = -Infinity;\n    let sum_of_all_elements = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        max_element = Math.max(max_element, a[i]);\n        sum_of_all_elements += a[i];\n    }\n    max_sum_so_far = Math.max(max_sum_so_far, max_element);\n    if (max_sum_so_far < 0) {\n        return max_sum_so_far;\n    }\n    max_sum = max_sum_so_far;\n    for (let i = 1; i < k; i++) {\n        max_sum_so_far = (max_sum_so_far + sum_of_all_elements) % 1000000007;\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_so_far = max_so_far + a[i % n];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = -Infinity;\n    let sum_of_all_elements = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far = Math.max(max_sum_so_far + a[i], a[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n        sum_of_all_elements += a[i];\n    }\n\n    if (max_sum < 0) {\n        return max_sum;\n    }\n\n    if (k === 1) {\n        return max_sum;\n    }\n\n    let max_sum_of_array_repeated_k_times = sum_of_all_elements * (k - 2) + max_sum;\n    return Math.max(max_sum_of_array_repeated_k_times, max_sum + sum_of_all_elements);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_start_so_far = 0;\n    let max_end_so_far = 0;\n    let max_sum_so_far_repeated = 0;\n    let max_sum_so_far_repeated_start = 0;\n    let max_sum_so_far_repeated_end = 0;\n    let max_sum_so_far_repeated_start_so_far = 0;\n    let max_sum_so_far_repeated_end_so_far = 0;\n    let max_sum_so_far_repeated_so_far = 0;\n    let max_sum_so_far_repeated_so_far_start = 0;\n    let max_sum_so_far_repeated_so_far_end = 0;\n    let max_sum_so_far_repeated_so_far_start_so_far = 0;\n    let max_sum_so_far_repeated_so_far_end_so_far = 0;\n    let max_sum_so_far_repeated_so_far_so_far = 0;\n    let max_sum_so_far_repeated_so_far_so_far_start = 0;\n    let max_sum_so_far_repeated_so_far_so_far_end = 0;\n    let max_sum_so_far_repeated_so_far_so_far_start_so_far = 0;\n    let max_sum_so_far_repeated_so_far_so_far_end_so_far = 0;\n    let max_sum_so_far_repeated_so_far_so_far_so_far = 0;\n    let max_sum_so_far_repeated_so_far_so_far_so_far_start = 0",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n\n    return Math.max(max_wrap, max_so_far);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let m = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum < max_sum_ending_here) {\n            max_sum = max_sum_ending_here;\n        }\n    }\n\n    max_sum_so_far = max_sum;\n\n    for (j = 2; j <= k; j++) {\n        for (l = 0; l < n; l++) {\n            a[l] = a[l] * -1;\n        }\n\n        max_sum = 0;\n        max_sum_ending_here = 0;\n\n        for (m = 0; m < n; m++) {\n            max_sum_ending_here = max_sum_ending_here + a[m];\n            if (max_sum_ending_here < 0) {\n                max_sum_ending_here = 0;\n            }\n            if (max_sum < max_sum_ending_here) {\n                max_sum = max_sum_ending_here;\n            }\n        }\n\n        for (r = 0; r < n; r++) {\n            a[r] = a[r] * -1;\n        }\n\n        max_sum_so_far = max_sum_so_far + max_sum;\n    }\n\n    return max_sum_so_far;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let sum = 0;\n\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n        max_element = Math.max(max_element, a[i]);\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    for (let i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    let max_sum = max_so_far;\n    let max_prefix_sum = 0;\n    let max_suffix_sum = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_prefix_sum += a[i];\n        max_suffix_sum += a[n - i - 1];\n        max_so_far = Math.max(max_so_far, max_prefix_sum);\n        max_so_far = Math.max(max_so_far, max_suffix_sum);\n        max_so_far = Math.max(max_so_far, max_prefix_sum + max_suffix_sum - a[i]);\n    }\n\n    return Math.max(max_so_far, max_sum + (k - 2) * sum);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < k; i++) {\n        max_sum_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_sum_ending_here = max_sum_ending_here + a[j];\n            if (max_sum_ending_here < 0)\n                max_sum_ending_here = 0;\n            if (max_sum_so_far < max_sum_ending_here)\n                max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = max_sum_so_far;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_start_temp = 0;\n    let max_end_temp = 0;\n    let max_so_far_temp = 0;\n    let max_ending_here_temp = 0;\n    let max_sum_temp = 0;\n    let max_sum_final = 0;\n    let max_so_far_final = 0;\n    let max_start_final = 0;\n    let max_end_final = 0;\n    let max_ending_here_final = 0;\n    let max_sum_final_temp = 0;\n    let max_so_far_final_temp = 0;\n    let max_start_final_temp = 0;\n    let max_end_final_temp = 0;\n    let max_ending_here_final_temp = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            max_start_temp = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            max_end_temp = i;\n            max_start = max_start_temp;\n            max_end = max_end_temp;\n        }\n    }\n    max_sum_temp = max_so_far;\n    max_so_far_temp = max_so_far;\n    max_start_temp = max_start;\n    max_end_temp = max_end;\n    max_ending_here_temp = max_so_far;\n    for (j = 1; j < k; j++) {\n        for (i = 0; i < n; i++) {\n            max_ending_",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_sum = max_so_far * k;\n\n    let max_wrap = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_wrap = max_wrap + max_so_far;\n\n    if (max_wrap > max_sum) {\n        max_sum = max_wrap;\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    let max_index = 0;\n    let min_index = 0;\n    let min_sum = 0;\n    let min_so_far = 0;\n    let min_ending_here = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            max_index = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    for (i = 0; i < n; i++) {\n        min_ending_here += a[i];\n        if (min_so_far > min_ending_here) {\n            min_so_far = min_ending_here;\n            min_index = i;\n        }\n        if (min_ending_here > 0) {\n            min_ending_here = 0;\n        }\n    }\n    min_sum = min_so_far;\n    max_sum = max_so_far;\n    if (k == 1) {\n        return max_sum;\n    }\n    if (k == 2) {\n        return max_sum + min_sum;\n    }\n    max_so_far = 0;\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    max_sum =",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_sum_ending_here_start = 0;\n    let max_sum_ending_here_end = 0;\n    let max_sum_ending_here_sum = 0;\n    let max_sum_ending_here_start_temp = 0;\n    let max_sum_ending_here_end_temp = 0;\n    let max_sum_ending_here_sum_temp = 0;\n    let max_sum_ending_here_start_temp_2 = 0;\n    let max_sum_ending_here_end_temp_2 = 0;\n    let max_sum_ending_here_sum_temp_2 = 0;\n    let max_sum_ending_here_start_temp_3 = 0;\n    let max_sum_ending_here_end_temp_3 = 0;\n    let max_sum_ending_here_sum_temp_3 = 0;\n    let max_sum_ending_here_start_temp_4 = 0;\n    let max_sum_ending_here_end_temp_4 = 0;\n    let max_sum_ending_here_sum_temp_4 = 0;\n    let max_sum_ending_here_start_temp_5 = 0;\n    let max_sum_ending_here_end_temp_5 = 0;\n    let max_sum_ending_here_sum_temp_5 = 0;\n    let max_sum_ending_here_start_temp_6 = 0;\n    let max_sum_ending_here_end_temp_6 = 0;\n    let max_sum_ending_here_sum_temp_6 = 0;\n    let max_sum_ending_here_start_temp_7 = 0;\n    let max_sum_ending_here_end_temp_7 = 0;\n    let max_sum_ending_here_sum",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let temp = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_so_far = sum;\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far;\n    for (i = 1; i < k; i++) {\n        for (j = 0; j < n; j++) {\n            temp = a[j];\n            a[j] = sum - a[j];\n            sum = sum - temp + a[j];\n            max_ending_here += a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = Math.max(max_sum, max_so_far);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum;\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here > sum) {\n            max_ending_here = sum;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = Number.MIN_SAFE_INTEGER;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    let max_sum = max_so_far;\n    for (let i = 2; i <= k; i++) {\n        max_sum = Math.max(max_sum, max_so_far + sum * (i - 2));\n        max_so_far = Math.max(max_so_far, max_so_far + sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let m = 0;\n    let max_sum_ending_here_arr: number[] = [];\n    let max_sum_so_far_arr: number[] = [];\n    let max_sum_arr: number[] = [];\n    for (i = 0; i < k; i++) {\n        for (j = 0; j < n; j++) {\n            max_sum_ending_here = max_sum_ending_here + a[j];\n            if (max_sum_ending_here < 0) {\n                max_sum_ending_here = 0;\n            }\n            if (max_sum_so_far < max_sum_ending_here) {\n                max_sum_so_far = max_sum_ending_here;\n            }\n            max_sum_ending_here_arr[j] = max_sum_ending_here;\n            max_sum_so_far_arr[j] = max_sum_so_far;\n        }\n        max_sum = max_sum + max_sum_so_far;\n        max_sum_arr[i] = max_sum;\n        max_sum_so_far = 0;\n        max_sum_ending_here = 0;\n    }\n    max_sum = max_sum_arr[0];\n    for (l = 1; l < k; l++) {\n        if (max_sum < max_sum_arr[l]) {\n            max_sum = max_sum_arr[l];\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n    let curr_sum = 0;\n    let prev_sum = 0;\n    let res = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        curr_sum += a[i];\n    }\n\n    if (max_so_far === 0) {\n        return max_element;\n    }\n\n    let sum = curr_sum * k;\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        curr_sum -= a[i];\n        max_wrap = Math.max(max_wrap, prev_sum + curr_sum);\n        prev_sum += a[i];\n    }\n\n    res = Math.max(max_wrap, sum - max_wrap);\n    return res;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let sum = 0;\n    for (let i = 0; i < n * k; i++) {\n        sum += a[i % n];\n        max_so_far = Math.max(max_so_far, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n        max_sum = Math.max(max_sum, max_so_far);\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n\n    return Math.max(max_so_far, max_wrap * (k - 2));\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum * k;\n    let curr_prefix = 0;\n    let curr_suffix = 0;\n    for (i = 0; i < n; i++) {\n        curr_prefix += a[i];\n        curr_suffix += a[n - i - 1];\n        max_ending_here = curr_prefix;\n        max_so_far = Math.max(max_so_far, max_ending_here);\n        max_ending_here = curr_suffix;\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    return Math.max(max_so_far, max_sum);\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    return Math.max(max_so_far, max_so_far * k);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    max_sum = max_so_far;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        max_ending_here = max_ending_here - a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum + (k - 2) * max_so_far;\n    max_ending_here = 0;\n    for (i = n - 1; i >= 0; i--) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum + max_so_far;\n    return max_sum;\n}\n",
    "    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = Math.max(a[i], max_ending_here + a[i]);\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    if (max_so_far < 0) {\n        return max_element;\n    }\n    let max_sum = max_so_far;\n    let curr_max = max_so_far;\n    for (let i = 2; i <= k; i++) {\n        curr_max = Math.max(curr_max, max_so_far * (i - 1));\n        max_sum = Math.max(max_sum, curr_max);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        max_so_far = -Infinity;\n        for (i = 0; i < n; i++) {\n            if (max_so_far < a[i]) {\n                max_so_far = a[i];\n            }\n        }\n    }\n    max_sum = max_so_far;\n    for (i = 2; i <= k; i++) {\n        max_so_far = 0;\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (count < k) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        if (max_element < a[i]) {\n            max_element = a[i];\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    max_sum = max_sum_so_far;\n    for (i = 1; i < k; i++) {\n        max_sum_so_far = max_sum_so_far - (n * a[n - i]);\n        max_sum_so_far = max_sum_so_far + a[i - 1];\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < k; i++) {\n        max_sum_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_sum_ending_here += a[j];\n            if (max_sum_ending_here < 0) {\n                max_sum_ending_here = 0;\n            }\n            if (max_sum_so_far < max_sum_ending_here) {\n                max_sum_so_far = max_sum_ending_here;\n            }\n        }\n        max_sum += max_sum_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    while (i < k) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n        max_so_far = 0;\n        max_ending_here = 0;\n        i++;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_here = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_ending_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let m = 0;\n    let sum = 0;\n    let max_sum_array = [];\n    let max_sum_array_index = [];\n    let max_sum_array_index_repeated = [];\n    let max_sum_array_repeated = [];\n    let max_sum_array_repeated_index = [];\n    let max_sum_array_repeated_index_repeated = [];\n    let max_sum_array_repeated_repeated = [];\n    let max_sum_array_repeated_repeated_index = [];\n    let max_sum_array_repeated_repeated_index_repeated = [];\n    let max_sum_array_repeated_repeated_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_index = [];\n    let max_sum_array_repeated_repeated_repeated_index_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_index = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_index_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_repeated_index = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_repeated_index_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_repeated_repeated = [];\n    let max_sum_array_repeated_repeated_repeated_repeated_repeated_repeated_index = [];\n    let max_sum_array_",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for (let i = 0; i < n; i++) {\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for (let i = 0; i < n; i++) {\n        curr_sum += (a[i] * (k - 1));\n        max_sum = Math.max(curr_sum, max_sum);\n        curr_sum -= a[i];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = 0;\n    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far += a[i];\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    max_sum = max_sum_so_far;\n    for (i = 1; i < k; i++) {\n        sum = 0;\n        for (j = 0; j < n; j++) {\n            sum += a[j];\n            max_sum_so_far = Math.max(max_sum_so_far + sum, max_sum_so_far);\n        }\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i: number;\n    let j: number;\n\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_sum = max_so_far;\n    for (i = 1; i < k; i++) {\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        max_so_far = Math.max(max_so_far, max_ending_here);\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    return Math.max(max_so_far, max_so_far * k);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (count < k) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_sum < max_ending_here)\n            max_sum = max_ending_here;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    let start = 0;\n    let end = 0;\n\n    for (i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                m = j + 1;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = m;\n                end = j;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (j = start; j <= end; j++) {\n        sum += a[j % n];\n    }\n    return sum;\n}\n",
    "    let max_sum = 0;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum;\n    for (let i = 1; i < k; i++) {\n        sum = 0;\n        for (let j = 0; j < n; j++) {\n            sum += a[j];\n            max_sum = Math.max(max_sum, sum);\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    let m: number;\n    let temp: number;\n    let max_element = 0;\n    let min_element = 0;\n    let flag = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] > 0) {\n            flag = 1;\n            break;\n        }\n    }\n    if (flag == 0) {\n        return 0;\n    }\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    max_element = max_so_far;\n    max_sum = max_so_far;\n    max_so_far = 0;\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_so_far > max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        if (max_ending_here > 0) {\n            max_ending_here = 0;\n        }\n    }\n    min_element = max_so_far;\n    if (k == 1) {\n        return max_element;\n    }\n    if (k == 2) {\n        return max_element + min_element;\n    }\n    max_sum = max_sum + min_element * (k - 2);\n    max_sum = max_sum + max_element;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        max_sum_so_far = Math.max(max_sum_so_far, max_sum_ending_here);\n    }\n    if (max_sum_so_far === 0) {\n        return max_element;\n    }\n    max_sum = max_sum_so_far * k;\n    let sum_of_all_elements = 0;\n    for (let i = 0; i < n; i++) {\n        sum_of_all_elements += a[i];\n    }\n    let prefix_sum = 0;\n    for (let i = 0; i < n; i++) {\n        prefix_sum += a[i];\n        max_sum_ending_here = prefix_sum;\n        max_sum_ending_here = max_sum_ending_here + (sum_of_all_elements * (k - 2));\n        max_sum_ending_here = max_sum_ending_here + (prefix_sum);\n        max_sum = Math.max(max_sum, max_sum_ending_here);\n    }\n    let suffix_sum = 0;\n    for (let i = n - 1; i >= 0; i--) {\n        suffix_sum += a[i];\n        max_sum_ending_here = suffix_sum;\n        max_sum_ending_here = max_sum_ending_here + (sum_of_all_elements * (k - 2));\n        max_sum_ending_here = max_sum_ending_here + (suffix_sum);\n        max_sum = Math.max(max_sum, max_sum_ending",
    "  let max_so_far = 0;\n  let max_ending_here = 0;\n  let max_element = Number.MIN_SAFE_INTEGER;\n\n  for (let i = 0; i < n; i++) {\n    max_element = Math.max(max_element, a[i]);\n    max_ending_here = max_ending_here + a[i];\n    if (max_ending_here < 0) {\n      max_ending_here = 0;\n    }\n    if (max_so_far < max_ending_here) {\n      max_so_far = max_ending_here;\n    }\n  }\n\n  if (max_element < 0) {\n    return max_element;\n  }\n\n  let max_wrap = 0;\n  for (let i = 0; i < n; i++) {\n    max_wrap += a[i];\n    a[i] = -a[i];\n  }\n\n  max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n\n  return Math.max(max_so_far, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let m = 0;\n    let max_sum_ending_here_arr = [];\n    let max_sum_so_far_arr = [];\n    let max_sum_arr = [];\n    let max_sum_ending_here_arr_index = 0;\n    let max_sum_so_far_arr_index = 0;\n    let max_sum_arr_index = 0;\n    let max_sum_ending_here_arr_index_arr = [];\n    let max_sum_so_far_arr_index_arr = [];\n    let max_sum_arr_index_arr = [];\n    let max_sum_ending_here_arr_index_arr_index = 0;\n    let max_sum_so_far_arr_index_arr_index = 0;\n    let max_sum_arr_index_arr_index = 0;\n    let max_sum_ending_here_arr_index_arr_index_arr = [];\n    let max_sum_so_far_arr_index_arr_index_arr = [];\n    let max_sum_arr_index_arr_index_arr = [];\n    let max_sum_ending_here_arr_index_arr_index_arr_index = 0;\n    let max_sum_so_far_arr_index_arr_index_arr_index = 0;\n    let max_sum_arr_index_arr_index_arr_index = 0;\n    let max_sum_ending_here_arr_index_arr_index_arr_index_arr = [];\n    let max_sum_so_far_arr_index_arr_index_arr_index_arr = [];\n    let max_sum_arr_index_arr_index_arr_index_arr = [];\n    let max_sum_ending_here_arr_index_arr_index_arr_index_arr_index = 0;\n    let max_sum_so_far_arr_index_arr_index_",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = -Infinity;\n    let sum_of_all_elements = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        max_element = Math.max(max_element, a[i]);\n        sum_of_all_elements += a[i];\n    }\n    max_sum_so_far = Math.max(max_sum_so_far, max_element);\n    if (max_element < 0) {\n        return max_element;\n    }\n    max_sum = max_sum_so_far;\n    for (let i = 1; i < k; i++) {\n        max_sum_so_far = max_sum_so_far + sum_of_all_elements;\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n\n    while (count < k) {\n        max_ending_here = 0;\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let max_index = 0;\n    let max_index_end = 0;\n    let max_index_start = 0;\n\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            max_index_start = j;\n            max_index_end = i;\n        }\n    }\n    max_sum = max_so_far;\n    max_index = max_index_end;\n    for (i = max_index_end + 1; i < n; i++) {\n        max_sum = max_sum + a[i];\n        max_index = i;\n    }\n    for (i = 0; i < max_index_start; i++) {\n        max_sum = max_sum + a[i];\n    }\n    max_sum = max_sum * (k - 2);\n    max_ending_here = 0;\n    max_so_far = 0;\n    j = 0;\n    for (i = 0; i <= max_index; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum + max_so_far;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    while (i < n) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        i++;\n    }\n    max_sum = max_so_far * k;\n    let max_wrap = 0;\n    let curr_wrap = 0;\n    for (i = 0; i < n; i++) {\n        curr_wrap += a[i];\n        if (curr_wrap < 0) {\n            curr_wrap = 0;\n        }\n        if (max_wrap < curr_wrap) {\n            max_wrap = curr_wrap;\n        }\n    }\n    let max_non_wrap = max_so_far;\n    if (max_wrap > 0) {\n        max_sum = Math.max(max_sum, max_non_wrap + max_wrap * (k - 2));\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    while (i < n) {\n        max_so_far = max_so_far + a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n            j = i + 1;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n        }\n        i++;\n    }\n    if (max_sum > 0) {\n        max_sum = max_sum * k;\n    }\n    for (i = 0; i < n; i++) {\n        sum = sum + a[i];\n        a[i] = -a[i];\n    }\n    max_so_far = 0;\n    for (i = 0; i < n; i++) {\n        max_so_far = max_so_far + a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n        }\n    }\n    max_sum = max_sum + sum;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    while (i < n * k) {\n        max_so_far += a[i % n];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n            j = i + 1;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n        }\n        i++;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    while (i < k) {\n        max_so_far = 0;\n        max_ending_here = 0;\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n        i++;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let count = 0;\n    let max_sum_array = [];\n    let max_sum_array_index = 0;\n    let max_sum_array_index_start = 0;\n    let max_sum_array_index_end = 0;\n    let max_sum_array_index_start_temp = 0;\n    let max_sum_array_index_end_temp = 0;\n    let max_sum_array_index_start_temp_2 = 0;\n    let max_sum_array_index_end_temp_2 = 0;\n    let max_sum_array_index_start_temp_3 = 0;\n    let max_sum_array_index_end_temp_3 = 0;\n    let max_sum_array_index_start_temp_4 = 0;\n    let max_sum_array_index_end_temp_4 = 0;\n    let max_sum_array_index_start_temp_5 = 0;\n    let max_sum_array_index_end_temp_5 = 0;\n    let max_sum_array_index_start_temp_6 = 0;\n    let max_sum_array_index_end_temp_6 = 0;\n    let max_sum_array_index_start_temp_7 = 0;\n    let max_sum_array_index_end_temp_7 = 0;\n    let max_sum_array_index_start_temp_8 = 0;\n    let max_sum_array_index_end_temp_8 = 0;\n    let max_sum_array_index_start_temp_9 = 0;\n    let max_sum_array_index_end_temp_9 = 0;\n    let max_sum_array_index_start_temp_10 = 0;\n    let max_sum_array_index_end_temp_10 = 0;\n    let max_sum_array_index_start_temp_11 =",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_repeated = 0;\n    let i: number;\n    let j: number;\n\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n\n    if (k == 1) {\n        return max_sum_so_far;\n    }\n\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here_repeated = max_sum_ending_here_repeated + a[i];\n        if (max_sum_ending_here_repeated < 0) {\n            max_sum_ending_here_repeated = 0;\n        }\n    }\n\n    max_sum = max_sum_ending_here_repeated;\n\n    for (j = 2; j < k; j++) {\n        for (i = 0; i < n; i++) {\n            max_sum_ending_here = max_sum_ending_here + a[i];\n            if (max_sum_ending_here < 0) {\n                max_sum_ending_here = 0;\n            }\n\n            if (max_sum_ending_here_repeated < max_sum_ending_here) {\n                max_sum_ending_here_repeated = max_sum_ending_here;\n            }\n        }\n\n        max_sum = max_sum + max_sum_ending_here_repeated;\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_sum_so_far = Math.max(max_sum_so_far, sum);\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let max_wrap_sum = 0;\n    let max_wrap_sum_so_far = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap_sum += a[i];\n        max_wrap_sum_so_far = Math.max(max_wrap_sum_so_far, max_wrap_sum);\n        if (max_wrap_sum < 0) {\n            max_wrap_sum = 0;\n        }\n    }\n    max_wrap = max_wrap + max_wrap_sum_so_far;\n    if (k == 1) {\n        return max_sum_so_far;\n    }\n    return Math.max(max_wrap, max_sum_so_far + (k - 2) * max_wrap, max_sum_so_far);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_so_far = 0;\n    let curr_sum_arr = new Array(k).fill(0);\n    let max_so_far_arr = new Array(k).fill(0);\n    for (let i = 0; i < n; i++) {\n        curr_sum += a[i];\n        max_so_far = Math.max(max_so_far, curr_sum);\n        curr_sum_arr[i % k] = curr_sum;\n        max_so_far_arr[i % k] = max_so_far;\n    }\n    for (let i = 0; i < k; i++) {\n        curr_sum = 0;\n        for (let j = 0; j < n; j++) {\n            curr_sum += a[j];\n            max_sum = Math.max(max_sum, curr_sum);\n            curr_sum = Math.max(curr_sum, curr_sum_arr[(i + j + 1) % k] + curr_sum);\n            max_sum = Math.max(max_sum, max_so_far_arr[(i + j + 1) % k] + curr_sum);\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let start = 0;\n    let end = 0;\n\n    for (i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = j;\n            end = i;\n        }\n    }\n    for (i = start; i <= end; i++) {\n        sum += a[i % n];\n    }\n    return sum;\n}\n",
    "    let max_sum = 0;\n    let max_prefix_sum = 0;\n    let max_suffix_sum = 0;\n    let sum = 0;\n    let prefix_sum = 0;\n    let suffix_sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n        prefix_sum += a[i];\n        max_prefix_sum = Math.max(max_prefix_sum, prefix_sum);\n        suffix_sum += a[n - i - 1];\n        max_suffix_sum = Math.max(max_suffix_sum, suffix_sum);\n    }\n    max_sum = Math.max(max_prefix_sum, max_suffix_sum);\n    if (k === 1) {\n        return max_sum;\n    }\n    let max_wrap_sum = sum;\n    max_sum = Math.max(max_sum, max_wrap_sum);\n    for (let i = 2; i < k; i++) {\n        max_wrap_sum += sum;\n        max_sum = Math.max(max_sum, max_wrap_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_so_far = Math.max(a[i], max_so_far + a[i]);\n        max_sum = Math.max(max_sum, max_so_far);\n    }\n    if (max_sum > 0) {\n        return Math.max(max_sum, max_sum * k, max_element * k);\n    }\n    return max_element * k;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let i = 0;\n    let j = 0;\n    let max_i = 0;\n    let max_j = 0;\n    while (j < n) {\n        curr_sum += a[j];\n        if (curr_sum > max_sum) {\n            max_sum = curr_sum;\n            max_i = i;\n            max_j = j;\n        }\n        if (curr_sum < 0) {\n            curr_sum = 0;\n            i = j + 1;\n        }\n        j++;\n    }\n    let sum = max_sum;\n    let max_sum_2 = 0;\n    let curr_sum_2 = 0;\n    let i_2 = 0;\n    let j_2 = 0;\n    let max_i_2 = 0;\n    let max_j_2 = 0;\n    while (j_2 < n) {\n        curr_sum_2 += a[j_2];\n        if (curr_sum_2 > max_sum_2) {\n            max_sum_2 = curr_sum_2;\n            max_i_2 = i_2;\n            max_j_2 = j_2;\n        }\n        if (curr_sum_2 < 0) {\n            curr_sum_2 = 0;\n            i_2 = j_2 + 1;\n        }\n        j_2++;\n    }\n    let sum_2 = max_sum_2;\n    let max_sum_3 = 0;\n    let curr_sum_3 = 0;\n    let i_3 = 0;\n    let j_3 = 0;\n    let max_i_3 = 0;\n    let max_j_3 = 0;\n    while (j_3 < n) {\n        curr_sum_3 += a[j_3];\n        if (curr_sum_3 > max_sum_3) {\n            max_sum_3 = curr_sum_3;\n            max_i_3 = i_3;\n            max_",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        if (max_element < a[i]) {\n            max_element = a[i];\n        }\n    }\n    if (max_so_far === 0) {\n        max_sum = max_element;\n    } else {\n        max_sum = max_so_far * k;\n        let sum = 0;\n        for (let i = 0; i < n; i++) {\n            sum += a[i];\n        }\n        max_sum = max_sum + sum * (k - 2);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let count = 0;\n    for (i = 0; i < n * k; i++) {\n        max_sum_ending_here += a[i % n];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n            count = 0;\n            j = i + 1;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n            start = j;\n            end = i;\n            count++;\n        }\n        if (count === k) {\n            break;\n        }\n    }\n    for (i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = a[0];\n    let i: number;\n    let j: number;\n    let sum: number;\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    for (i = 0; i < n; i++) {\n        sum = 0;\n        for (j = i; j < n; j++) {\n            sum += a[j];\n            if (sum > max_so_far) {\n                max_so_far = sum;\n            }\n        }\n    }\n    max_so_far = max_so_far * k;\n    for (i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let count = 0;\n    let len = n * k;\n    for (i = 0; i < len; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = j;\n            end = i;\n        }\n    }\n    for (i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "  let max_sum = 0;\n  let max_sum_so_far = 0;\n  let max_sum_ending_here = 0;\n  let max_sum_ending_here_repeated = 0;\n\n  for (let i = 0; i < n; i++) {\n    max_sum_ending_here = max_sum_ending_here + a[i];\n    if (max_sum_ending_here < 0) {\n      max_sum_ending_here = 0;\n    }\n    if (max_sum_so_far < max_sum_ending_here) {\n      max_sum_so_far = max_sum_ending_here;\n    }\n  }\n\n  for (let i = 0; i < n; i++) {\n    max_sum_ending_here_repeated = max_sum_ending_here_repeated + a[i];\n    if (max_sum_ending_here_repeated > max_sum) {\n      max_sum = max_sum_ending_here_repeated;\n    }\n    if (max_sum_ending_here_repeated < 0) {\n      max_sum_ending_here_repeated = 0;\n    }\n  }\n\n  let total_sum = 0;\n  for (let i = 0; i < n; i++) {\n    total_sum = total_sum + a[i];\n  }\n\n  let max_wrap = total_sum * k;\n  max_wrap = max_wrap + max_sum_so_far;\n\n  return Math.max(max_wrap, max_sum);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_prev = 0;\n    let i: number;\n    let j: number;\n\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n\n    max_sum = max_sum_so_far;\n\n    for (i = 1; i < k; i++) {\n        for (j = 0; j < n; j++) {\n            max_sum_ending_here_prev = max_sum_ending_here_prev + a[j];\n            if (max_sum_ending_here_prev < 0) {\n                max_sum_ending_here_prev = 0;\n            }\n            if (max_sum_ending_here < max_sum_ending_here_prev) {\n                max_sum_ending_here = max_sum_ending_here_prev;\n            }\n        }\n        max_sum = max_sum + max_sum_ending_here;\n        max_sum_ending_here = 0;\n        max_sum_ending_here_prev = 0;\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let max_index = 0;\n    let min_index = 0;\n    let max_element = 0;\n    let min_element = 0;\n    let max_element_index = 0;\n    let min_element_index = 0;\n    let max_element_count = 0;\n    let min_element_count = 0;\n    let max_element_sum = 0;\n    let min_element_sum = 0;\n    let max_element_sum_index = 0;\n    let min_element_sum_index = 0;\n    let max_element_sum_count = 0;\n    let min_element_sum_count = 0;\n    let max_element_sum_index_count = 0;\n    let min_element_sum_index_count = 0;\n    let max_element_sum_index_count_sum = 0;\n    let min_element_sum_index_count_sum = 0;\n    let max_element_sum_index_count_sum_sum = 0;\n    let min_element_sum_index_count_sum_sum = 0;\n    let max_element_sum_index_count_sum_sum_sum = 0;\n    let min_element_sum_index_count_sum_sum_sum = 0;\n    let max_element_sum_index_count_sum_sum_sum_sum = 0;\n    let min_element_sum_index_count_sum_sum_sum_sum = 0;\n    let max_element_sum_index_count_sum_sum_sum_sum_sum = 0;\n    let min_element_sum_index_count_sum_sum_sum_sum_sum = 0;\n    let max_element_sum_index_count_sum_sum_sum_sum_sum_sum = 0;\n    let min_element_sum_index_count_sum_sum_sum_sum_sum_sum = 0;\n    let max_element_sum_index_count_sum_sum_sum_",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here += a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    for (m = 0; m < k; m++) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_so_far += a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        max_sum = Math.max(max_sum, max_so_far);\n    }\n    if (max_sum === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    let max_wrap = sum * k;\n    let max_wrap_sum = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap_sum += a[i];\n        if (max_wrap_sum < 0) {\n            max_wrap_sum = 0;\n        }\n        max_wrap = Math.max(max_wrap, max_wrap_sum);\n    }\n    return Math.max(max_wrap, max_sum);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here += a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i: number;\n    let j: number;\n    let sum: number;\n    let start: number;\n    let end: number;\n\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n    }\n\n    if (max_element < 0) {\n        return max_element * k;\n    }\n\n    for (i = 0; i < n; i++) {\n        max_so_far = max_so_far + a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n            start = i;\n        }\n    }\n\n    max_so_far = 0;\n    sum = 0;\n    for (i = n - 1; i >= 0; i--) {\n        max_so_far = max_so_far + a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n            end = i;\n        }\n    }\n\n    let temp = 0;\n    for (i = 0; i < n; i++) {\n        temp = temp + a[i];\n        a[i] = -a[i];\n    }\n\n    max_so_far = 0;\n    for (i = 0; i < n; i++) {\n        max_so_far = max_so_far + a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n        }\n    }\n\n    max_sum = max_sum + temp;\n\n   ",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_start_index = 0;\n    let max_end_index = 0;\n    let max_start_index_temp = 0;\n    let max_end_index_temp = 0;\n    let max_sum_temp = 0;\n    let max_sum_temp_index = 0;\n    let max_sum_temp_index_start = 0;\n    let max_sum_temp_index_end = 0;\n    let max_sum_temp_index_start_temp = 0;\n    let max_sum_temp_index_end_temp = 0;\n    let max_sum_temp_index_start_temp_temp = 0;\n    let max_sum_temp_index_end_temp_temp = 0;\n    let max_sum_temp_index_start_temp_temp_temp = 0;\n    let max_sum_temp_index_end_temp_temp_temp = 0;\n    let max_sum_temp_index_start_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_end_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_start_temp_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_end_temp_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_start_temp_temp_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_end_temp_temp_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_start_temp_temp_temp_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_end_temp_temp_temp_temp_temp_temp_temp = 0;\n    let max_sum_temp_index_",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here += a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_sum_ending_here_repeated = 0;\n    let max_sum_so_far_repeated = 0;\n    let max_sum_ending_here_repeated_all = 0;\n    let max_sum_so_far_repeated_all = 0;\n    let max_sum_ending_here_all = 0;\n    let max_sum_so_far_all = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_sum_ending_here += a[i];\n        max_sum_ending_here_repeated += a[i];\n        max_sum_ending_here_all += a[i];\n\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n\n        if (max_sum_ending_here_repeated < 0) {\n            max_sum_ending_here_repeated = 0;\n        }\n\n        if (max_sum_ending_here_all < 0) {\n            max_sum_ending_here_all = 0;\n        }\n\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n\n        if (max_sum_so_far_repeated < max_sum_ending_here_repeated) {\n            max_sum_so_far_repeated = max_sum_ending_here_repeated;\n        }\n\n        if (max_sum_so_far_all < max_sum_ending_here_all) {\n            max_sum_so_far_all = max_sum_ending_here_all;\n        }\n    }\n\n    max_sum_ending_here_repeated_all = max_sum_so_far_repeated;\n    max_sum_so_far_repeated_all = max_sum_so_far_repeated;\n\n    for (let i = 1; i < k; i++)",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let r = 0;\n    let m = 0;\n    let max_sum_ending_here_prev = 0;\n    let max_sum_ending_here_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    let max_sum_",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    while (i < k) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here += a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n            }\n        }\n        i++;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_so_far_index = 0;\n    let max_sum_so_far_index_end = 0;\n    let max_sum_so_far_index_start = 0;\n    let max_sum_so_far_index_end_temp = 0;\n    let max_sum_so_far_index_start_temp = 0;\n    let max_sum_so_far_temp = 0;\n    while (i < n) {\n        max_sum_so_far_temp = 0;\n        max_sum_so_far_index_start_temp = i;\n        max_sum_so_far_index_end_temp = i;\n        for (j = i; j < n; j++) {\n            max_sum_so_far_temp += a[j];\n            if (max_sum_so_far_temp > max_sum_so_far) {\n                max_sum_so_far = max_sum_so_far_temp;\n                max_sum_so_far_index_start = max_sum_so_far_index_start_temp;\n                max_sum_so_far_index_end = max_sum_so_far_index_end_temp;\n            }\n            max_sum_so_far_index_end_temp++;\n        }\n        i++;\n    }\n    max_sum = max_sum_so_far;\n    for (i = 1; i < k; i++) {\n        max_sum_so_far = 0;\n        max_sum_so_far_index_start_temp = max_sum_so_far_index_start;\n        max_sum_so_far_index_end_temp = max_sum_so_far_index_end;\n        for (j = max_sum_so_far_index_start_temp; j < max_sum_so_far_index_end_temp; j++) {\n           ",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let sum_so_far = 0;\n    let sum_array = [];\n    for (i = 0; i < n; i++) {\n        sum_array[i] = 0;\n    }\n    for (i = 0; i < n; i++) {\n        sum_so_far = 0;\n        for (j = i; j < n; j++) {\n            sum_so_far += a[j];\n            sum_array[i] = sum_so_far;\n        }\n    }\n    for (i = 0; i < n; i++) {\n        sum_so_far = 0;\n        for (j = i; j < n; j++) {\n            sum_so_far += sum_array[j];\n            if (sum_so_far > max_sum_so_far) {\n                max_sum_so_far = sum_so_far;\n            }\n        }\n    }\n    max_sum = max_sum_so_far * k;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_length = 0;\n    let max_length_so_far = 0;\n    let max_length_ending_here = 0;\n    let max_length_start = 0;\n    let max_length_end = 0;\n    let max_length_start_so_far = 0;\n    let max_length_end_so_far = 0;\n    let max_length_start_ending_here = 0;\n    let max_length_end_ending_here = 0;\n    let max_length_start_temp = 0;\n    let max_length_end_temp = 0;\n    let max_length_start_temp_so_far = 0;\n    let max_length_end_temp_so_far = 0;\n    let max_length_start_temp_ending_here = 0;\n    let max_length_end_temp_ending_here = 0;\n    let max_length_start_temp_so_far_ending_here = 0;\n    let max_length_end_temp_so_far_ending_here = 0;\n    let max_length_start_temp_so_far_ending_here_temp = 0;\n    let max_length_end_temp_so_far_ending_here_temp = 0;\n    let max_length_start_temp_so_far_ending_here_temp_so_far = 0;\n    let max_length_end_temp_so_far_ending_here_temp_so_far = 0;\n    let max_length_start_temp_so_far_ending_here_temp_so_far_ending_here = 0;\n    let max_length_end_temp_so_far_ending_here_temp_so_far_ending_here = 0;\n    let max_length_start_temp_so_far_ending",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let m = 0;\n    let sum = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            m = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = m;\n            end = i;\n        }\n    }\n    max_start = start;\n    max_end = end;\n    for (j = 1; j < k; j++) {\n        max_ending_here = 0;\n        m = 0;\n        for (l = 0; l < n; l++) {\n            max_ending_here = max_ending_here + a[l];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                m = l + 1;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = m;\n                end = l;\n            }\n        }\n        if (max_start < start) {\n            max_start = start;\n        }\n        if (max_end < end) {\n            max_end = end;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    max_sum = max_so_far * k;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    let max_wrap = sum * (k - 1);\n    max_wrap = max_wrap + max_so_far;\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for (i = 0; i < k; i++) {\n        for (j = 0; j < n; j++) {\n            sum += a[j];\n            if (sum > max_sum_so_far) {\n                max_sum_so_far = sum;\n            }\n            if (sum < 0) {\n                sum = 0;\n            }\n        }\n    }\n    return max_sum_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_so_far = Math.max(a[i], max_so_far + a[i]);\n        max_sum = Math.max(max_sum, max_so_far);\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    let max_sum_k_times = sum * k;\n    let max_prefix_sum = 0;\n    let min_prefix_sum = 0;\n    let prefix_sum = 0;\n    for (let i = 0; i < n; i++) {\n        prefix_sum += a[i];\n        max_prefix_sum = Math.max(max_prefix_sum, prefix_sum);\n        min_prefix_sum = Math.min(min_prefix_sum, prefix_sum);\n    }\n    let max_suffix_sum = 0;\n    let min_suffix_sum = 0;\n    let suffix_sum = 0;\n    for (let i = n - 1; i >= 0; i--) {\n        suffix_sum += a[i];\n        max_suffix_sum = Math.max(max_suffix_sum, suffix_sum);\n        min_suffix_sum = Math.min(min_suffix_sum, suffix_sum);\n    }\n    return Math.max(max_sum, max_sum_k_times, max_prefix_sum + (sum * (k - 2)) + max_suffix_sum, min_prefix_sum + (sum * (k - 2)) + min_suffix_sum);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum * k;\n    let curr_prefix = 0;\n    let curr_suffix = 0;\n    let max_prefix = 0;\n    let max_suffix = 0;\n    for (i = 0; i < n; i++) {\n        curr_prefix += a[i];\n        max_prefix = Math.max(max_prefix, curr_prefix);\n    }\n    for (i = n - 1; i >= 0; i--) {\n        curr_suffix += a[i];\n        max_suffix = Math.max(max_suffix, curr_suffix);\n    }\n    max_sum = Math.max(max_sum, max_prefix + (sum * (k - 2)) + max_suffix);\n    return Math.max(max_sum, max_so_far);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Math.max(...a);\n    if (max_element < 0) {\n        return max_element * k;\n    }\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = Math.max(max_sum, sum);\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    return Math.max(max_so_far, max_so_far * k);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n        max_so_far = 0;\n        max_ending_here = 0;\n    }\n    return max_sum;\n}\n",
    "    let max_sum: number = 0;\n    let max_ending_here: number = 0;\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap: number = 0;\n    let min_wrap: number = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap = max_wrap + a[i];\n        if (max_wrap < 0) {\n            max_wrap = 0;\n        }\n        if (min_wrap > max_wrap) {\n            min_wrap = max_wrap;\n        }\n    }\n    max_wrap = max_wrap - min_wrap;\n    if (k == 1) {\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap + (k - 2) * max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_start_so_far = 0;\n    let max_end_so_far = 0;\n    let max_sum_so_far_repeated = 0;\n    let max_sum_ending_here_repeated = 0;\n    let max_start_so_far_repeated = 0;\n    let max_end_so_far_repeated = 0;\n    let max_start_repeated = 0;\n    let max_end_repeated = 0;\n    let max_sum_repeated = 0;\n    let max_sum_ending_here_repeated_temp = 0;\n    let max_start_repeated_temp = 0;\n    let max_end_repeated_temp = 0;\n    let max_sum_repeated_temp = 0;\n\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n            start = i + 1;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n            max_start_so_far = start;\n            max_end_so_far = i;\n        }\n    }\n\n    max_sum = max_sum_so_far;\n\n    for (j = 1; j < k; j++) {\n        for (i = 0; i < n; i++) {\n            max_sum_ending_here_repeated = max_sum_ending_here_repeated + a[i];\n            if (max_sum_ending_here_repeated < 0) {\n                max_sum_ending_here_repe",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n        max_element = Math.max(max_element, a[i]);\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    for (let i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    let max_sum = max_so_far;\n    let max_prefix_sum = 0;\n    let max_suffix_sum = 0;\n    for (let i = 0; i < n; i++) {\n        max_prefix_sum += a[i];\n        if (max_prefix_sum < 0) {\n            max_prefix_sum = 0;\n        }\n        if (max_prefix_sum > max_so_far) {\n            max_so_far = max_prefix_sum;\n        }\n    }\n    for (let i = n - 1; i >= 0; i--) {\n        max_suffix_sum += a[i];\n        if (max_suffix_sum < 0) {\n            max_suffix_sum = 0;\n        }\n        if (max_suffix_sum > max_so_far) {\n            max_so_far = max_suffix_sum;\n        }\n    }\n    max_sum = Math.max(max_sum, max_so_far);\n    max_sum = Math.max(max_sum, max_so_far + (k - 2) * sum);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let sum_arr = [];\n    for (let i = 0; i < n; i++) {\n        curr_sum += a[i];\n        sum_arr.push(curr_sum);\n    }\n    for (let i = 0; i < n; i++) {\n        max_sum += a[i];\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        curr_sum = max_wrap;\n        for (let j = 0; j < n; j++) {\n            let index = (i + j) % n;\n            if (j !== 0) {\n                curr_sum += sum_arr[index];\n            }\n            max_sum = Math.max(max_sum, curr_sum);\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n    let i: number;\n    let j: number;\n    let p: number;\n    let q: number;\n    let r: number;\n    let s: number;\n    let t: number;\n    let u: number;\n    let v: number;\n    let w: number;\n    let x: number;\n    let y: number;\n    let z: number;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (j = 0; j < n; j++) {\n        sum += a[j];\n    }\n    max_sum = sum * k;\n    let min_sum = 0;\n    let min_ending_here = 0;\n    let min_so_far = 0;\n    for (p = 0; p < n; p++) {\n        min_ending_here = min_ending_here + a[p];\n        if (min_ending_here > 0) {\n            min_ending_here = 0;\n        }\n        if (min_so_far > min_ending_here) {\n            min_so_far = min_ending_here;\n        }\n    }\n    min_sum = sum * k + min_so_far;\n    let max_wrap = 0;\n    let max_wrap_ending_here = 0;\n    for (q = 0; q < n; q++) {\n        max_wrap_ending_here = max_wrap_ending_here + a",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = a[0];\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far = Math.max(a[i], max_sum_so_far + a[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    if (max_sum < 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    let ans = max_sum + (k - 2) * sum;\n    return Math.max(ans, max_sum);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_so_far = sum;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum + max_so_far;\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_sum - max_so_far;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (let j = 0; j < n; j++) {\n            max_ending_here += a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 0, max_ending_here = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0)\n            max_ending_here = 0;\n        if (max_so_far < max_ending_here)\n            max_so_far = max_ending_here;\n    }\n    if (max_so_far === 0)\n        return max_element;\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n    return Math.max(max_wrap, max_so_far);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (count < k) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n        max_sum = max_sum + max_so_far;\n        max_so_far = 0;\n        max_ending_here = 0;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = 0;\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = max_so_far * k;\n    max_sum = Math.max(max_sum, sum * (k - 2) + max_so_far);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let max_start = 0;\n    let max_end = 0;\n    let max_start_temp = 0;\n    let max_end_temp = 0;\n    let max_so_far_temp = 0;\n    let max_ending_here_temp = 0;\n    let max_sum_temp = 0;\n    let max_sum_temp_2 = 0;\n    let max_sum_temp_3 = 0;\n    let max_sum_temp_4 = 0;\n    let max_sum_temp_5 = 0;\n    let max_sum_temp_6 = 0;\n    let max_sum_temp_7 = 0;\n    let max_sum_temp_8 = 0;\n    let max_sum_temp_9 = 0;\n    let max_sum_temp_10 = 0;\n    let max_sum_temp_11 = 0;\n    let max_sum_temp_12 = 0;\n    let max_sum_temp_13 = 0;\n    let max_sum_temp_14 = 0;\n    let max_sum_temp_15 = 0;\n    let max_sum_temp_16 = 0;\n    let max_sum_temp_17 = 0;\n    let max_sum_temp_18 = 0;\n    let max_sum_temp_19 = 0;\n    let max_sum_temp_20 = 0;\n    let max_sum_temp_21 = 0;\n    let max_sum_temp_22 = 0;\n    let max_sum_temp_23 = 0;\n    let max_sum_temp_24 = 0;\n    let max_sum_temp_25 = 0;\n    let max_sum_temp_26 = 0;\n    let max_sum_temp_27 = 0;\n    let max_sum_temp_28 = 0;\n    let max_sum_temp_29 = 0;\n    let max_sum_temp_30 = 0",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_so_far += a[i];\n    }\n\n    if (max_element < 0) {\n        return max_element * k;\n    }\n\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n\n    let max_result = max_sum * k;\n    let max_possible = max_so_far * k;\n    let prefix_sum = 0;\n    let suffix_sum = 0;\n\n    for (let i = 0; i < n; i++) {\n        prefix_sum += a[i];\n        suffix_sum += a[n - i - 1];\n        max_result = Math.max(max_result, prefix_sum * (k - 1) + suffix_sum);\n    }\n\n    return Math.max(max_result, max_possible);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    let sum = 0;\n\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        sum = sum + a[i];\n    }\n\n    max_sum = max_so_far;\n\n    if (sum > 0) {\n        max_sum = max_sum + (sum * (k - 2));\n    }\n\n    for (i = 0; i < n; i++) {\n        sum = 0;\n        for (j = i; j < n; j++) {\n            sum = sum + a[j];\n            if (sum > max_sum) {\n                max_sum = sum;\n            }\n        }\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n * k; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i % n];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = max_sum_so_far;\n    max_sum_so_far = 0;\n    for (i = 0; i < n; i++) {\n        max_sum_so_far = max_sum_so_far + a[i];\n    }\n    if (max_sum_so_far > max_sum) {\n        max_sum = max_sum_so_far;\n    }\n    max_sum_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    if (max_sum_so_far > max_sum) {\n        max_sum = max_sum_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    return Math.max(max_so_far, max_so_far * k);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far > 0) {\n        max_sum = max_sum + (k - 2) * max_so_far;\n    }\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = Math.max(max_sum, max_so_far);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let sum_so_far = 0;\n    let i = 0;\n    let j = 0;\n    for (i = 0; i < n * k; i++) {\n        sum_so_far += a[i % n];\n        if (sum_so_far > max_sum_so_far) {\n            max_sum_so_far = sum_so_far;\n            j = i;\n        }\n        if (sum_so_far < 0) {\n            sum_so_far = 0;\n        }\n    }\n    sum_so_far = 0;\n    for (i = 0; i <= j; i++) {\n        sum_so_far += a[i % n];\n        if (sum_so_far > max_sum) {\n            max_sum = sum_so_far;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        if (max_element < a[i]) {\n            max_element = a[i];\n        }\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    max_sum = max_sum_so_far;\n    for (let i = 1; i < k; i++) {\n        max_sum_so_far = 0;\n        for (let j = 0; j < n; j++) {\n            max_sum_so_far += a[j];\n            if (max_sum_so_far > max_sum) {\n                max_sum = max_sum_so_far;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let sum = 0;\n    let i = 0;\n    while (i < n) {\n        sum += a[i];\n        if (sum > max_sum_so_far) {\n            max_sum_so_far = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n        i++;\n    }\n    max_sum = max_sum_so_far;\n    let max_wrap_sum = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap_sum += a[i];\n        a[i] = -a[i];\n    }\n    sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n        if (sum > max_sum_so_far) {\n            max_sum_so_far = sum;\n        }\n        if (sum < 0) {\n            sum = 0;\n        }\n    }\n    max_wrap_sum = max_wrap_sum + max_sum_so_far;\n    if (k === 1) {\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap_sum);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let prev_max_ending_here = 0;\n    let prev_max_so_far = 0;\n    let prev_max_sum = 0;\n    let max_sum_k = 0;\n    let max_sum_k_1 = 0;\n    let max_sum_k_2 = 0;\n    let max_sum_k_3 = 0;\n    let max_sum_k_4 = 0;\n    let max_sum_k_5 = 0;\n    let max_sum_k_6 = 0;\n    let max_sum_k_7 = 0;\n    let max_sum_k_8 = 0;\n    let max_sum_k_9 = 0;\n    let max_sum_k_10 = 0;\n    let max_sum_k_11 = 0;\n    let max_sum_k_12 = 0;\n    let max_sum_k_13 = 0;\n    let max_sum_k_14 = 0;\n    let max_sum_k_15 = 0;\n    let max_sum_k_16 = 0;\n    let max_sum_k_17 = 0;\n    let max_sum_k_18 = 0;\n    let max_sum_k_19 = 0;\n    let max_sum_k_20 = 0;\n    let max_sum_k_21 = 0;\n    let max_sum_k_22 = 0;\n    let max_sum_k_23 = 0;\n    let max_sum_k_24 = 0;\n    let max_sum_k_25 = 0;\n    let max_sum_k_26 = 0;\n    let max_sum_k_27 = 0;\n    let max_sum_k_28 = 0;\n    let max_sum_k_29 = 0;\n    let max_sum_k_30 = 0;\n    let max_sum_k_31 = 0;\n    let max_sum_k_32 = 0;\n    let",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = a[0];\n    let i: number;\n\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far += a[i];\n        if (max_sum_so_far < 0) {\n            max_sum_so_far = 0;\n        }\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n\n    if (max_sum === 0) {\n        return max_element;\n    }\n\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n\n    let ans = max_sum + (k - 2) * sum;\n    return Math.max(ans, max_sum);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = a[0];\n\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        if (max_element < a[i]) {\n            max_element = a[i];\n        }\n    }\n\n    if (max_sum_so_far < 0) {\n        return max_element * k;\n    }\n\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_ending_here += a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum < max_sum_ending_here) {\n            max_sum = max_sum_ending_here;\n        }\n    }\n\n    let max_wrap_sum = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap_sum += a[i];\n        max_sum_ending_here += a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum < max_sum_ending_here) {\n            max_sum = max_sum_ending_here;\n        }\n    }\n\n    max_wrap_sum = max_wrap_sum * (k - 2);\n\n    return max_wrap_sum + max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = Math.max(max_so_far, sum * (k - 2) + max_so_far);\n    return max_sum;\n}\n",
    "    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_so_far;\n    return Math.max(max_wrap, max_so_far) / (k - 2);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n        max_so_far = 0;\n        max_ending_here = 0;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (count < k) {\n        max_ending_here = 0;\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let prev_max_sum = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far = max_sum_so_far + a[i];\n        if (max_sum_so_far < 0) {\n            max_sum_so_far = 0;\n        }\n        if (max_sum < max_sum_so_far) {\n            max_sum = max_sum_so_far;\n        }\n    }\n\n    if (k === 1) {\n        return max_sum;\n    }\n\n    let total_sum = 0;\n    for (let i = 0; i < n; i++) {\n        total_sum += a[i];\n        a[i] = -a[i];\n    }\n\n    prev_max_sum = max_sum_so_far = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far = max_sum_so_far + a[i];\n        if (max_sum_so_far > prev_max_sum) {\n            prev_max_sum = max_sum_so_far;\n        }\n    }\n\n    let max_wrap = total_sum + prev_max_sum;\n\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far = Math.max(max_sum_so_far + a[i], a[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    if (max_sum < 0) {\n        return max_element;\n    }\n    let max_wrap = 0;\n    let curr_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        curr_wrap += a[i];\n        if (curr_wrap < 0) {\n            curr_wrap = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_wrap);\n    }\n    let max_sum_k = max_sum + (k - 2) * max_wrap;\n    return Math.max(max_sum_k, max_sum);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    for (let i = 0; i < n; i++) {\n        curr_sum += a[i];\n    }\n    max_sum = curr_sum;\n    for (let i = 0; i < n; i++) {\n        curr_sum += (a[i] * (k - 1));\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_elem = 0;\n    let max_index = 0;\n    let curr_index = 0;\n    for (let i = 0; i < n; i++) {\n        if (a[i] > max_elem) {\n            max_elem = a[i];\n            max_index = i;\n        }\n        curr_sum += a[i];\n        if (curr_sum < 0) {\n            curr_sum = 0;\n            curr_index = i + 1;\n        }\n        if (curr_sum > max_sum) {\n            max_sum = curr_sum;\n        }\n    }\n    if (max_elem < 0) {\n        return max_elem;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let curr_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        curr_wrap += a[i];\n        if (curr_wrap < 0) {\n            curr_wrap = 0;\n        }\n        if (curr_wrap > max_wrap) {\n            max_wrap = curr_wrap;\n        }\n    }\n    let result = Math.max(max_sum, max_wrap * (k - 2));\n    return result;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_element = -Infinity;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        curr_sum += a[i];\n        if (curr_sum < 0) {\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    let curr_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        curr_wrap += a[i];\n        if (curr_wrap < 0) {\n            curr_wrap = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_wrap);\n    }\n    max_wrap = Math.max(max_wrap, 0);\n    return Math.max(max_sum, max_wrap * (k - 2) + max_sum);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum * k;\n    let curr_prefix = 0;\n    let curr_suffix = 0;\n    let max_prefix = 0;\n    let max_suffix = 0;\n    for (let i = 0; i < n; i++) {\n        curr_prefix += a[i];\n        max_prefix = Math.max(max_prefix, curr_prefix);\n    }\n    for (let i = n - 1; i >= 0; i--) {\n        curr_suffix += a[i];\n        max_suffix = Math.max(max_suffix, curr_suffix);\n    }\n    max_sum = Math.max(max_sum, max_prefix + (sum * (k - 2)) + max_suffix);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let l = 0;\n    let r = 0;\n    for (i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            l = j;\n            r = i;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum = max_sum + a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let i = 0;\n    while (i < n) {\n        curr_sum += a[i];\n        if (curr_sum < 0) {\n            curr_sum = 0;\n        }\n        max_sum = Math.max(max_sum, curr_sum);\n        i++;\n    }\n    let max_wrap = 0;\n    let curr_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        curr_wrap += a[i];\n        if (curr_wrap < 0) {\n            curr_wrap = 0;\n        }\n        max_wrap = Math.max(max_wrap, curr_wrap);\n    }\n    if (max_wrap === 0) {\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap + (k - 2) * max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i: number;\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = max_sum_so_far * k;\n    let max_wrap = 0;\n    let max_wrap_so_far = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap_so_far = max_wrap_so_far + a[i];\n        if (max_wrap_so_far < 0) {\n            max_wrap_so_far = 0;\n        }\n        if (max_wrap < max_wrap_so_far) {\n            max_wrap = max_wrap_so_far;\n        }\n    }\n    let min_wrap = 0;\n    let min_wrap_so_far = 0;\n    for (i = 0; i < n; i++) {\n        min_wrap_so_far = min_wrap_so_far + a[i];\n        if (min_wrap_so_far > 0) {\n            min_wrap_so_far = 0;\n        }\n        if (min_wrap > min_wrap_so_far) {\n            min_wrap = min_wrap_so_far;\n        }\n    }\n    let total_sum = 0;\n    for (i = 0; i < n; i++) {\n        total_sum = total_sum + a[i];\n    }\n    max_sum = Math.max(max_sum, max_wrap + min_wrap + total_sum * (k - 2));\n    return max_sum;\n}",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    for (m = 0; m < k; m++) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = -Infinity;\n    let max_ending_here = 0;\n    let max_element = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    return Math.max(max_so_far, sum * k - max_so_far);\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n    let curr_sum_so_far = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n    }\n    max_sum = max_sum_so_far;\n    for (let i = 0; i < n; i++) {\n        curr_sum_so_far += a[i];\n        if (curr_sum_so_far < 0) {\n            curr_sum_so_far = 0;\n        }\n        if (curr_sum_so_far > max_sum_so_far) {\n            max_sum_so_far = curr_sum_so_far;\n        }\n    }\n    for (let i = 2; i <= k; i++) {\n        for (let j = 0; j < n; j++) {\n            curr_sum += a[j];\n            if (curr_sum < 0) {\n                curr_sum = 0;\n            }\n            if (curr_sum > max_sum) {\n                max_sum = curr_sum;\n            }\n        }\n        max_sum += max_sum_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    let m: number;\n    let sum: number;\n    for (i = 0; i < n; i++) {\n        max_ending_here = 0;\n        sum = 0;\n        for (j = i; j < n; j++) {\n            max_ending_here += a[j];\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n        sum += max_so_far;\n    }\n    max_sum = sum * k;\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Math.max(...a);\n    if (max_element < 0) {\n        return max_element;\n    }\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = Math.max(max_sum, sum);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (let j = 0; j < n; j++) {\n            max_ending_here += a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum += a[i];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_sum_so_far = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        curr_sum += a[i % n];\n        if (curr_sum > max_sum_so_far) {\n            max_sum_so_far = curr_sum;\n        }\n        if (curr_sum < 0) {\n            curr_sum = 0;\n        }\n    }\n\n    return max_sum_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (let i = start; i <= end; i++) {\n        max_sum = max_sum + a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = 0;\n    let i: number;\n    let j: number;\n\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (max_so_far === 0) {\n        return max_element;\n    }\n\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n\n    max_sum = sum * k;\n    max_sum = Math.max(max_sum, max_so_far);\n\n    let max_wrap = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap += a[i];\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_sum = Math.max(max_sum, max_wrap + (k - 2) * sum + max_so_far);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * 2; i++) {\n        max_so_far += a[i % n];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n            s = i + 1;\n        }\n        if (max_so_far > max_sum) {\n            max_sum = max_so_far;\n            start = s;\n            end = i;\n        }\n    }\n\n    let result = [];\n    for (let i = start; i <= end; i++) {\n        result.push(a[i % n]);\n    }\n    return result;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (count < k) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                j = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_sum = max_so_far;\n\n    for (let i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        max_ending_here = max_ending_here - a[i - n];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_sum = Math.max(max_sum, max_so_far);\n\n    return max_sum * k;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n; i++) {\n        max_so_far = max_so_far + a[i];\n    }\n    max_sum = max_so_far;\n    for (j = 1; j < k; j++) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n            }\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    for (j = start; j <= end; j++) {\n        max_sum = max_sum + a[j % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    let i = 0;\n    for (i = 0; i < n * k; i++) {\n        max_so_far += a[i % n];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n            s = i + 1;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n            start = s;\n            end = i;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        max_sum = max_element;\n    } else {\n        max_sum = Math.max(max_so_far, max_sum);\n    }\n    for (let i = 1; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_sum = max_sum + a[j];\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = s;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            s = i + 1;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let count = 0;\n    let max_sum_array = [];\n    let max_sum_array_index = [];\n    let max_sum_array_index_start = [];\n    let max_sum_array_index_end = [];\n    let max_sum_array_index_count = [];\n    let max_sum_array_index_start_end = [];\n    let max_sum_array_index_start_end_count = [];\n    let max_sum_array_index_start_end_count_sum = [];\n    let max_sum_array_index_start_end_count_sum_array = [];\n    let max_sum_array_index_start_end_count_sum_array_index = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end_count = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end_count_sum = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end_count_sum_array = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end_count_sum_array_index = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end_count_sum_array_index_start = [];\n    let max_sum_array_index_start_end_count_sum_array_index_start_end_count_sum_array_index_start_end = [];\n    let max_sum_array_index_start_end_count_sum",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    while (i < k) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n        max_so_far = 0;\n        max_ending_here = 0;\n        i++;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0,\n        window_sum = 0,\n        window_start = 0;\n\n    for (let window_end = 0; window_end < n; window_end++) {\n        window_sum += a[window_end];\n        if (window_end >= k - 1) {\n            max_sum = Math.max(max_sum, window_sum);\n            window_sum -= a[window_start];\n            window_start += 1;\n        }\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n    for (let i = 0; i < k; i++) {\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n    return Math.max(max_so_far, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let curr_sum = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    for (i = 0; i < n * k; i++) {\n        curr_sum += a[i % n];\n        if (curr_sum > max_so_far) {\n            max_so_far = curr_sum;\n            start = j;\n            end = i;\n        }\n        if (curr_sum < 0) {\n            curr_sum = 0;\n            j = i + 1;\n        }\n    }\n    for (i = start; i <= end; i++) {\n        max_sum += a[i % n];\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_sum_so_far = Math.max(a[i], max_sum_so_far + a[i]);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    let max_wrap_sum = 0;\n    let curr_wrap_sum = 0;\n    for (let i = 0; i < n; i++) {\n        curr_wrap_sum += a[i];\n        if (curr_wrap_sum < 0) {\n            curr_wrap_sum = 0;\n        }\n        max_wrap_sum = Math.max(max_wrap_sum, curr_wrap_sum);\n    }\n    return Math.max(max_sum, max_wrap_sum * k);\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = max_sum_so_far * k;\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_sum_so_far = 0;\n    max_sum_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_sum_so_far;\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (count < k) {\n        for (i = 0; i < n; i++) {\n            max_ending_here = max_ending_here + a[i];\n            if (max_sum < max_ending_here) {\n                max_sum = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        count++;\n    }\n    return max_sum;\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    let mod_sum = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        mod_sum += a[i];\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    let max_sum = max_so_far;\n    let max_possible_sum = max_so_far;\n\n    for (let i = 2; i <= k; i++) {\n        max_possible_sum = (max_possible_sum + mod_sum);\n        if (max_so_far > 0) {\n            max_so_far = max_so_far + mod_sum;\n        }\n        max_sum = Math.max(max_possible_sum, max_so_far);\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let curr_sum = 0;\n    let max_elem = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        curr_sum += a[i];\n        max_elem = Math.max(max_elem, a[i]);\n    }\n    if (max_elem < 0) {\n        return max_elem;\n    }\n    max_sum = curr_sum;\n    for (let i = 0; i < n; i++) {\n        curr_sum = (curr_sum - a[i] + n * a[i]);\n        max_sum = Math.max(max_sum, curr_sum);\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    let max_wrap = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_so_far;\n    if (max_wrap > max_sum) {\n        max_sum = max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    let max_wrap = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_wrap = max_wrap + max_so_far;\n    if (max_wrap > max_sum) {\n        max_sum = max_wrap;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here += a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    let max_wrap = 0;\n    let curr_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        curr_wrap += a[i];\n        if (curr_wrap > max_wrap) {\n            max_wrap = curr_wrap;\n        }\n    }\n    let min_wrap = 0;\n    let curr_min_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        curr_min_wrap += a[i];\n        if (curr_min_wrap < min_wrap) {\n            min_wrap = curr_min_wrap;\n        }\n    }\n    let total_sum = 0;\n    for (let i = 0; i < n; i++) {\n        total_sum += a[i];\n    }\n    let max_wrap_sum = total_sum - min_wrap;\n    return Math.max(max_sum, max_wrap_sum);\n}\n",
    "    let max_sum: number = 0;\n    let max_so_far: number = 0;\n    let max_element: number = Number.MIN_SAFE_INTEGER;\n    let i: number;\n    let sum: number = 0;\n    for (i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_so_far += a[i];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    let sum_total: number = 0;\n    for (i = 0; i < n; i++) {\n        sum_total += a[i];\n        sum += a[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n        max_so_far = Math.max(max_so_far, sum);\n    }\n    let max_wrap: number = sum_total * k - (sum_total - max_so_far);\n    return Math.max(max_wrap, max_sum);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (let j = 0; j < n; j++) {\n            max_ending_here += a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Number.MIN_SAFE_INTEGER;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        max_element = Math.max(max_element, a[i]);\n    }\n    if (max_so_far === 0) {\n        return max_element;\n    }\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum * k;\n    let curr_prefix = 0;\n    let curr_suffix = 0;\n    for (let i = 0; i < n; i++) {\n        curr_prefix += a[i];\n        curr_suffix += a[n - i - 1];\n        max_sum = Math.max(max_sum, curr_prefix + (sum - curr_prefix) * (k - 1));\n        max_sum = Math.max(max_sum, curr_suffix + (sum - curr_suffix) * (k - 1));\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n\n    while (i < n) {\n        max_sum_ending_here += a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n        i++;\n    }\n\n    max_sum = max_sum_so_far;\n    let sum = max_sum_so_far;\n\n    for (i = 0; i < n; i++) {\n        sum = sum - a[i] + a[i];\n        max_sum_so_far = Math.max(max_sum_so_far, sum);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n\n    let max_wrap = 0;\n    for (i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n\n    max_wrap = max_wrap + max_sub_array_sum_repeated(a, n, 1);\n\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_sum < max_ending_here) {\n            max_sum = max_ending_here;\n        }\n    }\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap = max_wrap + a[i];\n        a[i] = -a[i];\n    }\n    let max_ending_here_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_ending_here_wrap = max_ending_here_wrap + a[i];\n        if (max_ending_here_wrap < 0) {\n            max_ending_here_wrap = 0;\n        }\n        if (max_wrap < max_ending_here_wrap) {\n            max_wrap = max_ending_here_wrap;\n        }\n    }\n    max_wrap = max_wrap + max_wrap;\n    if (k === 1) {\n        return max_sum;\n    }\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let sum = 0;\n    for (i = 0; i < n * k; i++) {\n        max_ending_here = max_ending_here + a[i % n];\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            start = j;\n            end = i;\n        }\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n            j = i + 1;\n        }\n    }\n    for (i = start; i <= end; i++) {\n        sum += a[i % n];\n    }\n    return sum;\n}\n",
    "    let max_so_far: number = 0;\n    let max_ending_here: number = 0;\n    let max_element: number = Number.MIN_SAFE_INTEGER;\n    let sum: number = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        sum += a[i];\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    let max_wrap = 0;\n    for (let i = 0; i < n; i++) {\n        max_wrap += a[i];\n        a[i] = -a[i];\n    }\n\n    max_wrap = max_wrap + max_sub_array_sum(a, n);\n\n    return Math.max(max_so_far, max_wrap * (k - 2));\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        max_element = Math.max(max_element, a[i]);\n    }\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    max_sum = max_sum_so_far;\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far = max_sum_so_far - a[i] + a[i];\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n\n    max_sum = Math.max(max_sum, max_sum_so_far * (k - 2));\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = Math.max(...a);\n\n    if (max_element < 0) {\n        return max_element;\n    }\n\n    for (let i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_sum = max_so_far * k;\n\n    let prefix_sum = 0;\n    let suffix_sum = 0;\n    let curr_sum = 0;\n\n    for (let i = 0; i < n; i++) {\n        curr_sum += a[i];\n        prefix_sum = Math.max(prefix_sum, curr_sum);\n    }\n\n    curr_sum = 0;\n    for (let i = n - 1; i >= 0; i--) {\n        curr_sum += a[i];\n        suffix_sum = Math.max(suffix_sum, curr_sum);\n    }\n\n    let ans = Math.max(max_sum, prefix_sum + suffix_sum + (k - 2) * max_so_far);\n    return ans;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0)\n                max_ending_here = 0;\n            if (max_so_far < max_ending_here)\n                max_so_far = max_ending_here;\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let max_element = a[0];\n    for (let i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n        if (max_element < a[i]) {\n            max_element = a[i];\n        }\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    max_sum = max_sum_so_far * k;\n    let sum_of_array = 0;\n    for (let i = 0; i < n; i++) {\n        sum_of_array += a[i];\n    }\n    let max_wrap = sum_of_array * (k - 2);\n    max_wrap += max_sum_so_far;\n    return Math.max(max_sum, max_wrap);\n}\n",
    "    let max_so_far = 0;\n    let max_ending_here = 0;\n    let max_element = a[0];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n        sum += a[i];\n    }\n    if (max_element < 0) {\n        return max_element * k;\n    }\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    let max_sum = max_so_far;\n    for (i = 2; i <= k; i++) {\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n    }\n    if (sum < 0) {\n        return max_element;\n    }\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far * k;\n    max_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n            j = i;\n        }\n    }\n    let sum_wrap = 0;\n    for (i = j + 1; i < n; i++) {\n        sum_wrap += a[i];\n    }\n    max_sum = Math.max(max_sum, sum_wrap);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n        max_element = Math.max(max_element, a[i]);\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if (max_so_far === 0) {\n        return max_element;\n    }\n\n    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += a[i];\n    }\n\n    max_sum = max_so_far * k;\n    max_sum = Math.max(max_sum, sum * (k - 2) + max_so_far);\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let max_element = a[0];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n        sum += a[i];\n    }\n    if (max_element < 0) {\n        return max_element * k;\n    }\n    for (i = 0; i < n; i++) {\n        max_ending_here = max_ending_here + a[i];\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n    }\n    max_sum = max_so_far;\n    for (i = 2; i <= k; i++) {\n        max_so_far = 0;\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum: number = 0;\n    let max_so_far: number = 0;\n    let max_ending_here: number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let start: number = 0;\n    let end: number = 0;\n    let s: number = 0;\n\n    for (i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i: number;\n    let j: number;\n    let sum: number;\n\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = 0;\n        sum = 0;\n        for (j = i; j < n; j++) {\n            sum += a[j];\n            max_sum_ending_here = Math.max(max_sum_ending_here + a[j], a[j]);\n            max_sum = Math.max(max_sum, max_sum_ending_here);\n        }\n        max_sum_so_far = Math.max(max_sum_so_far, sum);\n    }\n    return Math.max(max_sum, max_sum_so_far * k);\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_element = 0;\n    let sum_so_far = 0;\n    let i = 0;\n    let j = 0;\n    let sum_array = [];\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] > max_element) {\n            max_element = a[i];\n        }\n        sum += a[i];\n        sum_array.push(sum);\n    }\n    if (max_element < 0) {\n        return max_element;\n    }\n    for (i = 0; i < n; i++) {\n        sum_so_far = 0;\n        for (j = i; j < n; j++) {\n            sum_so_far += a[j];\n            if (sum_so_far > max_so_far) {\n                max_so_far = sum_so_far;\n            }\n        }\n    }\n    max_sum = max_so_far;\n    for (i = 1; i < k; i++) {\n        max_so_far = 0;\n        for (j = 0; j < n; j++) {\n            sum_so_far = 0;\n            for (let l = j; l < n; l++) {\n                sum_so_far += a[l];\n                if (sum_so_far > max_so_far) {\n                    max_so_far = sum_so_far;\n                }\n            }\n        }\n        max_sum += max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let i: number;\n    let j: number;\n    for (i = 0; i < k; i++) {\n        max_so_far = 0;\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n            }\n        }\n        max_sum = max_sum + max_so_far;\n    }\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_ending_here = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (let j = 0; j < n; j++) {\n            max_ending_here = max_ending_here + a[j];\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = j;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = j + 1;\n            }\n        }\n    }\n    return max_so_far;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let max_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let start = 0;\n    let end = 0;\n    let temp = 0;\n    let max_sum_array = [];\n\n    for (i = 0; i < k; i++) {\n        max_ending_here = 0;\n        for (j = 0; j < n; j++) {\n            max_ending_here += a[j];\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                temp = j + 1;\n            }\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = temp;\n                end = j;\n            }\n        }\n        if (i == 0) {\n            max_sum = max_so_far;\n        } else {\n            max_sum = Math.max(max_sum, max_so_far);\n        }\n        if (max_so_far == 0) {\n            break;\n        }\n        max_so_far = 0;\n    }\n    for (i = start; i <= end; i++) {\n        max_sum_array.push(a[i]);\n    }\n    console.log(max_sum_array);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_element = 0;\n    let sum_of_all_elements = 0;\n\n    for (let i = 0; i < n; i++) {\n        max_sum_so_far += a[i];\n        max_element = Math.max(max_element, a[i]);\n        sum_of_all_elements += a[i];\n    }\n\n    max_sum_so_far = Math.max(max_sum_so_far, max_element);\n\n    if (max_sum_so_far < 0) {\n        return max_sum_so_far;\n    }\n\n    max_sum = max_sum_so_far;\n\n    for (let i = 1; i < k; i++) {\n        max_sum_so_far = (max_sum_so_far + sum_of_all_elements);\n        max_sum = Math.max(max_sum, max_sum_so_far);\n    }\n\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    for (i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    max_sum = sum;\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here += a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = Math.max(max_sum, max_sum_so_far);\n    max_sum_so_far = 0;\n    max_sum_ending_here = 0;\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here += a[i];\n        if (max_sum_ending_here > 0) {\n            max_sum_ending_here = 0;\n        }\n        if (max_sum_so_far > max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n        }\n    }\n    max_sum = Math.max(max_sum, sum * (k - 2) + max_sum_so_far);\n    return max_sum;\n}\n",
    "    let max_sum = 0;\n    let max_so_far = 0;\n    let start = 0;\n    let end = 0;\n    let s = 0;\n\n    for (let i = 0; i < n * 2; i++) {\n        max_so_far += a[i % n];\n        if (max_so_far < 0) {\n            max_so_far = 0;\n            s = i + 1;\n        }\n        if (max_sum < max_so_far) {\n            max_sum = max_so_far;\n            start = s;\n            end = i;\n        }\n    }\n\n    let result = 0;\n    for (let i = start; i <= end; i++) {\n        result += a[i % n];\n    }\n    return result;\n}\n",
    "    let max_sum = 0;\n    let max_sum_so_far = 0;\n    let max_sum_ending_here = 0;\n    let i = 0;\n    let j = 0;\n    let m = 0;\n    let start = 0;\n    let end = 0;\n    let start_temp = 0;\n    let end_temp = 0;\n    for (i = 0; i < n; i++) {\n        max_sum_ending_here = max_sum_ending_here + a[i];\n        if (max_sum_ending_here < 0) {\n            max_sum_ending_here = 0;\n            start_temp = i + 1;\n        }\n        if (max_sum_so_far < max_sum_ending_here) {\n            max_sum_so_far = max_sum_ending_here;\n            start = start_temp;\n            end = i;\n        }\n    }\n    max_sum = max_sum_so_far;\n    for (m = 1; m < k; m++) {\n        for (j = 0; j < n; j++) {\n            max_sum_ending_here = max_sum_ending_here + a[j];\n            if (max_sum_ending_here < 0) {\n                max_sum_ending_here = 0;\n                start_temp = j + 1;\n            }\n            if (max_sum_so_far < max_sum_ending_here) {\n                max_sum_so_far = max_sum_ending_here;\n                start = start_temp;\n                end = j;\n            }\n        }\n        max_sum = max_sum + max_sum_so_far;\n    }\n    return max_sum;\n}\n"
  ]
}
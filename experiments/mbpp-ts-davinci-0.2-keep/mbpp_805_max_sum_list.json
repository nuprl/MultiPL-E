{
  "name": "mbpp_805_max_sum_list",
  "language": "ts",
  "prompt": "//Write a function that returns the list in a list of lists whose sum of elements is the highest.\nfunction max_sum_list(lists: number[][]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_sum_list;\n  assert.deepEqual(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]),[10, 11, 12]);\n  assert.deepEqual(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]),[12, 11, 10]);\n  assert.deepEqual(candidate([[2, 3, 1]]),[2, 3, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max = 0;\n    let max_list = [];\n    for (let i = 0; i < lists.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max) {\n            max = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "  let max_sum = 0;\n  let max_list = [];\n  for (let i = 0; i < lists.length; i++) {\n    let sum = 0;\n    for (let j = 0; j < lists[i].length; j++) {\n      sum += lists[i][j];\n    }\n    if (sum > max_sum) {\n      max_sum = sum;\n      max_list = lists[i];\n    }\n  }\n  return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum = 0;\n    let max_list = [];\n    for (let i = 0; i < lists.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum = 0;\n    let max_sum_list = [];\n    for (let i = 0; i < lists.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = lists[i];\n        }\n    }\n    return max_sum_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_sum_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = lists[i];\n        }\n    }\n    return max_sum_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_sum_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = lists[i];\n        }\n    }\n    return max_sum_list;\n}\n",
    "  let max = 0;\n  let max_list: number[] = [];\n  for (let i = 0; i < lists.length; i++) {\n    let sum = 0;\n    for (let j = 0; j < lists[i].length; j++) {\n      sum += lists[i][j];\n    }\n    if (sum > max) {\n      max = sum;\n      max_list = lists[i];\n    }\n  }\n  return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_sum_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = lists[i];\n        }\n    }\n    return max_sum_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_sum_list: number[] = [];\n    lists.forEach(function (list: number[]) {\n        let sum: number = 0;\n        list.forEach(function (num: number) {\n            sum += num;\n        });\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = list;\n        }\n    });\n    return max_sum_list;\n}\n",
    "    let max_sum = 0;\n    let max_list = [];\n    for (let list of lists) {\n        let sum = 0;\n        for (let num of list) {\n            sum += num;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_list = lists[i];\n        }\n    }\n    return max_list;\n}\n",
    "    let max_sum: number = 0;\n    let max_sum_list: number[] = [];\n    for (let i: number = 0; i < lists.length; i++) {\n        let sum: number = 0;\n        for (let j: number = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = lists[i];\n        }\n    }\n    return max_sum_list;\n}\n",
    "    let max_sum = 0;\n    let max_sum_list = [];\n    for (let i = 0; i < lists.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < lists[i].length; j++) {\n            sum += lists[i][j];\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n            max_sum_list = lists[i];\n        }\n    }\n    return max_sum_list;\n}\n"
  ]
}
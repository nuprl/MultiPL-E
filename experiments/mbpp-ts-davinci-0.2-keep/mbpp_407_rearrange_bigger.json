{
  "name": "mbpp_407_rearrange_bigger",
  "language": "ts",
  "prompt": "//Write a function to create the next bigger number by rearranging the digits of a given number.\nfunction rearrange_bigger(n: number): any {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = rearrange_bigger;\n  assert.deepEqual(candidate(12),21);\n  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(102),120);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\nconsole.log(rearrange_bigger(1234));\nconsole.log(rearrange_bigger(4321));\nconsole.log(rearrange_bigger(534976));\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let digits = n.toString().split('');\n    let i = digits.length - 1;\n    while (i > 0 && digits[i - 1] >= digits[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = digits.length - 1;\n    while (digits[j] <= digits[i - 1]) {\n        j--;\n    }\n    let temp = digits[i - 1];\n    digits[i - 1] = digits[j];\n    digits[j] = temp;\n    j = digits.length - 1;\n    while (i < j) {\n        temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(digits.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let nums: number[] = n.toString().split('').map(Number);\n    let i: number = nums.length - 1;\n    while (i > 0 && nums[i - 1] >= nums[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j: number = nums.length - 1;\n    while (nums[j] <= nums[i - 1]) {\n        j--;\n    }\n    let temp: number = nums[i - 1];\n    nums[i - 1] = nums[j];\n    nums[j] = temp;\n    j = nums.length - 1;\n    while (i < j) {\n        temp = nums[i];\n        nums[i] = nums[j];\n        nums[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(nums.join(''));\n}\n",
    "    let digits = n.toString().split('');\n    let i = digits.length - 1;\n    while (i > 0 && digits[i - 1] >= digits[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = digits.length - 1;\n    while (digits[j] <= digits[i - 1]) {\n        j--;\n    }\n    let temp = digits[i - 1];\n    digits[i - 1] = digits[j];\n    digits[j] = temp;\n    j = digits.length - 1;\n    while (i < j) {\n        temp = digits[i];\n        digits[i] = digits[j];\n        digits[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(digits.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_big",
    "    let n_str = n.toString();\n    let n_arr = n_str.split(\"\");\n    let n_arr_sorted = n_arr.sort((a, b) => b - a);\n    let n_arr_sorted_str = n_arr_sorted.join(\"\");\n    let n_sorted = parseInt(n_arr_sorted_str);\n    if (n_sorted === n) {\n        return -1;\n    } else {\n        return n_sorted;\n    }\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('').map(Number);\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) return -1;\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "    let arr = n.toString().split('');\n    let i = arr.length - 1;\n    while (i > 0 && arr[i - 1] >= arr[i]) {\n        i--;\n    }\n    if (i <= 0) {\n        return -1;\n    }\n    let j = arr.length - 1;\n    while (arr[j] <= arr[i - 1]) {\n        j--;\n    }\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j];\n    arr[j] = temp;\n    j = arr.length - 1;\n    while (i < j) {\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j--;\n    }\n    return parseInt(arr.join(''));\n}\n",
    "  let arr = n.toString().split('');\n  let i = arr.length - 1;\n  while (i > 0 && arr[i - 1] >= arr[i]) {\n    i--;\n  }\n  if (i <= 0) {\n    return -1;\n  }\n  let j = arr.length - 1;\n  while (arr[j] <= arr[i - 1]) {\n    j--;\n  }\n  let temp = arr[i - 1];\n  arr[i - 1] = arr[j];\n  arr[j] = temp;\n  j = arr.length - 1;\n  while (i < j) {\n    temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n    i++;\n    j--;\n  }\n  return parseInt(arr.join(''));\n}\n\nconsole.log(rearrange_bigger(123456798));\nconsole.log(rearrange_bigger(123456789));\nconsole.log(rearrange_bigger(1234567908));\n",
    "    let n_str = n.toString();\n    let n_arr = n_str.split('');\n    let n_arr_num = n_arr.map(Number);\n    let n_arr_num_sorted = n_arr_num.sort((a, b) => b - a);\n    let n_arr_num_sorted_str = n_arr_num_sorted.join('');\n    let n_arr_num_sorted_num = parseInt(n_arr_num_sorted_str);\n    if (n_arr_num_sorted_num > n) {\n        return n_arr_num_sorted_num;\n    } else {\n        return -1;\n    }\n}\n"
  ]
}
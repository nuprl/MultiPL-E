{
  "name": "mbpp_167_next_power_of_2",
  "language": "ts",
  "prompt": "//Write a python function to find the smallest power of 2 greater than or equal to n.\nfunction next_power_of_2(n: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = next_power_of_2;\n  assert.deepEqual(candidate(0),1);\n  assert.deepEqual(candidate(5),8);\n  assert.deepEqual(candidate(17),32);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n\nconsole.log(next_power_of_2(4));\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(15));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1)))\n        return n;\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1)))\n        return n;\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n !== 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(15));\nconsole.log(next_power_of_2(16));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(15));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(17));\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    let result = 1;\n    while (result < n) {\n        result = Math.pow(2, i);\n        i++;\n    }\n    return result;\n}\n\nconsole.log(next_power_of_2(10));\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n !== 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log(n) / Math.log(2)));\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(12));\nconsole.log(next_power_of_2(50));\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    if (n < 0) {\n        throw \"n must be a positive integer\";\n    }\n    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(262144));\nconsole.log(next_power_of_2(524288));\nconsole.log(next_power_of_2(1048576));\nconsole.log(next_power_of_2(2097152));\nconsole.log(next_power_of_2(4194304));\nconsole.log(next_power_of_2(8388608));\nconsole.log(next_power_of_2(16777216));\nconsole.log(next_power_of_2(33554432));\nconsole.log(next_power_of_2(67108864));\nconsole.log(next_power_of_2(134217728));\nconsole.log(next_power_of_2(268435456));\nconsole.log(next_power_of_2(536870912));\nconsole.log(next",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    else if (n & (n - 1) === 0) {\n        return n;\n    }\n    else {\n        while (n & (n - 1) > 0) {\n            n &= (n - 1);\n        }\n        return n << 1;\n    }\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let i = 0;\n    while (n > Math.pow(2, i)) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(4));\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(33));\nconsole.log(next_power_of_2(0));\nconsole.log(next_power_of_2(1));\nconsole.log(next_power_of_2(2));\nconsole.log(next_power_of_2(3));\nconsole.log(next_power_of_2(6));\nconsole.log(next_power_of_2(7));\nconsole.log(next_power_of_2(8));\nconsole.log(next_power_of_2(9));\nconsole.log(next_power_of_2(10));\nconsole.log(next_power_of_2(11));\nconsole.log(next_power_of_2(12));\nconsole.log(next_power_of_2(13));\nconsole.log(next_power_of_2(14));\nconsole.log(next_power_of_2(15));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(17));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(19));\nconsole.log(next_power_of_2(20));\nconsole.log(next_power_of_2(21));\nconsole.log(next_power_of_2(22));\nconsole.log(next_power_of_2(23));\nconsole.log(next_power_of_2(24));\nconsole.log(next_power_of_2(25));\nconsole.log(next_power_of_2(26));\nconsole.log(next_power_of_",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(24));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n !== 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    else if (n & (n - 1) === 0) {\n        return n;\n    }\n    else {\n        while (n & (n - 1) > 0) {\n            n &= (n - 1);\n        }\n        return n << 1;\n    }\n}\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(32));\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(262144));\nconsole.log(next_power_of_2(524288));\nconsole.log(next_power_of_2(1048576));\nconsole.log(next_power_of_2(2097152));\nconsole.log(next_power_of_2(4194304));\nconsole.log(next_power_of_2(8388608));\nconsole.log(next_power_of_2(16777216));\nconsole.log(next_power_of_2(33554432));\nconsole.log(next_power_of_2(67108864));\nconsole.log(next_power_of_2(134217728));\nconsole.log(next_power_of_2(268435456));\nconsole.log(next_power_of_2(536870912));\nconsole.log(next",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    let power = 0;\n    while (n !== 1) {\n        n = n >> 1;\n        power += 1;\n    }\n    return 1 << power;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n !== 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    if (n === 0) {\n        return 1;\n    }\n    let count = 0;\n    while (n !== 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n !== 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(262144));\nconsole.log(next_power_of_2(524288));\nconsole.log(next_power_of_2(1048576));\nconsole.log(next_power_of_2(2097152));\nconsole.log(next_power_of_2(4194304));\nconsole.log(next_power_of_2(8388608));\nconsole.log(next_power_of_2(16777216));\nconsole.log(next_power_of_2(33554432));\nconsole.log(next_power_of_2(67108864));\nconsole.log(next_power_of_2(134217728));\nconsole.log(next_power_of_2(268435456));\nconsole.log(next_power_of_2(536870912));\nconsole.log",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(6));\nconsole.log(next_power_of_2(7));\nconsole.log(next_power_of_2(8));\nconsole.log(next_power_of_2(9));\nconsole.log(next_power_of_2(10));\nconsole.log(next_power_of_2(11));\nconsole.log(next_power_of_2(12));\nconsole.log(next_power_of_2(13));\nconsole.log(next_power_of_2(14));\nconsole.log(next_power_of_2(15));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(17));\nconsole.log(next_power_of_2(18));\nconsole.log(next_power_of_2(19));\nconsole.log(next_power_of_2(20));\nconsole.log(next_power_of_2(21));\nconsole.log(next_power_of_2(22));\nconsole.log(next_power_of_2(23));\nconsole.log(next_power_of_2(24));\nconsole.log(next_power_of_2(25));\nconsole.log(next_power_of_2(26));\nconsole.log(next_power_of_2(27));\nconsole.log(next_power_of_2(28));\nconsole.log(next_power_of_2(29));\nconsole.log(next_power_of_2(30));\nconsole.log(next_power_of_2(31));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(33));\nconsole.log(next_power_of_",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(6));\nconsole.log(next_power_of_2(8));\nconsole.log(next_power_of_2(16));\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(10));\nconsole.log(next_power_of_2(15));\nconsole.log(next_power_of_2(20));\nconsole.log(next_power_of_2(25));\nconsole.log(next_power_of_2(30));\nconsole.log(next_power_of_2(35));\nconsole.log(next_power_of_2(40));\nconsole.log(next_power_of_2(45));\nconsole.log(next_power_of_2(50));\nconsole.log(next_power_of_2(55));\nconsole.log(next_power_of_2(60));\nconsole.log(next_power_of_2(65));\nconsole.log(next_power_of_2(70));\nconsole.log(next_power_of_2(75));\nconsole.log(next_power_of_2(80));\nconsole.log(next_power_of_2(85));\nconsole.log(next_power_of_2(90));\nconsole.log(next_power_of_2(95));\nconsole.log(next_power_of_2(100));\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(12));\nconsole.log(next_power_of_2(50));\n",
    "    if (n <= 0) {\n        return 0;\n    }\n    else {\n        return Math.pow(2, Math.ceil(Math.log2(n)));\n    }\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1)))\n        return n;\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    var count = 0;\n    if (n && !(n & (n - 1)))\n        return n;\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(17));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(33));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(65));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(129));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(257));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(513));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(1025));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(2049));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(4097));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(8193));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(16385));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(32769));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(65537));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(131073));\nconsole",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    let p = 1;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (p < n) {\n        p <<= 1;\n    }\n    return p;\n}\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log2(n)));\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let count = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n",
    "    return Math.pow(2, Math.ceil(Math.log(n) / Math.log(2)));\n}\n",
    "    let power = 1;\n    while (power < n) {\n        power *= 2;\n    }\n    return power;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    let i: number = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let p = 1;\n    while (p < n) {\n        p *= 2;\n    }\n    return p;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (n > Math.pow(2, i)) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let count: number = 0;\n    if (n && !(n & (n - 1))) {\n        return n;\n    }\n    while (n != 0) {\n        n >>= 1;\n        count += 1;\n    }\n    return 1 << count;\n}\n\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(32));\nconsole.log(next_power_of_2(64));\nconsole.log(next_power_of_2(128));\nconsole.log(next_power_of_2(256));\nconsole.log(next_power_of_2(512));\nconsole.log(next_power_of_2(1024));\nconsole.log(next_power_of_2(2048));\nconsole.log(next_power_of_2(4096));\nconsole.log(next_power_of_2(8192));\nconsole.log(next_power_of_2(16384));\nconsole.log(next_power_of_2(32768));\nconsole.log(next_power_of_2(65536));\nconsole.log(next_power_of_2(131072));\nconsole.log(next_power_of_2(262144));\nconsole.log(next_power_of_2(524288));\nconsole.log(next_power_of_2(1048576));\nconsole.log(next_power_of_2(2097152));\nconsole.log(next_power_of_2(4194304));\nconsole.log(next_power_of_2(8388608));\nconsole.log(next_power_of_2(16777216));\nconsole.log(next_power_of_2(33554432));\nconsole.log(next_power_of_2(67108864));\nconsole.log(next_power_of_2(134217728));\nconsole.log(next_power_of_2(268435456));\nconsole.log(next_power_of_2(536870912));\nconsole.",
    "    return Math.pow(2, Math.ceil(Math.log(n) / Math.log(2)));\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (Math.pow(2, i) < n) {\n        i++;\n    }\n    return Math.pow(2, i);\n}\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i = i * 2;\n    }\n    return i;\n}\nconsole.log(next_power_of_2(5));\nconsole.log(next_power_of_2(15));\nconsole.log(next_power_of_2(16));\nconsole.log(next_power_of_2(17));\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n",
    "    let i = 1;\n    while (i < n) {\n        i *= 2;\n    }\n    return i;\n}\n",
    "    let result = 1;\n    while (result < n) {\n        result *= 2;\n    }\n    return result;\n}\n"
  ]
}
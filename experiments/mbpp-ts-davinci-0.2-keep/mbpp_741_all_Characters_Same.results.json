{
  "name": "mbpp_741_all_Characters_Same",
  "language": "ts",
  "prompt": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i + 1]) {\n            count++;\n        }\n    }\n    if (count == s.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaaaa\"));\nconsole.log(all_Characters_Same(\"abcde\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\nconsole.log(all_Characters_Same('aaa'));\nconsole.log(all_Characters_Same('abc'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let s_array = s.split('');\n    let flag = true;\n    for (let i = 0; i < s_array.length; i++) {\n        if (s_array[i] != s_array[0]) {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size === 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    if (s.length == 0) {\n        return true;\n    }\n    let first_Char = s.charAt(0);\n    for (let i = 1; i < s.length; i++) {\n        if (first_Char != s.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s.charAt(i) != s.charAt(0)) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split(\"\").every((val, i, arr) => val === arr[0]);\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(char => char === s[0]);\n}\n\nconsole.log(all_Characters_Same('aaa'));\nconsole.log(all_Characters_Same('abc'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s.charAt(i) != s.charAt(i + 1)) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s).size <= 1);\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"bbb\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size <= 1)\n}\n\nconsole.log(all_Characters_Same('aaa'))\nconsole.log(all_Characters_Same('abc'))\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s).size <= 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            result = false;\n            break;\n        }\n    }\n    return result;\n}\n\nconsole.log(all_Characters_Same(\"aaaaa\"));\nconsole.log(all_Characters_Same(\"abcde\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(char => char === s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i <= j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s.charAt(i) != s.charAt(i + 1)) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    if (s.length == 0) {\n        return true;\n    }\n    let first_char = s.charAt(0);\n    for (let i = 1; i < s.length; i++) {\n        if (s.charAt(i) != first_char) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let first_char = s.charAt(0);\n    for (let i = 1; i < s.length; i++) {\n        if (s.charAt(i) != first_char) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s.charAt(i) != s.charAt(0)) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var j: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        for (j = i + 1; j < s.length; j++) {\n            if (s[i] != s[j]) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    if (s.length == 0) {\n        return true;\n    }\n    let first_char = s.charAt(0);\n    for (let i = 1; i < s.length; i++) {\n        if (s.charAt(i) != first_char) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i + 1]) {\n            count++;\n        }\n    }\n    if (count == s.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaaaa\"));\nconsole.log(all_Characters_Same(\"abcde\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    if (s.length == 0) {\n        return true;\n    }\n    let first = s[0];\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != first) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s).size <= 1);\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"bbb\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i + 1]) {\n            count++;\n        }\n    }\n    if (count === s.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length) {\n        if (s.charAt(i) != s.charAt(0)) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size === 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    if (s.length == 0) {\n        return true;\n    }\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"\"));\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\nconsole.log(all_Characters_Same('aaa'));\nconsole.log(all_Characters_Same('abc'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size === 1)\n}\n\nconsole.log(all_Characters_Same('aaa'))\nconsole.log(all_Characters_Same('aab'))\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(char => char === s[0]);\n}\nconsole.log(all_Characters_Same('aaa'));\nconsole.log(all_Characters_Same('abc'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s.charAt(i) != s.charAt(0)) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i: number = 1; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let s1 = s.split(\"\");\n    let s2 = s1.filter(function(val, i, arr){\n        return val !== arr[0];\n    });\n    return s2.length === 0;\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"bbb\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i + 1]) {\n            count++;\n        }\n    }\n    if (count == s.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "../../../../tmp/tmprskjgn5z.ts(16,1694): error TS1002: Unterminated string literal.\n../../../../tmp/tmprskjgn5z.ts(17,1): error TS1005: ',' expected.\n../../../../tmp/tmprskjgn5z.ts(17,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    if (s.length == 0) {\n        return true;\n    }\n    let first_char = s[0];\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != first_char) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n = s.length;\n    for (let i = 1; i < n; i++)\n        if (s.charAt(i) != s.charAt(0))\n            return false;\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[0] == s[i]) {\n            count++;\n        }\n    }\n    if (count == s.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    let i: number = 0;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"aaa\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "false\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size <= 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] !== s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let arr = s.split(\"\");\n    let flag = true;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] != arr[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 0; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var j: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        for (j = i + 1; j < s.length; j++) {\n            if (s[i] != s[j]) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[0] === s[i]) {\n            count++;\n        }\n    }\n    if (count === s.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaaaa\"));\nconsole.log(all_Characters_Same(\"abcba\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s).size <= 1);\n}\n\nconsole.log(all_Characters_Same('aaaaa'));\nconsole.log(all_Characters_Same('aaaab'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 0; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nlet s: string = \"aaaaa\";\nconsole.log(all_Characters_Same(s));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var j: number;\n    for (i = 0; i < s.length; i++) {\n        for (j = i + 1; j < s.length; j++) {\n            if (s[i] != s[j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\nlet s: string = \"abcba\";\nconsole.log(all_Characters_Same(s));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let l = s.length;\n    for (let i = 0; i < l; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++)\n        if (s[i] != s[0])\n            return false;\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\nconsole.log(all_Characters_Same('aaa'));\nconsole.log(all_Characters_Same('abc'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s.charAt(i) != s.charAt(0)) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[0] == s[i]) {\n            count++;\n        }\n    }\n    if (count == s.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaaaa\"));\nconsole.log(all_Characters_Same(\"aaaab\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n = s.length;\n    for (let i = 1; i < n; i++)\n        if (s[i] != s[0])\n            return false;\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n = s.length;\n    if (n == 0) {\n        return true;\n    }\n    for (let i = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count: number = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[0] == s[i]) {\n            count++;\n        }\n    }\n    if (count == s.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\nconsole.log(all_Characters_Same(\"bbb\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i + 1]) {\n            count++;\n        }\n    }\n    if (count == s.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 0; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i + 1]) {\n            count++;\n        }\n    }\n    if (count == s.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_Characters_Same(\"aaaaa\"));\nconsole.log(all_Characters_Same(\"abcde\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every((char) => char === s[0]);\n}\n\nconsole.log(all_Characters_Same('aaa'));\nconsole.log(all_Characters_Same('abc'));\nconsole.log(all_Characters_Same('b'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\ntrue\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return s.split('').every(c => c === s[0]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let first_char = s.charAt(0);\n    for (let i = 0; i < s.length; i++) {\n        if (s.charAt(i) != first_char) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s.charAt(i) != s.charAt(0)) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122484,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let c = s.charAt(0);\n    for (let i = 0; i < s.length; i++) {\n        if (s.charAt(i) != c) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(all_Characters_Same(\"aaaa\"));\nconsole.log(all_Characters_Same(\"aaaab\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var j: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        for (j = i + 1; j < s.length; j++) {\n            if (s.charAt(i) != s.charAt(j)) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\nvar str: string = \"aaaaa\";\nvar res: boolean = all_Characters_Same(str);\nif (res == true) {\n    console.log(\"All characters are same\");\n}\nelse {\n    console.log(\"All characters are not same\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "All characters are same\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0])\n            return false;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    var i: number;\n    var j: number;\n    var flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        for (j = i + 1; j < s.length; j++) {\n            if (s.charAt(i) != s.charAt(j)) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\nvar s: string = \"aaaaa\";\nvar result: boolean = all_Characters_Same(s);\nif (result == true) {\n    console.log(\"All characters are same\");\n}\nelse {\n    console.log(\"All characters are not same\");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "All characters are same\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    let i: number = 0;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size === 1)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let result: boolean = true;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            result = false;\n        }\n    }\n    return result;\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 1; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = false;\n    for (i = 0; i < s.length; i++) {\n        if (s[0] == s[i]) {\n            flag = true;\n        }\n        else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s.charAt(i) != s.charAt(i + 1)) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let result: boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            result = false;\n            break;\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s).size <= 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122472,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i = 0; i < s.length - 1; i++) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s.charAt(i) != s.charAt(i + 1)) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++)\n        if (s[i] != s[0])\n            return false;\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122483,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    return (new Set(s.split('')).size == 1)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[0] != s[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let flag: boolean = true;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let n: number = s.length;\n    for (let i: number = 1; i < n; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    let i: number = 0;\n    while (i < s.length - 1) {\n        if (s[i] != s[i + 1]) {\n            flag = false;\n            break;\n        }\n        i++;\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122478,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number = 0;\n    let j: number = s.length - 1;\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let flag: boolean = true;\n    for (let i: number = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let i: number;\n    for (i = 0; i < s.length; i++) {\n        if (s[i] != s[0]) {\n            return false;\n        }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a python function to check whether all the characters are same or not.\nfunction all_Characters_Same(s: string): boolean {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[0] === s[i]) {\n            count++;\n        }\n    }\n    if (count === s.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(all_Characters_Same(\"aaa\"));\nconsole.log(all_Characters_Same(\"abc\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_Characters_Same;\n  assert.deepEqual(candidate(\"python\"),false);\n  assert.deepEqual(candidate(\"aaa\"),true);\n  assert.deepEqual(candidate(\"data\"),false);\n}\n\ntest();",
      "timestamp": 1666122486,
      "stdout": "true\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_784_mul_even_odd",
  "language": "ts",
  "prompt": "//Write a function to find the product of first even and odd number of a given list.\nfunction mul_even_odd(list1: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet mul: number = mul_even_odd(list1);\nconsole.log(mul);\n",
    "  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 == 0) {\n      even = list1[i];\n      break;\n    }\n  }\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 != 0) {\n      odd = list1[i];\n      break;\n    }\n  }\n  return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (i % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconsole.log(\"The product of first even and odd number of a given list is: \" + mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 1;\n    let odd_num: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = even_num * list1[i];\n        }\n        else {\n            odd_num = odd_num * list1[i];\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            if (count == 0) {\n                even_num = list1[i];\n                count++;\n            }\n        }\n        else {\n            if (count == 1) {\n                odd_num = list1[i];\n                count++;\n            }\n        }\n    }\n    return even_num * odd_num;\n}\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = odd * list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\n",
    "    let even_num = 0;\n    let odd_num = 0;\n    let count = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            if (count == 0) {\n                even_num = list1[i];\n                count++;\n            }\n        }\n        else {\n            if (count == 1) {\n                odd_num = list1[i];\n                break;\n            }\n        }\n    }\n    return even_num * odd_num;\n}\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (i % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n            break;\n        }\n    }\n    for (let i: number = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd = odd * list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(mul_even_odd(list));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6]));\nconsole.log(mul_even_odd([1, 3, 5, 7, 9]));\n",
    "    let even_odd_product: number = 1;\n    let even_count: number = 0;\n    let odd_count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_count++;\n            if (even_count == 1) {\n                even_odd_product = even_odd_product * list1[i];\n            }\n        }\n        else {\n            odd_count++;\n            if (odd_count == 1) {\n                even_odd_product = even_odd_product * list1[i];\n            }\n        }\n    }\n    return even_odd_product;\n}\n",
    "    let even_num: number = 1;\n    let odd_num: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = even_num * list1[i];\n        }\n        else {\n            odd_num = odd_num * list1[i];\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(\"Product of first even and odd number of a given list is: \" + mul_even_odd(list1));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (i % 2 == 0) {\n            even = even * list1[i];\n        }\n        else {\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count = count + 1;\n            break;\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count = count + 1;\n            break;\n        }\n    }\n    if (count == 2) {\n        return even_num * odd_num;\n    }\n    else {\n        return 0;\n    }\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even: number = 1;\n    let odd: number = 1;\n    let i: number = 0;\n    while (i < list1.length) {\n        if (list1[i] % 2 == 0) {\n            even = even * list1[i];\n            i++;\n        }\n        else {\n            odd = odd * list1[i];\n            i++;\n        }\n    }\n    return even * odd;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 0;\n    let odd_num: number = 0;\n    let count_even: number = 0;\n    let count_odd: number = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = list1[i];\n            count_even = count_even + 1;\n            if (count_even == 2) {\n                break;\n            }\n        }\n    }\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 != 0) {\n            odd_num = list1[i];\n            count_odd = count_odd + 1;\n            if (count_odd == 2) {\n                break;\n            }\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n",
    "    let even_num: number = 1;\n    let odd_num: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = even_num * list1[i];\n        }\n        else {\n            odd_num = odd_num * list1[i];\n        }\n    }\n    return even_num * odd_num;\n}\nconsole.log(mul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let even_num: number = 1;\n    let odd_num: number = 1;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] % 2 == 0) {\n            even_num = even_num * list1[i];\n        }\n        else {\n            odd_num = odd_num * list1[i];\n        }\n    }\n    return even_num * odd_num;\n}\nlet list1: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nconsole.log(mul_even_odd(list1));\n"
  ]
}
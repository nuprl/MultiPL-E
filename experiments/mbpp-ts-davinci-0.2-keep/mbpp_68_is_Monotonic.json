{
  "name": "mbpp_68_is_Monotonic",
  "language": "ts",
  "prompt": "//Write a python function to check whether the given array is monotonic or not.\nfunction is_Monotonic(A: number[]): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_Monotonic;\n  assert.deepEqual(candidate([6, 5, 4, 4]),true);\n  assert.deepEqual(candidate([1, 2, 2, 3]),true);\n  assert.deepEqual(candidate([1, 3, 2]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let store = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store += 1;\n        }\n    }\n    if (store === A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 3, 4]));\nconsole.log(is_Monotonic([2, 2, 2, 1, 4, 5]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6]));\nconsole.log(is_Monotonic([6, 5, 4, 3, 2, 1]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n            if (store < 0) {\n                flag = false;\n                break;\n            }\n        }\n        else {\n            store = A[index + 1] - A[index];\n            if (store < 0) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162,",
    "    let store = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store += 1;\n        }\n    }\n    if (store === A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 3, 4]));\nconsole.log(is_Monotonic([5, 4, 3]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2",
    "    let store: number = 0;\n    if (A.length <= 2) {\n        return true;\n    }\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] <= A[i + 1]) {\n            store = 1;\n        }\n        else {\n            store = 0;\n            break;\n        }\n    }\n    if (store == 1) {\n        return true;\n    }\n    else {\n        for (let i: number = 0; i < A.length; i++) {\n            if (A[i] >= A[i + 1]) {\n                store = 1;\n            }\n            else {\n                store = 0;\n                break;\n            }\n        }\n    }\n    if (store == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let store: number = 0;\n    if (A.length <= 2) {\n        return true;\n    }\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] <= A[i + 1]) {\n            store = 1;\n        }\n        else {\n            store = 0;\n            break;\n        }\n    }\n    if (store == 1) {\n        return true;\n    }\n    else {\n        for (let i: number = 0; i < A.length; i++) {\n            if (A[i] >= A[i + 1]) {\n                store = 1;\n            }\n            else {\n                store = 0;\n                break;\n            }\n        }\n        if (store == 1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n            if (store < 0) {\n                flag = false;\n                break;\n            }\n        }\n        else {\n            store = A[index + 1] - A[index];\n            if (store < 0) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([9, 8, 7, 6, 5]));\nconsole.log(is_Monotonic([5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,",
    "    let store: number = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 1;\n        }\n    }\n    if (store == A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 4, 3]));\nconsole.log(is_Monotonic([5, 4, 2, 1]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3, -4]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3, -4, -5]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3, -4, -5, -6]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8]));\nconsole.log(is_Monotonic([5, 4, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9]));\nconsole.log(is_Mon",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([5, 4, 4, 4, 3, 2]));\nconsole.log(is_Monotonic([5, 4, 3, 2, 1, 0, -1]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 7, 7, 9]));\n",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n        }\n        else {\n            store = A[index + 1] - A[index];\n        }\n        if (store >= 0) {\n            flag = true;\n        }\n        else {\n            flag = false;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n",
    "    let store = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = store + 1;\n        }\n    }\n    if (store == A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 4, 3]));\nconsole.log(is_Monotonic([5, 5, 5]));\nconsole.log(is_Monotonic([1, 2, 2, 3]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4]));\nconsole.log(is_Monotonic([1, 1, 2, 2, 3]));\nconsole.log(is_Monotonic([1, 2, 4, 5]));\nconsole.log(is_Monotonic([1, 1, 1]));\nconsole.log(is_Monotonic([1, 2, 3]));\nconsole.log(is_Monotonic([3, 2, 1]));\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length - 1; index++) {\n        store = A[index] - A[index + 1];\n        if (store != 0) {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5]));\nconsole.log(is_Monotonic([5, 4, 3, 2, 1]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 5, 5, 5]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let index = 0; index < A.length; index++) {\n        if (A[index] >= A[index + 1]) {\n            store = A[index] - A[index + 1];\n            if (store < 0) {\n                flag = false;\n                break;\n            }\n        }\n        else {\n            store = A[index + 1] - A[index];\n            if (store < 0) {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    let store = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store += 1;\n        }\n    }\n    if (store == A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 3, 4]));\nconsole.log(is_Monotonic([5, 4, 3]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2,",
    "    let store: number = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store = 0;\n        } else {\n            store = 1;\n            break;\n        }\n    }\n    if (store == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 4, 3]));\nconsole.log(is_Monotonic([5, 5, 5]));\nconsole.log(is_Monotonic([1, 2, 2, 3]));\nconsole.log(is_Monotonic([1, 1, 2, 3, 4]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 3]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 1]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 2]));\nconsole.log(is_Monotonic([1, 1, 1, 2, 1]));\nconsole.log(is_Monotonic([1, 1, 2, 1, 1]));\nconsole.log(is_Monotonic([1, 2, 1, 1, 1]));\nconsole.log(is_Monotonic([2, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([2, 2, 2, 1, 1]));\nconsole.log(is_Monotonic([2, 2, 1, 1, 1]));\nconsole.log(is_Monotonic([2, 1, 1, 1, 1]));\nconsole.log(is_Monotonic([1, 1, 1, 1, 2]));\nconsole.log(is_Monotonic([1, 1, 1, 2, 1]));\nconsole.log(is_Mon",
    "    let store: number = 0;\n    let flag: boolean = true;\n    for (let i: number = 0; i <= A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            flag = true;\n        } else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\n",
    "    let store = 0;\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] >= A[i + 1]) {\n            store += 1;\n        }\n    }\n    if (store == A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([5, 4, 4]));\nconsole.log(is_Monotonic([5, 3, 4]));\nconsole.log(is_Monotonic([5, 4, 3]));\nconsole.log(is_Monotonic([5, 4, 4, 5]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nconsole.log(is_Monotonic([5, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,",
    "    let store: number = 0;\n    for (let i = 0; i < A.length - 1; i++) {\n        if (A[i] <= A[i + 1]) {\n            store = store + 1;\n        }\n    }\n    if (store == A.length - 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14,",
    "    let store: number = 0;\n    if (A.length <= 2) {\n        return true;\n    }\n    for (let i = 0; i < A.length; i++) {\n        if (A[i] <= A[i + 1]) {\n            store = 1;\n        } else {\n            store = 0;\n            break;\n        }\n    }\n    if (store == 1) {\n        return true;\n    } else {\n        for (let i = 0; i < A.length; i++) {\n            if (A[i] >= A[i + 1]) {\n                store = 1;\n            } else {\n                store = 0;\n                break;\n            }\n        }\n    }\n    if (store == 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([-1, -5, -10, -1100, -1100, -1101, -1102, -9001]));\n",
    "    let direction: number = A[0] - A[1];\n    for (let i: number = 0; i < A.length; i++) {\n        if (direction === 0) {\n            direction = A[i] - A[i + 1];\n            continue;\n        }\n        if (breaksDirection(A[i], A[i + 1], direction)) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    let store: number = 0;\n    if (A.length <= 2) {\n        return true;\n    }\n    for (let i: number = 0; i < A.length; i++) {\n        if (A[i] <= A[i + 1]) {\n            store = 1;\n        }\n        else {\n            store = 0;\n            break;\n        }\n    }\n    if (store == 1) {\n        return true;\n    }\n    else {\n        for (let i: number = 0; i < A.length; i++) {\n            if (A[i] >= A[i + 1]) {\n                store = 1;\n            }\n            else {\n                store = 0;\n                break;\n            }\n        }\n    }\n    if (store == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(is_Monotonic([9, 8, 7, 6, 5, 4, 3, 2, 1]));\nconsole.log(is_Monotonic([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, -99, -88, -"
  ]
}
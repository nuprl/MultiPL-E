{
  "name": "mbpp_281_all_unique",
  "language": "ts",
  "prompt": "//Write a python function to check if the elements of a given list are unique or not.\nfunction all_unique(test_list: number[]): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_281_all_unique.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_unique;\n  assert.deepEqual(candidate([1, 2, 3]),true);\n  assert.deepEqual(candidate([1, 2, 1, 2]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let unique_list: number[] = [];\n    for (let i = 0; i < test_list.length; i++) {\n        if (unique_list.indexOf(test_list[i]) == -1) {\n            unique_list.push(test_list[i]);\n        }\n    }\n    if (unique_list.length == test_list.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nconsole.log(all_unique([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(all_unique([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]));\n",
    "    let unique_list = test_list.filter((value, index, self) => self.indexOf(value) === index);\n    return unique_list.length === test_list.length;\n}\n",
    "    let unique = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n        if (!unique) {\n            break;\n        }\n    }\n    return unique;\n}\n",
    "    let unique = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n    }\n    return unique;\n}\n\nconsole.log(all_unique([1, 2, 3, 4, 5]));\nconsole.log(all_unique([1, 2, 3, 4, 5, 5]));\n",
    "    let unique_list: number[] = [];\n\n    for (let i = 0; i < test_list.length; i++) {\n        if (unique_list.indexOf(test_list[i]) === -1) {\n            unique_list.push(test_list[i]);\n        }\n    }\n\n    return unique_list.length === test_list.length;\n}\n\nconsole.log(all_unique([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(all_unique([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]));\n",
    "    var s = new Set(test_list);\n    if (s.size === test_list.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    let unique: boolean = true;\n    let i: number = 0;\n    while (i < test_list.length) {\n        let j: number = i + 1;\n        while (j < test_list.length) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return unique;\n}\n",
    "    let unique_list: number[] = [];\n    for (let i = 0; i < test_list.length; i++) {\n        if (unique_list.indexOf(test_list[i]) === -1) {\n            unique_list.push(test_list[i]);\n        }\n    }\n    return unique_list.length === test_list.length;\n}\n",
    "    let unique_list: number[] = [];\n    for (let i = 0; i < test_list.length; i++) {\n        if (unique_list.indexOf(test_list[i]) == -1) {\n            unique_list.push(test_list[i]);\n        }\n    }\n    if (unique_list.length == test_list.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n",
    "    let unique = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = 0; j < test_list.length; j++) {\n            if (i != j) {\n                if (test_list[i] == test_list[j]) {\n                    unique = false;\n                }\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique_list = [];\n    for (let i = 0; i < test_list.length; i++) {\n        if (unique_list.indexOf(test_list[i]) == -1) {\n            unique_list.push(test_list[i]);\n        }\n    }\n    if (unique_list.length == test_list.length) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(all_unique([1, 2, 3, 4, 5]));\nconsole.log(all_unique([1, 2, 3, 4, 5, 1]));\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n    }\n    return unique;\n}\n\nconsole.log(all_unique([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(all_unique([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]));\n",
    "    let unique_list = [];\n    for (let i = 0; i < test_list.length; i++) {\n        if (unique_list.indexOf(test_list[i]) == -1) {\n            unique_list.push(test_list[i]);\n        }\n    }\n    if (unique_list.length == test_list.length) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconsole.log(all_unique([1, 2, 3, 4, 5]));\nconsole.log(all_unique([1, 2, 3, 4, 5, 1]));\n",
    "    let unique = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] === test_list[j]) {\n                unique = false;\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n    }\n    return unique;\n}\n",
    "    let unique: boolean = true;\n    for (let i = 0; i < test_list.length; i++) {\n        for (let j = i + 1; j < test_list.length; j++) {\n            if (test_list[i] == test_list[j]) {\n                unique = false;\n                break;\n            }\n        }\n    }\n    return unique;\n}\n"
  ]
}
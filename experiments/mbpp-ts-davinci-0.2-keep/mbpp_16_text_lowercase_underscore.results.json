{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "ts",
  "prompt": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /[a-z]+_[a-z]+/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510566,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmppdiv0u2o.js:11:12)\n    at Object.<anonymous> (/tmp/tmppdiv0u2o.js:13:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\nconsole.log(text_lowercase_underscore(\"hello_world\"));\nconsole.log(text_lowercase_underscore(\"helloWorld\"));\nconsole.log(text_lowercase_underscore(\"hello_World\"));\nconsole.log(text_lowercase_underscore(\"hello-world\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "true\nfalse\nfalse\nfalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return text.match(/^[a-z]+(_[a-z]+)*$/) != null;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(?:_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let result = false;\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    if (regex.test(text)) {\n        result = true;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n  return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n  return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_1\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_1_\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_1\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_1_\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_1_text_lowercase_underscore\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_1_text_lowercase_underscore_\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_1_text_lowercase_underscore_1\"));\nconsole.log(text_lowercase_underscore(\"text_lowercase_underscore_1_text_lowercase_underscore_1_\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_1_text_lowercase_underscore_1_\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_1_text_lowercase_underscore_1\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_1_text_lowercase_underscore_\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore_1_text_lowercase_underscore\"));\nconsole.log(text_lowercase_underscore(\"_text_lowercase_underscore\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmp_1gy9v1r.ts(22,66): error TS1002: Unterminated string literal.\n../../../../tmp/tmp_1gy9v1r.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmp_1gy9v1r.ts(23,9): error TS1005: ',' expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(?:_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let result: boolean = false;\n    let regex = /^[a-z]+_[a-z]+$/;\n    if (regex.test(text)) {\n        result = true;\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regexp = /^[a-z_]+$/;\n    return regexp.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\nconsole.log(text_lowercase_underscore(\"a_b_c\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h_i\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h_i_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h_i_j\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h_i_j_\"));\nconsole.log(text_lowercase_underscore(\"a_b_c_d_e_f_g_h_i_j_k\"));\nconsole.\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123372,
      "stdout": "../../../../tmp/tmpgjvkxe67.ts(23,9): error TS1003: Identifier expected.\n",
      "stderr": "",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return text.match(/^[a-z]+(_[a-z]+)*$/) !== null;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z_]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text: string): boolean {\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510564,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
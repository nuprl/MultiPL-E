{
  "name": "mbpp_166_find_even_pair",
  "language": "ts",
  "prompt": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 == 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 == 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_pairs = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                even_pairs++;\n            }\n        }\n    }\n    return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_pairs = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                even_pairs++;\n            }\n        }\n    }\n    return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let even_pairs = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                even_pairs++;\n            }\n        }\n    }\n    return even_pairs;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n  let count = 0;\n  for (let i = 0; i < A.length; i++) {\n    for (let j = i + 1; j < A.length; j++) {\n      if ((A[i] ^ A[j]) % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfunction find_even_pair(A: number[]): number {\n    let count = 0;\n    for (let i = 0; i < A.length; i++) {\n        for (let j = i + 1; j < A.length; j++) {\n            if ((A[i] ^ A[j]) % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
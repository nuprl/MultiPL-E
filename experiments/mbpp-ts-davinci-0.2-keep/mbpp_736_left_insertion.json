{
  "name": "mbpp_736_left_insertion",
  "language": "ts",
  "prompt": "//Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nfunction left_insertion(a: number[], x: number): number {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = left_insertion;\n  assert.deepEqual(candidate([1, 2, 4, 5], 6),4);\n  assert.deepEqual(candidate([1, 2, 4, 5], 3),2);\n  assert.deepEqual(candidate([1, 2, 4, 5], 7),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let low = 0;\n    let high = a.length - 1;\n    let mid;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i: number = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        }\n        else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i: number = 0;\n    let j: number = a.length - 1;\n    while (i < j) {\n        let m: number = Math.floor((i + j) / 2);\n        if (x > a[m]) {\n            i = m + 1;\n        } else {\n            j = m;\n        }\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    let mid = Math.floor((left + right) / 2);\n    while (left <= right) {\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else if (a[mid] > x) {\n            right = mid - 1;\n        } else {\n            return mid;\n        }\n        mid = Math.floor((left + right) / 2);\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n        if (x < a[mid]) {\n            right = mid - 1;\n        } else if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0, right = a.length - 1;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i: number = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let start = 0;\n    let end = a.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start <= end) {\n        if (x > a[mid]) {\n            start = mid + 1;\n        }\n        else if (x < a[mid]) {\n            end = mid - 1;\n        }\n        else {\n            return mid;\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return start;\n}\nconsole.log(left_insertion([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5));\nconsole.log(left_insertion([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 11));\nconsole.log(left_insertion([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 0));\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length;\n    let mid;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let start = 0;\n    let end = a.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start <= end) {\n        if (a[mid] < x) {\n            start = mid + 1;\n        } else if (a[mid] > x) {\n            end = mid - 1;\n        } else {\n            return mid;\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return start;\n}\n",
    "    let i = 0;\n    let j = a.length - 1;\n    while (i < j) {\n        const m = Math.floor((i + j) / 2);\n        if (a[m] < x) {\n            i = m + 1;\n        } else {\n            j = m;\n        }\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length;\n    while (left < right) {\n        const mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    let m = 0;\n    while (l <= r) {\n        m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i: number = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        }\n        else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    let m = 0;\n    while (l <= r) {\n        m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        const m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i: number = 0;\n    while (i < a.length) {\n        if (a[i] >= x) {\n            return i;\n        }\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    let mid = 0;\n    while (left <= right) {\n        mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let start = 0;\n    let end = a.length - 1;\n    let mid = Math.floor((start + end) / 2);\n    while (start <= end) {\n        if (a[mid] < x) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n        mid = Math.floor((start + end) / 2);\n    }\n    return start;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x <= a[mid]) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0, high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    let mid = 0;\n    while (left <= right) {\n        mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x <= a[mid]) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0, r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        }\n        else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x < a[mid]) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (x > a[m]) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        }\n        else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    let mid = Math.floor((left + right) / 2);\n    while (left <= right) {\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n        mid = Math.floor((left + right) / 2);\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (x <= a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l <= r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x < a[mid]) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    while (l < r) {\n        let m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        }\n        else {\n            r = m;\n        }\n    }\n    return l;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        }\n        else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x <= a[mid]) {\n            right = mid - 1;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n",
    "    let i = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (x > a[mid]) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (x > a[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let low = 0;\n    let high = a.length - 1;\n    let mid = 0;\n    while (low <= high) {\n        mid = Math.floor((low + high) / 2);\n        if (a[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n",
    "    let left = 0;\n    let right = a.length - 1;\n    while (left <= right) {\n        let mid = Math.floor((left + right) / 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        }\n        else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}\n",
    "    let i: number = 0;\n    while (i < a.length && a[i] < x) {\n        i++;\n    }\n    return i;\n}\n",
    "    let l = 0;\n    let r = a.length - 1;\n    let m = 0;\n    while (l <= r) {\n        m = Math.floor((l + r) / 2);\n        if (a[m] < x) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return l;\n}\n",
    "    let lo = 0;\n    let hi = a.length;\n    while (lo < hi) {\n        let mid = Math.floor((lo + hi) / 2);\n        if (a[mid] < x) {\n            lo = mid + 1;\n        } else {\n            hi = mid;\n        }\n    }\n    return lo;\n}\n"
  ]
}
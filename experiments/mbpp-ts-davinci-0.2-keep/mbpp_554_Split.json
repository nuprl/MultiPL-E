{
  "name": "mbpp_554_Split",
  "language": "ts",
  "prompt": "//Write a python function which takes a list of integers and only returns the odd ones.\nfunction Split(list: number[]): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6]),[1, 3, 5]);\n  assert.deepEqual(candidate([10, 11, 12, 13]),[11, 13]);\n  assert.deepEqual(candidate([7, 8, 9, 1]),[7, 9, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let odd: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n",
    "    let odd: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let odd: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 1) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n",
    "    let odd: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}\n",
    "    let oddList: number[] = [];\n    for (let i: number = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let odd: number[] = [];\n    for (let i: number = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let oddList: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let oddList: number[] = [];\n    for (let i: number = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            oddList.push(list[i]);\n        }\n    }\n    return oddList;\n}\n\nconsole.log(Split([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\n",
    "  let oddNumbers: number[] = [];\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] % 2 != 0) {\n      oddNumbers.push(list[i]);\n    }\n  }\n  return oddNumbers;\n}\n\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n",
    "    let odd: number[] = [];\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] % 2 != 0) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}\nlet list: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(Split(list));\n"
  ]
}
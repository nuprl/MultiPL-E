{
  "name": "mbpp_229_re_arrange_array",
  "language": "ts",
  "prompt": "//Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\nfunction re_arrange_array(arr: number[], n: number): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = re_arrange_array;\n  assert.deepEqual(candidate([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9),[-1, -3, -7, 4, 5, 6, 2, 8, 9]);\n  assert.deepEqual(candidate([12, -14, -26, 13, 15], 5),[-14, -26, 12, 13, 15]);\n  assert.deepEqual(candidate([10, 24, 36, -42, -39, -78, 85], 7),[-42, -39, -78, 10, 24, 36, 85]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "completions": [
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        if (arr[i] < 0) {\n            i++;\n        } else {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            j--;\n        }\n    }\n    return arr;\n}\n",
    "    let i: number = 0;\n    let j: number = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j) {\n            i++;\n        }\n        while (arr[j] >= 0 && i < j) {\n            j--;\n        }\n        if (i < j) {\n            let temp: number = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        if (arr[i] > 0) {\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n            j--;\n        } else {\n            i++;\n        }\n    }\n    return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0) {\n            i++;\n        }\n        while (arr[j] >= 0) {\n            j--;\n        }\n        if (i < j) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        if (arr[i] < 0) {\n            i++;\n        } else {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            j--;\n        }\n    }\n    return arr;\n}\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    while (arr[i] < 0 && i < j) {\n      i++;\n    }\n    while (arr[j] >= 0 && i < j) {\n      j--;\n    }\n    if (i < j) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n  return arr;\n}\n\nconsole.log(re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9));\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    while (arr[i] < 0 && i < j) {\n      i++;\n    }\n    while (arr[j] >= 0 && i < j) {\n      j--;\n    }\n    if (i < j) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n  return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        if (arr[i] < 0) {\n            i++;\n        } else {\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n            j--;\n        }\n    }\n    return arr;\n}\n",
    "    let i: number = 0;\n    let j: number = n - 1;\n    while (i < j) {\n        if (arr[i] < 0) {\n            i++;\n        } else {\n            let temp: number = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            j--;\n        }\n    }\n    return arr;\n}\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    while (i < j && arr[i] < 0) {\n      i++;\n    }\n    while (i < j && arr[j] >= 0) {\n      j--;\n    }\n    if (i < j) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n  return arr;\n}\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    if (arr[i] < 0 && arr[j] > 0) {\n      i++;\n      j--;\n    } else if (arr[i] > 0 && arr[j] < 0) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j--;\n    } else if (arr[i] < 0 && arr[j] < 0) {\n      i++;\n    } else if (arr[i] > 0 && arr[j] > 0) {\n      j--;\n    }\n  }\n  return arr;\n}\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    if (arr[i] < 0 && arr[j] > 0) {\n      i++;\n      j--;\n    } else if (arr[i] > 0 && arr[j] > 0) {\n      i++;\n    } else if (arr[i] < 0 && arr[j] < 0) {\n      j--;\n    } else {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j--;\n    }\n  }\n  return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j) {\n            i++;\n        }\n        while (arr[j] >= 0 && i < j) {\n            j--;\n        }\n        if (i < j) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j) {\n            i++;\n        }\n        while (arr[j] >= 0 && i < j) {\n            j--;\n        }\n        if (i < j) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;\n}\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    while (arr[i] < 0 && i < j) {\n      i++;\n    }\n    while (arr[j] >= 0 && i < j) {\n      j--;\n    }\n    if (i < j) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n  return arr;\n}\n\nconsole.log(re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 5));\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0) {\n            i++;\n        }\n        while (arr[j] > 0) {\n            j--;\n        }\n        if (i < j) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        if (arr[i] < 0 && arr[j] > 0) {\n            i++;\n            j--;\n        } else if (arr[i] > 0 && arr[j] > 0) {\n            i++;\n        } else if (arr[i] < 0 && arr[j] < 0) {\n            j--;\n        } else if (arr[i] > 0 && arr[j] < 0) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return arr;\n}\n\nconsole.log(re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9));\n",
    "  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    while (arr[i] < 0 && i < j) {\n      i++;\n    }\n    while (arr[j] >= 0 && i < j) {\n      j--;\n    }\n    if (i < j) {\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n  }\n  return arr;\n}\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        if (arr[i] < 0 && arr[j] > 0) {\n            i++;\n            j--;\n        } else if (arr[i] > 0 && arr[j] > 0) {\n            i++;\n        } else if (arr[i] < 0 && arr[j] < 0) {\n            j--;\n        } else if (arr[i] > 0 && arr[j] < 0) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n            i++;\n            j--;\n        }\n    }\n    return arr;\n}\n\nconsole.log(re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 5));\n",
    "    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j) {\n            i++;\n        }\n        while (arr[j] >= 0 && i < j) {\n            j--;\n        }\n        if (i < j) {\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;\n}\n"
  ]
}
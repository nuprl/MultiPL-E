{
  "name": "mbpp_589_perfect_squares",
  "language": "ts",
  "prompt": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "verbatim",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ],
  "results": [
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let squares: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      squares.push(i);\n    }\n  }\n  return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt === Math.floor(sqrt)) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\nconsole.log(perfect_squares(1, 100));\nconsole.log(perfect_squares(1, 1000));\nconsole.log(perfect_squares(1, 10000));\nconsole.log(perfect_squares(1, 100000));\nconsole.log(perfect_squares(1, 1000000));\nconsole.log(perfect_squares(1, 10000000));\nconsole.log(perfect_squares(1, 100000000));\nconsole.log(perfect_squares(1, 1000000000));\nconsole.log(perfect_squares(1, 10000000000));\nconsole.log(perfect_squares(1, 100000000000));\nconsole.log(perfect_squares(1, 1000000000000));\nconsole.log(perfect_squares(1, 10000000000000));\nconsole.log(perfect_squares(1, 100000000000000));\nconsole.log(perfect_squares(1, 1000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000000000));\nconsole.log(perfect_squares(1, 100000000000000000000000000));\nconsole.log(perfect_squares(1, 1000000000000000000000000000));\nconsole.log(perfect_squares(1, 10000000000000000000000000000));\nconsole.log\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123640,
      "stdout": "[ 1, 4, 9 ]\n[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n[\n    1,   4,   9,  16,  25,  36,  49,\n   64,  81, 100, 121, 144, 169, 196,\n  225, 256, 289, 324, 361, 400, 441,\n  484, 529, 576, 625, 676, 729, 784,\n  841, 900, 961\n]\n[\n      1,    4,    9,   16,   25,   36,   49,   64,   81,\n    100,  121,  144,  169,  196,  225,  256,  289,  324,\n    361,  400,  441,  484,  529,  576,  625,  676,  729,\n    784,  841,  900,  961, 1024, 1089, 1156, 1225, 1296,\n   1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025,\n   2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916,\n   3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969,\n   4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184,\n   5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561,\n   6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100,\n   8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801,\n  10000\n]\n[\n      1,    4,    9,   16,   25,   36,   49,   64,   81,\n    100,  121,  144,  169,  196,  225,  256,  289,  324,\n    361,  400,  441,  484,  529,  576,  625,  676,  729,\n    784,  841,  900,  961, 1024, 1089, 1156, 1225, 1296,\n   1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025,\n   2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916,\n   3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969,\n   4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184,\n   5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561,\n   6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100,\n   8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801,\n  10000,\n  ... 216 more items\n]\n[\n      1,    4,    9,   16,   25,   36,   49,   64,   81,\n    100,  121,  144,  169,  196,  225,  256,  289,  324,\n    361,  400,  441,  484,  529,  576,  625,  676,  729,\n    784,  841,  900,  961, 1024, 1089, 1156, 1225, 1296,\n   1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025,\n   2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916,\n   3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969,\n   4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184,\n   5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561,\n   6",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i: number = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 9));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt * sqrt == i) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 11,  14, 16, 17, 21, 22, 25, 27,\n  30, 33, 34, 35,  36, 39, 41, 42, 44, 46, 47,\n  49, 53, 54, 55,  56, 57, 62, 64, 67, 68, 69,\n  70, 71, 74, 79,  81, 83, 84, 85, 86, 88, 90,\n  91, 93, 98, 99, 100\n]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  4,\n  9,\n  11,\n  14,\n  16,\n  17,\n  21,\n  22,\n  25,\n  27,\n  30\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  4,\n  9,\n  16,\n  25\n]\n    at test (/tmp/tmp4rmty942.js:16:12)\n    at Object.<anonymous> (/tmp/tmp4rmty942.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n     1,  4,  9, 11, 14,\n    16, 17, 21, 22, 25,\n    27, 30\n  ],\n  expected: [ 1, 4, 9, 16, 25 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt - Math.floor(sqrt) === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let perfect_squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            perfect_squares.push(i);\n        }\n    }\n    return perfect_squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let squares: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      squares.push(i);\n    }\n  }\n  return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 10));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[ 1, 4, 9 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let perfect_squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt === Math.floor(sqrt)) {\n            perfect_squares.push(i);\n        }\n    }\n    return perfect_squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n  let result: number[] = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        let sqrt = Math.sqrt(i);\n        if (sqrt % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123622,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    var arr = [];\n    for (var i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 25));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1666123625,
      "stdout": "[ 1, 4, 9, 16, 25 ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let arr: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            arr.push(i);\n        }\n    }\n    return arr;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510510,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let squares: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 === 0) {\n            squares.push(i);\n        }\n    }\n    return squares;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a: number, b: number): number[] {\n    let result: number[] = [];\n    for (let i = a; i <= b; i++) {\n        if (Math.sqrt(i) % 1 == 0) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\nconsole.log(perfect_squares(1, 100));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
      "timestamp": 1665510508,
      "stdout": "[\n   1,  4,  9, 16,  25,\n  36, 49, 64, 81, 100\n]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
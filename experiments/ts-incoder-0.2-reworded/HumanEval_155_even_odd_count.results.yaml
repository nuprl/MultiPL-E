language: ts
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num\
    \ / 10;\n    if (num % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  324\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpxnc5xlm4.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxnc5xlm4.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 324 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  324\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp1pgmm0sb.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1pgmm0sb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 324 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    const digit = num % 10;\n    if (digit ===\
    \ 0) {\n      even.push(digit);\n    } else {\n      odd.push(digit);\n    }\n\
    \    num = Math.floor(num / 10);\n    i++;\n  }\n  return [even, odd];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprsujpw7g.ts(21,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmprsujpw7g.ts(21,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 2) {\n      even++;\n    } else {\n     \
    \ odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp61659n9w.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp61659n9w.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 2) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp5qwzz1b2.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5qwzz1b2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter(x\
    \ => x === '0').length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter(x => x !== '0').length;\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp4vck46v0.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vck46v0.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter(x\
    \ => x % 2 === 0)\n    .length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter(x => x % 2 !== 0)\n    .length;\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5k5fa8ad.ts(9,18): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp5k5fa8ad.ts(12,18): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    i++;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjnqfkdsj.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpjnqfkdsj.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter(i\
    \ => i % 2 === 0)\n    .length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter(i => i % 2 !== 0)\n    .length;\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaksb7_vf.ts(9,18): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpaksb7_vf.ts(12,18): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ numStr = num.toString();\n  for (let i = 0; i < numStr.length; i++) {\n    if\
    \ (numStr.charAt(i) % 2 === 0) {\n      even.push(parseInt(numStr.charAt(i)));\n\
    \    } else {\n      odd.push(parseInt(numStr.charAt(i)));\n    }\n  }\n  return\
    \ [even, odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprqv1enxo.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmprqv1enxo.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmprqv1enxo.ts(18,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    i++;\n    num /= 10;\n  }\n  return\
    \ [even, odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe4wpeh5l.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpe4wpeh5l.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ numStr = String(num);\n  let evenCount = 0;\n  let oddCount = 0;\n  for (let\
    \ i = 0; i < numStr.length; i++) {\n    if (numStr.charAt(i) % 2 === 0) {\n  \
    \    even[evenCount] = parseInt(numStr.charAt(i));\n      evenCount++;\n    }\
    \ else {\n      odd[oddCount] = parseInt(numStr.charAt(i));\n      oddCount++;\n\
    \    }\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpncq0s6nj.ts(14,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpncq0s6nj.ts(22,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpncq0s6nj.ts(22,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number = Math.floor(num / 10);\n  const odd: number\
    \ = num % 10;\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  7\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpd9uzlsg1.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd9uzlsg1.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 7 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let currentNum = num;\n  while (currentNum > 0) {\n    const currentDigit =\
    \ currentNum % 10;\n    if (currentDigit % 2 === 0) {\n      evenCount.push(currentDigit);\n\
    \    } else {\n      oddCount.push(currentDigit);\n    }\n    currentNum = Math.floor(currentNum\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzvfqfcfd.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpzvfqfcfd.ts(20,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter(i\
    \ => i % 2 === 0)\n    .length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter(i => i % 2 !== 0)\n    .length;\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaksb7_vf.ts(9,18): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpaksb7_vf.ts(12,18): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(Math.log10(num) / 3);\n  const\
    \ oddCount: number = Math.floor(Math.log10(num) / 3) * 2;\n  return [evenCount,\
    \ oddCount];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfyen72y0.ts(8,45): error TS2551: Property ''log10''
    does not exist on type ''Math''. Did you mean ''LOG10E''?

    ../../../../../tmp/tmpfyen72y0.ts(9,44): error TS2551: Property ''log10'' does
    not exist on type ''Math''. Did you mean ''LOG10E''?

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let even: number = 0;\n  let odd: number = 0;\n  while (num > 0) {\n    even\
    \ = num % 10;\n    odd = num % 10;\n    if (even === 0) {\n      evenCount.push(even);\n\
    \    } else {\n      oddCount.push(odd);\n    }\n    num = Math.floor(num / 10);\n\
    \  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7r9fo9zm.ts(22,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmp7r9fo9zm.ts(22,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    i++;\n    num /= 10;\n  }\n  return\
    \ [even, odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe4wpeh5l.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpe4wpeh5l.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    evenCount++;\n    num = num / 10;\n  }\n  while (num > 0) {\n    oddCount++;\n\
    \    num = num / 10;\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  325,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpvjbj6zmv.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpvjbj6zmv.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 325, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    num = num / 10;\n    if (num % 2 === 0) {\n      evenCount++;\n    } else\
    \ {\n      oddCount++;\n    }\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  324\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp1pgmm0sb.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1pgmm0sb.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 324 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ numStr = String(num);\n  for (let i = 0; i < numStr.length; i++) {\n    if (numStr.charAt(i)\
    \ % 2 === 0) {\n      even.push(parseInt(numStr.charAt(i)));\n    } else {\n \
    \     odd.push(parseInt(numStr.charAt(i)));\n    }\n  }\n  return [even, odd];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb9kawm0p.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpb9kawm0p.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpb9kawm0p.ts(18,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    num = num\
    \ / 10;\n    if (num % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  324\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpxnc5xlm4.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpxnc5xlm4.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 324 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 2) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp5qwzz1b2.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5qwzz1b2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numStr = String(num);\n  let evenCountStr = '';\n  let oddCountStr = '';\n\
    \  for (let i = 0; i < numStr.length; i++) {\n    if (numStr[i] % 2 === 0) {\n\
    \      evenCountStr += numStr[i];\n    } else {\n      oddCountStr += numStr[i];\n\
    \    }\n  }\n  for (let i = 0; i < evenCountStr.length; i++) {\n    evenCount.push(parseInt(evenCountStr[i]));\n\
    \  }\n  for (let i = 0; i < oddCountStr.length; i++) {\n    oddCount.push(parseInt(oddCountStr[i]));\n\
    \  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq9y62sr7.ts(14,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpq9y62sr7.ts(26,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpq9y62sr7.ts(26,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numString: string = num.toString();\n  for (let i = 0; i < numString.length;\
    \ i += 1) {\n    if (numString[i] % 2 === 0) {\n      evenCount.push(numString[i]);\n\
    \    } else {\n      oddCount.push(numString[i]);\n    }\n  }\n  return [evenCount,\
    \ oddCount];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4osjdy28.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp4osjdy28.ts(13,22): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmp4osjdy28.ts(15,21): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmp4osjdy28.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmp4osjdy28.ts(18,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numString: string = num.toString();\n  for (let i = 0; i < numString.length;\
    \ i += 1) {\n    if (numString[i] % 2 === 0) {\n      evenCount.push(numString[i]);\n\
    \    } else {\n      oddCount.push(numString[i]);\n    }\n  }\n  return [evenCount,\
    \ oddCount];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4osjdy28.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp4osjdy28.ts(13,22): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmp4osjdy28.ts(15,21): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmp4osjdy28.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmp4osjdy28.ts(18,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    evenCount += num % 2 === 0;\n    oddCount += num % 2 !== 0;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbpbbd4f1.ts(11,5): error TS2365: Operator ''+=''
    cannot be applied to types ''number'' and ''boolean''.

    ../../../../../tmp/tmpbpbbd4f1.ts(12,5): error TS2365: Operator ''+='' cannot
    be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter(item\
    \ => item === '0')\n    .length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter(item => item !== '0')\n    .length;\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp6446r2qr.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6446r2qr.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    num = num / 10;\n    evenCount++;\n  }\n  while (num < 0) {\n    num = -num;\n\
    \    oddCount++;\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  325,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmp6b8fp25o.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6b8fp25o.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 325, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    num = Math.floor(num / 10);\n\
    \    i++;\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzxbabrn9.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpzxbabrn9.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    even =\
    \ num % 2 === 0 ? even + 1 : 0;\n    odd = num % 2 === 1 ? odd + 1 : 0;\n    num\
    \ = Math.floor(num / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp86lpqsim.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp86lpqsim.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    const remainder\
    \ = num % 10;\n    if (remainder === 0) {\n      even++;\n    } else {\n     \
    \ odd++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return [even, odd];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp5f00cnzp.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5f00cnzp.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738656
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numStr = String(num);\n  let evenCountStr = '';\n  let oddCountStr = '';\n\
    \  for (let i = 0; i < numStr.length; i++) {\n    if (numStr.charAt(i) % 2 ===\
    \ 0) {\n      evenCountStr += numStr.charAt(i);\n    } else {\n      oddCountStr\
    \ += numStr.charAt(i);\n    }\n  }\n  evenCount = evenCountStr.split('').map(Number);\n\
    \  oddCount = oddCountStr.split('').map(Number);\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps3994g77.ts(14,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmps3994g77.ts(20,3): error TS2588: Cannot assign to ''evenCount''
    because it is a constant.

    ../../../../../tmp/tmps3994g77.ts(21,3): error TS2588: Cannot assign to ''oddCount''
    because it is a constant.

    ../../../../../tmp/tmps3994g77.ts(22,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmps3994g77.ts(22,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num % 2;\n  return [evenCount, oddCount];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpknd3grsc.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknd3grsc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even = num % 2 === 0;\n  const odd = !even;\n  return [even,\
    \ odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfqty26n1.ts(10,11): error TS2322: Type ''boolean''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpfqty26n1.ts(10,17): error TS2322: Type ''boolean'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num % 2;\n  return [evenCount, oddCount];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpknd3grsc.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpknd3grsc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numStr = num.toString();\n  for (let i = 0; i < numStr.length; i++) {\n\
    \    if (numStr.charAt(i) % 2 === 0) {\n      evenCount.push(parseInt(numStr.charAt(i)));\n\
    \    } else {\n      oddCount.push(parseInt(numStr.charAt(i)));\n    }\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprrm6yga5.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmprrm6yga5.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmprrm6yga5.ts(18,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \n  for (let i = 0; i <= num; i++) {\n    if (num % 2 === 0) {\n      evenCount.push(i);\n\
    \    } else {\n      oddCount.push(i);\n    }\n  }\n\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptmgpqh7d.ts(19,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmptmgpqh7d.ts(19,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter(x\
    \ => x === '0').length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter(x => x !== '0').length;\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp4vck46v0.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4vck46v0.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    evenCount += num % 2 === 0;\n    oddCount += num % 2 !== 0;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbpbbd4f1.ts(11,5): error TS2365: Operator ''+=''
    cannot be applied to types ''number'' and ''boolean''.

    ../../../../../tmp/tmpbpbbd4f1.ts(12,5): error TS2365: Operator ''+='' cannot
    be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even = num % 2 === 0;\n  const odd = !even;\n  return [even,\
    \ odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfqty26n1.ts(10,11): error TS2322: Type ''boolean''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpfqty26n1.ts(10,17): error TS2322: Type ''boolean'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num.toString().split('')\n    .filter((digit:\
    \ string) => digit === '0')\n    .length;\n  const oddCount: number = num.toString().split('')\n\
    \    .filter((digit: string) => digit !== '0')\n    .length;\n  return [evenCount,\
    \ oddCount];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpi9ltl8ne.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpi9ltl8ne.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 3 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let digit: number = 0;\n  while (num > 0) {\n    digit = num % 10;\n    if\
    \ (digit % 2 === 0) {\n      evenCount.push(digit);\n    } else {\n      oddCount.push(digit);\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp_7tszud.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpp_7tszud.ts(20,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ numStr = String(num);\n  for (let i = 0; i < numStr.length; i++) {\n    if (numStr.charAt(i)\
    \ % 2 === 0) {\n      even.push(numStr.charAt(i));\n    } else {\n      odd.push(numStr.charAt(i));\n\
    \    }\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9wrlaww8.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp9wrlaww8.ts(13,17): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmp9wrlaww8.ts(15,16): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../../tmp/tmp9wrlaww8.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmp9wrlaww8.ts(18,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 2) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp5qwzz1b2.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5qwzz1b2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num % 2 === 0;\n  const oddCount: number\
    \ = num % 2 !== 0;\n  return [evenCount, oddCount];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdnjqk8ad.ts(8,9): error TS2322: Type ''boolean''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpdnjqk8ad.ts(9,9): error TS2322: Type ''boolean'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num / 2;\n  const oddCount: number =\
    \ num % 2;\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3.5,\n  1\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpi72rptzc.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpi72rptzc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3.5, 1 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num % 2 === 0 ? 1 : 0\n  const oddCount:\
    \ number = num % 2 === 1 ? 1 : 0\n  return [evenCount, oddCount]\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpwjjbwj0n.js:16:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwjjbwj0n.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numStr = String(num);\n  let evenCountStr = '';\n  let oddCountStr = '';\n\
    \  for (let i = 0; i < numStr.length; i++) {\n    if (numStr.charAt(i) % 2 ===\
    \ 0) {\n      evenCountStr += numStr.charAt(i);\n    } else {\n      oddCountStr\
    \ += numStr.charAt(i);\n    }\n  }\n  evenCount = evenCountStr.split('').map(Number);\n\
    \  oddCount = oddCountStr.split('').map(Number);\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps3994g77.ts(14,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmps3994g77.ts(20,3): error TS2588: Cannot assign to ''evenCount''
    because it is a constant.

    ../../../../../tmp/tmps3994g77.ts(21,3): error TS2588: Cannot assign to ''oddCount''
    because it is a constant.

    ../../../../../tmp/tmps3994g77.ts(22,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmps3994g77.ts(22,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    evenCount += num % 2 === 0;\n    oddCount += num % 2 !== 0;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbpbbd4f1.ts(11,5): error TS2365: Operator ''+=''
    cannot be applied to types ''number'' and ''boolean''.

    ../../../../../tmp/tmpbpbbd4f1.ts(12,5): error TS2365: Operator ''+='' cannot
    be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    i++;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjnqfkdsj.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpjnqfkdsj.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount = 0;\n  const oddCount = 0;\n  let numStr = String(num);\n\
    \  for (let i = 0; i < numStr.length; i++) {\n    if (numStr.charAt(i) % 2 ===\
    \ 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  }\n  return\
    \ [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq1q1i2fm.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpq1q1i2fm.ts(13,7): error TS2588: Cannot assign to ''evenCount''
    because it is a constant.

    ../../../../../tmp/tmpq1q1i2fm.ts(15,7): error TS2588: Cannot assign to ''oddCount''
    because it is a constant.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 2) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp5qwzz1b2.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5qwzz1b2.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = num % 2 === 0 ? 1 : 0;\n  const oddCount:\
    \ number = num % 2 === 1 ? 1 : 0;\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmppxtp0hmw.js:16:12)\n\
    \    at Object.<anonymous> (/tmp/tmppxtp0hmw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    evenCount += num % 2 === 0;\n    oddCount += num % 2 !== 0;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbpbbd4f1.ts(11,5): error TS2365: Operator ''+=''
    cannot be applied to types ''number'' and ''boolean''.

    ../../../../../tmp/tmpbpbbd4f1.ts(12,5): error TS2365: Operator ''+='' cannot
    be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659738656
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let currentNum = num;\n  while (currentNum > 0) {\n    const currentDigit =\
    \ currentNum % 10;\n    if (currentDigit % 2 === 0) {\n      evenCount.push(currentDigit);\n\
    \    } else {\n      oddCount.push(currentDigit);\n    }\n    currentNum = Math.floor(currentNum\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzvfqfcfd.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpzvfqfcfd.ts(20,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    num = Math.floor(num / 10);\n\
    \    i++;\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzxbabrn9.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpzxbabrn9.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738656
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      even.push(remainder);\n    } else {\n      odd.push(remainder);\n\
    \    }\n    num = Math.floor(num / 10);\n    i++;\n  }\n  return [even, odd];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps6r8jgvt.ts(21,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmps6r8jgvt.ts(21,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numStr = String(num);\n  for (let i = 0; i < numStr.length; i++) {\n  \
    \  if (numStr.charAt(i) % 2 === 0) {\n      evenCount.push(parseInt(numStr.charAt(i)));\n\
    \    } else {\n      oddCount.push(parseInt(numStr.charAt(i)));\n    }\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqzcq44y3.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpqzcq44y3.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpqzcq44y3.ts(18,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738657
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ numStr = num.toString();\n  for (let i = 0; i < numStr.length; i++) {\n    if\
    \ (numStr.charAt(i) % 2 === 0) {\n      even.push(parseInt(numStr.charAt(i)));\n\
    \    } else {\n      odd.push(parseInt(numStr.charAt(i)));\n    }\n  }\n  return\
    \ [even, odd];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprqv1enxo.ts(12,9): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmprqv1enxo.ts(18,11): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmprqv1enxo.ts(18,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    const remainder = num % 10;\n    if (remainder\
    \ === 0) {\n      even.push(remainder);\n    } else {\n      odd.push(remainder);\n\
    \    }\n    num = Math.floor(num / 10);\n    i++;\n  }\n  return [even, odd];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps6r8jgvt.ts(21,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmps6r8jgvt.ts(21,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const even: number[] = [];\n  const odd: number[] = [];\n  let\
    \ i = 0;\n  while (num > 0) {\n    if (num % 2 === 0) {\n      even.push(num);\n\
    \    } else {\n      odd.push(num);\n    }\n    i++;\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjnqfkdsj.ts(20,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpjnqfkdsj.ts(20,17): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    evenCount++;\n    num = Math.floor(num / 10);\n  }\n  while (num > 0) {\n\
    \    oddCount++;\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpl4ecysm2.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl4ecysm2.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 0 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let remainder: number = 0;\n  for (let i = num; i > 0; i -= 1) {\n    remainder\
    \ = i % 2;\n    if (remainder === 0) {\n      evenCount.push(i);\n    } else {\n\
    \      oddCount.push(i);\n    }\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpywjldw1l.ts(19,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpywjldw1l.ts(19,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let even = 0;\n  let odd = 0;\n  while (num > 0) {\n    if (num\
    \ % 2 === 0) {\n      even++;\n    } else {\n      odd++;\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [even, odd];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmp29tycvnv.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp29tycvnv.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(num / 2);\n  const oddCount:\
    \ number = num - evenCount;\n  return [evenCount, oddCount];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  1\n]\n    at test (/tmp/tmpzghpuylr.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzghpuylr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n\
    \  expected: [ 0, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number = Math.floor(Math.log10(num));\n  const\
    \ oddCount: number = evenCount - 1;\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpplwyepy9.ts(8,45): error TS2551: Property ''log10''
    does not exist on type ''Math''. Did you mean ''LOG10E''?

    '
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let even: number = 0;\n  let odd: number = 0;\n  while (num > 0) {\n    even\
    \ = num % 10;\n    odd = num % 10;\n    if (even === 1) {\n      evenCount.push(even);\n\
    \    }\n    if (odd === 1) {\n      oddCount.push(odd);\n    }\n    num = Math.floor(num\
    \ / 10);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9dbxvfjg.ts(23,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmp9dbxvfjg.ts(23,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738658
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount = 0;\n  const oddCount = 0;\n  let numStr = num.toString();\n\
    \  while (numStr.length > 0) {\n    const digit = numStr.charAt(0);\n    if (digit\
    \ === '0') {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n   \
    \ numStr = numStr.slice(1);\n  }\n  return [evenCount, oddCount];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0, 1]);\n\
    \  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzzklqgrk.ts(14,7): error TS2588: Cannot assign to
    ''evenCount'' because it is a constant.

    ../../../../../tmp/tmpzzklqgrk.ts(16,7): error TS2588: Cannot assign to ''oddCount''
    because it is a constant.

    '
  timestamp: 1659738657
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 2
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  const evenCount: number[] = [];\n  const oddCount: number[] = [];\n\
    \  let numStr = String(num);\n  for (let i = 0; i < numStr.length; i++) {\n  \
    \  const digit = numStr.charAt(i);\n    if (digit === '0') {\n      evenCount.push(0);\n\
    \      continue;\n    }\n    if (digit === '1') {\n      oddCount.push(1);\n \
    \     continue;\n    }\n    evenCount.push(1);\n    oddCount.push(0);\n  }\n \
    \ return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0xg5zr1t.ts(24,11): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    ../../../../../tmp/tmp0xg5zr1t.ts(24,22): error TS2322: Type ''number[]'' is not
    assignable to type ''number''.

    '
  timestamp: 1659738658
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    if (num % 2 === 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return [evenCount, oddCount];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = even_odd_count;\n  assert.deepEqual(candidate(7),[0,\
    \ 1]);\n  assert.deepEqual(candidate(-78),[1, 1]);\n  assert.deepEqual(candidate(3452),[2,\
    \ 2]);\n  assert.deepEqual(candidate(346211),[3, 3]);\n  assert.deepEqual(candidate(-345821),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-2),[1, 0]);\n  assert.deepEqual(candidate(-45347),[2,\
    \ 3]);\n  assert.deepEqual(candidate(0),[1, 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpjd5uw9b0.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjd5uw9b0.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654
- exit_code: 1
  program: "//Given an integer. return an array that has the number of even and odd\
    \ digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// [1, 1]\n//\
    \ >>> even_odd_count(123)\n// [1, 2]\nfunction even_odd_count(num: number): [number,\
    \ number] {\n  let evenCount = 0;\n  let oddCount = 0;\n  while (num > 0) {\n\
    \    const remainder = num % 10;\n    if (remainder === 0) {\n      evenCount++;\n\
    \    } else {\n      oddCount++;\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return [evenCount, oddCount];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = even_odd_count;\n\
    \  assert.deepEqual(candidate(7),[0, 1]);\n  assert.deepEqual(candidate(-78),[1,\
    \ 1]);\n  assert.deepEqual(candidate(3452),[2, 2]);\n  assert.deepEqual(candidate(346211),[3,\
    \ 3]);\n  assert.deepEqual(candidate(-345821),[3, 3]);\n  assert.deepEqual(candidate(-2),[1,\
    \ 0]);\n  assert.deepEqual(candidate(-45347),[2, 3]);\n  assert.deepEqual(candidate(0),[1,\
    \ 0]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  0\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  1\n]\n    at test (/tmp/tmpf2ohv2tr.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf2ohv2tr.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 0 ],\n\
    \  expected: [ 1, 1 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738654

name: HumanEval_141_file_name_check
language: ts
prompt: "//Create a function which takes a string representing a file's name, and\
  \ returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"\
  example.txt\")\n// \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\n\
  function file_name_check(file_name: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = file_name_check;\n  assert.deepEqual(candidate(\"\
  example.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"1example.dll\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"s1sdf3.asd\"),\"No\");\n  assert.deepEqual(candidate(\"\
  K.dll\"),\"Yes\");\n  assert.deepEqual(candidate(\"MY16FILE3.exe\"),\"Yes\");\n\
  \  assert.deepEqual(candidate(\"His12FILE94.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _Y.txt\"),\"No\");\n  assert.deepEqual(candidate(\"?aREYA.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  /this_is_valid.dll\"),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.wow\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  this_is_valid.txtexe\"),\"No\");\n  assert.deepEqual(candidate(\"#this2_i4s_5valid.ten\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"@this1_is6_valid.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_12valid.6exe4.txt\"),\"No\");\n  assert.deepEqual(candidate(\"all.exe.txt\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"I563_No.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  Is3youfault.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"no_one#knows.dll\"\
  ),\"Yes\");\n  assert.deepEqual(candidate(\"1I563_Yes3.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  I563_Yes3.txtt\"),\"No\");\n  assert.deepEqual(candidate(\"final..txt\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"final132\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _f4indsartal132.\"),\"No\");\n  assert.deepEqual(candidate(\".txt\"),\"No\");\n\
  \  assert.deepEqual(candidate(\"s.\"),\"No\");\n}\n\ntest();"
completions: ["    let file_name = file_name.toLowerCase();\n    let dot_index = file_name.indexOf(\"\
    .\");\n    let first_letter = file_name.substring(0, dot_index);\n    let valid_chars\
    \ = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    let\
    \ first_letter_valid = valid_chars.indexOf(first_letter) >= 0;\n    let dot_valid\
    \ = dot_index >= 0 && dot_index < file_name.length - 1;\n    let dot_dot_valid\
    \ = dot_index >= 0 && dot_index < file_name.length - 2 && file_name[dot_index\
    \ + 1] == \".\";\n    let dot_dot_dot_valid = dot_index >= 0 && dot_index < file_name.length\
    \ - 3 && file_name[dot_index + 1] == \".\" && file_name[dot_index + 2] == \".\"\
    ;\n    let dot_dot_dot_dot_valid = dot_index >= 0 && dot_index < file_name.length\
    \ - 4 && file_name[dot_index + 1] == \".\" && file_name[dot_index + 2] == \".\"\
    \ && file_name[dot_index + 3] == \".\";\n    let dot_dot_dot_dot_dot_valid = dot_index\
    \ >= 0 && dot_index < file_name.length - 5 && file_name[dot_index + 1] == \".\"\
    \ && file_name[dot_index + 2] == \".\" && file_name[dot_index + 3] == \".\" &&\
    \ file_name[dot_index + 4] == \".\";\n    let dot_dot_dot_dot_dot_dot_valid =\
    \ dot_index >= 0 && dot_index < file_name.length - 6 && file_name[dot_index +\
    \ 1] == \".\" && file_name[dot_index + 2] == \".\" && file_name[dot_index + 3]\
    \ == \".\" && file_name[dot_index + 4] == \".\" && file_name[dot_index + 5] ==\
    \ \".\";\n    let dot_dot_dot_dot_dot_dot_dot_valid = dot_index >= 0 && dot_index\
    \ < file_name.length - 7 && file_name[dot_index + 1] == \".\" && file_name[dot_index\
    \ + 2] == \".\" && file_name[dot_index + 3] == \".\" && file_name[dot_index +\
    \ 4] == \".\" && file_name[dot_index + 5] == \".\" && file_name[dot_index + 6]\
    \ == \".\";\n    let dot_dot_dot_dot_dot_dot_dot_dot_valid = dot_index >= 0 &&\
    \ dot_index < file_name.length - 8 && file_name[dot_index + 1] == \".\" && file_name[dot_index\
    \ + 2] == \".\" && file_name[dot_index + 3] == \".\" && file_name[dot_index +\
    \ 4] == \".\" && file_name[dot_index + 5] == \".\" && file_name[dot_index + 6]\
    \ == \".\" && file_name[dot_index + 7] == \".\";\n    let dot_dot_dot_dot_dot_dot_dot_dot_dot_valid\
    \ = dot_index >= 0 && dot_index < file_name.length - 9 && file_name[dot_index\
    \ + 1] == \".\" && file_name[dot_index + 2] == \".\" && file_name[dot_index +\
    \ 3] == \".\" && file_name[dot_index + 4] == \".\" && file_name[dot_index + 5]\
    \ == \".\" && file_name[dot_index + 6] == \".\" && file_name[", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_name = file_name.replace(/\\./g, '');\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.substring(0, file_name.indexOf('.'));\n    let file_name\
    \ = file_name.substring(0, file_name.indexOf('.'));\n    let file_name = file_name.substring(0,\
    \ file_name.indexOf('.'));\n    let file_name = file_name.substring(0, file_name.indexOf('.'));\n\
    \    let file_name = file_name.substring(0, file_name.indexOf('.'));\n    let\
    \ file_name = file_name.", "    let file_name = file_name.toLowerCase();\n   \
    \ let file_name = file_name.trim();\n    let file_name = file_name.replace(/\\\
    ./g,'');\n    let file_name = file_name.replace(/[^a-z0-9\\.]/g,'');\n    let\
    \ file_name = file_name.substring(0,1);\n    let file_name = file_name.substring(0,1);\n\
    \    if (file_name.includes('.') && file_name.substring(0,1) != '' && file_name.substring(0,1)\
    \ != '_' && file_name.substring(0,1) != '-') {\n        if (file_name.substring(0,1)\
    \ >= 'a' && file_name.substring(0,1) <= 'z' || file_name.substring(0,1) >= 'A'\
    \ && file_name.substring(0,1) <= 'Z') {\n            if (file_name.substring(0,1)\
    \ >= '0' && file_name.substring(0,1) <= '9') {\n                return \"Yes\"\
    ;\n            } else {\n                return \"No\";\n            }\n     \
    \   } else {\n            return \"No\";\n        }\n    } else {\n        return\
    \ \"No\";\n    }\n}\n", "    if (file_name.length <= 3) {\n        return \"No\"\
    ;\n    }\n    if (file_name.indexOf('.') != -1) {\n        if (file_name.substring(0,\
    \ 1) != \"\") {\n            if (file_name.substring(0, 1) != \"a\" && file_name.substring(0,\
    \ 1) != \"A\" && file_name.substring(0, 1) != \"b\" && file_name.substring(0,\
    \ 1) != \"B\" && file_name.substring(0, 1) != \"c\" && file_name.substring(0,\
    \ 1) != \"C\" && file_name.substring(0, 1) != \"d\" && file_name.substring(0,\
    \ 1) != \"D\" && file_name.substring(0, 1) != \"e\" && file_name.substring(0,\
    \ 1) != \"E\" && file_name.substring(0, 1) != \"f\" && file_name.substring(0,\
    \ 1) != \"F\" && file_name.substring(0, 1) != \"g\" && file_name.substring(0,\
    \ 1) != \"G\" && file_name.substring(0, 1) != \"h\" && file_name.substring(0,\
    \ 1) != \"H\" && file_name.substring(0, 1) != \"i\" && file_name.substring(0,\
    \ 1) != \"I\" && file_name.substring(0, 1) != \"j\" && file_name.substring(0,\
    \ 1) != \"J\" && file_name.substring(0, 1) != \"k\" && file_name.substring(0,\
    \ 1) != \"K\" && file_name.substring(0, 1) != \"l\" && file_name.substring(0,\
    \ 1) != \"L\" && file_name.substring(0, 1) != \"m\" && file_name.substring(0,\
    \ 1) != \"M\" && file_name.substring(0, 1) != \"n\" && file_name.substring(0,\
    \ 1) != \"N\" && file_name.substring(0, 1) != \"o\" && file_name.substring(0,\
    \ 1) != \"O\" && file_name.substring(0, 1) != \"p\" && file_name.substring(0,\
    \ 1) != \"P\" && file_name.substring(0, 1) != \"q\" && file_name.substring(0,\
    \ 1) != \"Q\" && file_name.substring(0, 1) != \"r\" && file_name.substring(0,\
    \ 1) != \"R\" && file_name.substring(0, 1) != \"s\" && file_name.substring(0,\
    \ 1) != \"S\" && file_name.substring(0, 1) != \"t\" && file_name.substring(0,\
    \ 1) != \"T\" && file_name.substring(0, 1) != \"u\" && file_name.substring(0,\
    \ 1) != \"U\" && file_name.substring(0, 1) != \"v\" && file_name.substring(0,\
    \ 1) != \"V\" && file_name.substring(0, 1) != \"w\" && file_name.substring(0,\
    \ 1) != \"W\" && file_name.substring(0, 1) != \"x\" && file_name.substring(0,\
    \ 1) != \"X\" && file_name.substring(0, 1) != \"y\" && file_name.substring(0,\
    \ 1) != \"Y\" && file_name.substring(0, 1) != \"z\" && file_name.substring(0,\
    \ 1) != \"Z\") {\n                return \"No\";\n            }\n        }\n \
    \       if (file_name.substring(file_name.length - 1, file_name.length) != \"\
    .\") {\n            return \"No\";\n        }\n    }\n    return \"Yes\";\n}\n",
  "\tlet file_name = file_name.toLowerCase();\n\tlet dot_index = file_name.indexOf(\"\
    .\");\n\tlet dot_length = dot_index - file_name.indexOf(\"0\");\n\tlet first_letter\
    \ = file_name.charAt(0);\n\tlet letters_allowed = ['a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L',\
    \ 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\tlet\
    \ letters_not_allowed = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\t\
    if (dot_length == 0 || dot_index == 0 || first_letter != letters_allowed[0] ||\
    \ first_letter != letters_allowed[1] || first_letter != letters_allowed[2] ||\
    \ first_letter != letters_allowed[3] || first_letter != letters_allowed[4] ||\
    \ first_letter != letters_allowed[5] || first_letter != letters_allowed[6] ||\
    \ first_letter != letters_allowed[7] || first_letter != letters_allowed[8] ||\
    \ first_letter != letters_allowed[9] || first_letter != letters_allowed[10] ||\
    \ first_letter != letters_allowed[11] || first_letter != letters_allowed[12] ||\
    \ first_letter != letters_allowed[13] || first_letter != letters_allowed[14] ||\
    \ first_letter != letters_allowed[15] || first_letter != letters_allowed[16] ||\
    \ first_letter != letters_allowed[17] || first_letter != letters_allowed[18] ||\
    \ first_letter != letters_allowed[19] || first_letter != letters_allowed[20] ||\
    \ first_letter != letters_allowed[21] || first_letter != letters_allowed[22] ||\
    \ first_letter != letters_allowed[23] || first_letter != letters_allowed[24] ||\
    \ first_letter != letters_allowed[25] || first_letter != letters_allowed[26] ||\
    \ first_letter != letters_allowed[27] || first_letter != letters_allowed[28] ||\
    \ first_letter != letters_allowed[29] || first_letter != letters_allowed[30] ||\
    \ first_letter != letters_allowed[31] || first_letter != letters_allowed[32] ||\
    \ first_letter != letters_allowed[33] || first_letter != letters_allowed[34] ||\
    \ first_letter != letters_allowed[35] || first_letter != letters_allowed[36] ||\
    \ first_letter != letters_allowed[37] || first_letter != letters_allowed[38] ||\
    \ first_letter != letters_allowed[39] || first_letter != letters_allowed[40] ||\
    \ first_", "    let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (result === null) {\n        return \"No\";\n    } else {\n        return\
    \ \"Yes\";\n    }\n}\n", "    let result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n\
    \    if (result === null) return \"No\";\n    if (result.length > 3) return \"\
    No\";\n    if (file_name.indexOf(\".\") === -1) return \"No\";\n    if (file_name.substring(0,\
    \ 1) === \"\") return \"No\";\n    if (file_name.substring(file_name.indexOf(\"\
    .\") + 1) !== \"txt\" && \n        file_name.substring(file_name.indexOf(\".\"\
    ) + 1) !== \"exe\" && \n        file_name.substring(file_name.indexOf(\".\") +\
    \ 1) !== \"dll\") return \"No\";\n    return \"Yes\";\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let dot_index = file_name.indexOf(\".\");\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    let first_letter\
    \ = file_name.substring(0, dot_index);\n    let second_letter = file_name.substring(dot_index\
    \ + 1);\n    let first_letter = first_letter.toLowerCase();\n    let second_letter\
    \ = second_letter.toLowerCase();\n    if (first_letter != \"a\" && first_letter\
    \ != \"b\" && first_letter != \"c\" && first_letter != \"d\" && first_letter !=\
    \ \"e\" && first_letter != \"f\" && first_letter != \"g\" && first_letter != \"\
    h\" && first_letter != \"i\" && first_letter != \"j\" && first_letter != \"k\"\
    \ && first_letter != \"l\" && first_letter != \"m\" && first_letter != \"n\" &&\
    \ first_letter != \"o\" && first_letter != \"p\" && first_letter != \"q\" && first_letter\
    \ != \"r\" && first_letter != \"s\" && first_letter != \"t\" && first_letter !=\
    \ \"u\" && first_letter != \"v\" && first_letter != \"w\" && first_letter != \"\
    x\" && first_letter != \"y\" && first_letter != \"z\" && first_letter != \"A\"\
    \ && first_letter != \"B\" && first_letter != \"C\" && first_letter != \"D\" &&\
    \ first_letter != \"E\" && first_letter != \"F\" && first_letter != \"G\" && first_letter\
    \ != \"H\" && first_letter != \"I\" && first_letter != \"J\" && first_letter !=\
    \ \"K\" && first_letter != \"L\" && first_letter != \"M\" && first_letter != \"\
    N\" && first_letter != \"O\" && first_letter != \"P\" && first_letter != \"Q\"\
    \ && first_letter != \"R\" && first_letter != \"S\" && first_letter != \"T\" &&\
    \ first_letter != \"U\" && first_letter != \"V\" && first_letter != \"W\" && first_letter\
    \ != \"X\" && first_letter != \"Y\" && first_letter != \"Z\" && first_letter !=\
    \ \".\") {\n        return \"No\";\n    }\n    if (second_letter != \"txt\" &&\
    \ second_letter != \"exe\" && second_letter != \"dll\") {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "    var file_name = file_name.toLowerCase();\n\
    \    var result = file_name.match(/^[0-9]{3}\\.[a-z][a-z][a-z]$/);\n    if (result\
    \ === null) {\n        return \"No\";\n    } else {\n        return \"Yes\";\n\
    \    }\n}\n", "    var file_ext = file_name.split('.').pop();\n    var file_len\
    \ = file_name.length;\n    var file_no_digits = file_name.replace(/[^0-9]/g, '');\n\
    \    var file_no_empty = file_no_digits.split('').filter(function(val){\n    \
    \    return val.length > 0;\n    });\n    var file_no_empty_first = file_no_empty[0];\n\
    \    var file_no_empty_first_letter = file_no_empty_first[0];\n    var file_no_empty_first_letter_upper\
    \ = file_no_empty_first_letter.toUpperCase();\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter.toLowerCase();\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/[^a-z]/g, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/g, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_first_letter_lower.replace(/^[a-z]/, '');\n    var file_no_empty_first_letter_lower\
    \ = file_no_empty_", "    var file_ext = file_name.split('.').pop();\n    var\
    \ file_ext_length = file_ext.length;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n    var file_ext_length = file_ext_length\
    \ - 1;\n    var file_ext_length = file_ext_length - 1;\n    var file_ext_length\
    \ = file_ext_length - 1;\n    var file_ext_length = file_ext_length - 1;\n   \
    \ var file_ext_length = file_ext_length - 1;\n", "    let file_name = file_name.toLowerCase();\n\
    \    let dot_index = file_name.indexOf(\".\");\n    if (dot_index == -1) {\n \
    \       return \"No\";\n    }\n    let first_letter = file_name.substring(0, dot_index);\n\
    \    let last_letter = file_name.substring(dot_index + 1);\n    let letters =\
    \ first_letter.split(\"\");\n    let letters_count = letters.length;\n    if (letters_count\
    \ > 3 || letters_count == 0) {\n        return \"No\";\n    }\n    if (letters.indexOf(\"\
    0\") > -1 || letters.indexOf(\"9\") > -1) {\n        return \"No\";\n    }\n \
    \   if (letters.indexOf(\".\") > -1 && letters.indexOf(\"0\") > -1) {\n      \
    \  return \"No\";\n    }\n    if (letters.indexOf(\".\") > -1 && letters.indexOf(\"\
    a\") > -1 && letters.indexOf(\"z\") > -1) {\n        return \"No\";\n    }\n \
    \   if (letters.indexOf(\".\") > -1 && letters.indexOf(\"A\") > -1 && letters.indexOf(\"\
    Z\") > -1) {\n        return \"No\";\n    }\n    if (letters.indexOf(\".\") >\
    \ -1 && letters.indexOf(\"a\") > -1 && letters.indexOf(\"z\") > -1 && letters.indexOf(\"\
    A\") > -1 && letters.indexOf(\"Z\") > -1) {\n        return \"No\";\n    }\n \
    \   if (letters.indexOf(\".\") > -1 && letters.indexOf(\"A\") > -1 && letters.indexOf(\"\
    Z\") > -1 && letters.indexOf(\"a\") > -1 && letters.indexOf(\"z\") > -1 && letters.indexOf(\"\
    A\") > -1 && letters.indexOf(\"Z\") > -1) {\n        return \"No\";\n    }\n \
    \   if (letters.indexOf(\".\") > -1 && letters.indexOf(\"a\") > -1 && letters.indexOf(\"\
    z\") > -1 && letters.indexOf(\"A\") > -1 && letters.indexOf(\"Z\") > -1 && letters.indexOf(\"\
    a\") > -1 && letters.indexOf(\"z\") > -1 && letters.indexOf(\"A\") > -1 && letters.indexOf(\"\
    Z\") > -1) {\n        return \"No\";\n    }\n    if (letters.indexOf(\".\") >\
    \ -1 && letters.indexOf(\"A\") > -1 && letters.indexOf(\"Z\") > -1 && letters.indexOf(\"\
    a\") > -1 && letters.indexOf(\"z\") > -1 && letters.indexOf(\"A\") > -1 && letters.indexOf(\"\
    Z\") > -1 && letters.indexOf(\"a\") > -1 && letters.indexOf(\"z\") > -1 && letters.indexOf(\"\
    A\") > -1 && letters.indexOf(\"Z\") > -1) {\n        return \"No\";\n    }\n \
    \   if (letters.indexOf(\".\") > -1 && letters.indexOf", "    var pattern = /^[0-9]{3}\\\
    .[a-z][a-z][a-z]$/;\n    var result = pattern.test(file_name);\n    return result;\n\
    }\n", "    let result = file_name.split('.');\n    if (result.length != 3 || result[0].length\
    \ != 1 || result[1].length != 1 || result[2].length != 1 || result[0].charAt(0)\
    \ != 'a' || result[0].charAt(0) != 'A' || result[0].charAt(1) != 'b' || result[0].charAt(1)\
    \ != 'B' || result[0].charAt(2) != 'c' || result[0].charAt(2) != 'C' || result[0].charAt(3)\
    \ != 'd' || result[0].charAt(3) != 'D' || result[0].charAt(4) != 'e' || result[0].charAt(4)\
    \ != 'E' || result[0].charAt(5) != 'f' || result[0].charAt(5) != 'F' || result[0].charAt(6)\
    \ != 'g' || result[0].charAt(6) != 'G' || result[0].charAt(7) != 'h' || result[0].charAt(7)\
    \ != 'H' || result[0].charAt(8) != 'i' || result[0].charAt(8) != 'I' || result[0].charAt(9)\
    \ != 'j' || result[0].charAt(9) != 'J' || result[0].charAt(10) != 'k' || result[0].charAt(10)\
    \ != 'K' || result[0].charAt(11) != 'l' || result[0].charAt(11) != 'L' || result[0].charAt(12)\
    \ != 'm' || result[0].charAt(12) != 'M' || result[0].charAt(13) != 'n' || result[0].charAt(13)\
    \ != 'N' || result[0].charAt(14) != 'o' || result[0].charAt(14) != 'O' || result[0].charAt(15)\
    \ != 'p' || result[0].charAt(15) != 'P' || result[0].charAt(16) != 'q' || result[0].charAt(16)\
    \ != 'Q' || result[0].charAt(17) != 'r' || result[0].charAt(17) != 'R' || result[0].charAt(18)\
    \ != 's' || result[0].charAt(18) != 'S' || result[0].charAt(19) != 't' || result[0].charAt(19)\
    \ != 'T' || result[0].charAt(20) != 'u' || result[0].charAt(20) != 'U' || result[0].charAt(21)\
    \ != 'v' || result[0].charAt(21) != 'V' || result[0].charAt(22) != 'w' || result[0].charAt(22)\
    \ != 'W' || result[0].charAt(23) != 'x' || result[0].charAt(23) != 'X' || result[0].charAt(24)\
    \ != 'y' || result[0].charAt(24) != 'Y' || result[0].charAt(25) != 'z' || result[0].charAt(25)\
    \ != 'Z') {\n        return \"No\";\n    } else {\n        return \"Yes\";\n \
    \   }\n}\n", "    if (file_name.length < 3) {\n        return \"No\";\n    }\n\
    \    if (file_name.indexOf(\".\") === -1) {\n        return \"No\";\n    }\n \
    \   if (file_name.substring(0, 1) !== \".\") {\n        return \"No\";\n    }\n\
    \    if (file_name.substring(file_name.length - 1) !== \"txt\" &&\n        file_name.substring(file_name.length\
    \ - 1) !== \"exe\" &&\n        file_name.substring(file_name.length - 1) !== \"\
    dll\") {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let file_name\
    \ = file_name.toLowerCase();\n    let file_ext = file_name.split('.').pop();\n\
    \    let file_ext = file_ext.toLowerCase();\n    if (file_name.includes('.') &&\
    \ file_name.split('.')[0].length > 3 && file_ext.length == 1 && file_name.split('.')[0][0]\
    \ <= 'z' && file_name.split('.')[0][0] <= 'z') {\n        return 'Yes';\n    }\
    \ else {\n        return 'No';\n    }\n}\n", "    var file_name_length = file_name.length;\n\
    \    if (file_name_length < 3 || file_name_length > 9) {\n        return \"No\"\
    ;\n    }\n    if (file_name.indexOf(\".\") === -1) {\n        return \"No\";\n\
    \    }\n    var first_letter = file_name.charAt(0);\n    var last_letter = file_name.charAt(file_name_length\
    \ - 1);\n    if (first_letter < \"a\" || first_letter > \"z\") {\n        return\
    \ \"No\";\n    }\n    if (last_letter < \"a\" || last_letter > \"z\") {\n    \
    \    return \"No\";\n    }\n    if (file_name.indexOf(\".\") !== -1) {\n     \
    \   var dot_index = file_name.indexOf(\".\");\n        if (dot_index === 0 ||\
    \ dot_index === file_name.length - 1) {\n            return \"No\";\n        }\n\
    \        var dot_string = file_name.substring(dot_index + 1);\n        var dot_string_length\
    \ = dot_string.length;\n        if (dot_string_length < 1 || dot_string_length\
    \ > 3) {\n            return \"No\";\n        }\n        if (dot_string !== \"\
    txt\" && dot_string !== \"exe\" && dot_string !== \"dll\") {\n            return\
    \ \"No\";\n        }\n    }\n    return \"Yes\";\n}\n", "\tlet file_name = file_name.toLowerCase();\n\
    \tlet file_name = file_name.trim();\n\tlet file_name = file_name.replace(/\\./g,'');\n\
    \tlet file_name = file_name.replace(/[^0-9a-zA-Z\\.]/g,'');\n\tlet file_name =\
    \ file_name.substr(0,3);\n\tlet file_name = file_name.substr(0,1);\n\tif (file_name\
    \ === '' || file_name === '0' || file_name === '00' || file_name === '000' ||\
    \ file_name === '0000' || file_name === '00000' || file_name === '000000' || file_name\
    \ === '0000000' || file_name === '00000000' || file_name === '000000000' || file_name\
    \ === '0000000000' || file_name === '00000000000' || file_name === '000000000000'\
    \ || file_name === '0000000000000' || file_name === '00000000000000' || file_name\
    \ === '000000000000000' || file_name === '0000000000000000' || file_name === '00000000000000000'\
    \ || file_name === '000000000000000000' || file_name === '0000000000000000000'\
    \ || file_name === '00000000000000000000' || file_name === '000000000000000000000'\
    \ || file_name === '0000000000000000000000' || file_name === '00000000000000000000000'\
    \ || file_name === '000000000000000000000000' || file_name === '0000000000000000000000000'\
    \ || file_name === '00000000000000000000000000' || file_name === '000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000' || file_name === '00000000000000000000000000000'\
    \ || file_name === '000000000000000000000000000000' || file_name === '0000000000000000000000000000000'\
    \ || file_name === '00000000000000000000000000000000' || file_name === '000000000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000000000' || file_name === '00000000000000000000000000000000000'\
    \ || file_name === '000000000000000000000000000000000000' || file_name === '0000000000000000000000000000000000000'\
    \ || file_name === '00000000000000000000000000000000000000' || file_name === '000000000000000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000000000000000' || file_name ===\
    \ '00000000000000000000000000000000000000000' || file_name === '000000000000000000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000000000000000000' || file_name\
    \ === '00000000000000000000000000000000000000000000' || file_name === '000000000000000000000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000000000000000000000' || file_name\
    \ === '00000000000000000000000000000000000000000000000' || file_name === '000000000000000000000000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000000000000000000000000' || file_name\
    \ === '00000000000000000000000000000000000000000000000000' || file_name === '000000000000000000000000000000000000000000000000000'\
    \ || file_name === '0000000000000000000000000000000000000000000000000000' || file_name\
    \ === '00000000000000000000000000000000000000000000000000000' || file_name ===\
    \ '000000000000000000000000000000000000000000000000000000' || file_name === '0000000000000000000000000000000000000000000000000000000'\
    \ || file_name === '000000000000000000000000", "    let result = file_name.match(/^[0-9]{3}\\\
    .[a-z][a-z][a-z]$/);\n    if (result == null) {\n        return \"No\";\n    }\
    \ else {\n        return \"Yes\";\n    }\n}\n", "\tlet file_name_length = file_name.length;\n\
    \tif (file_name_length < 3 || file_name_length > 10) {\n\t\treturn \"No\";\n\t\
    }\n\tlet first_char = file_name.charAt(0);\n\tlet last_char = file_name.charAt(file_name_length\
    \ - 1);\n\tif (first_char < 'a' || first_char > 'z' || first_char < 'A' || first_char\
    \ > 'Z' || last_char < 'a' || last_char > 'z' || last_char < 'A' || last_char\
    \ > 'Z') {\n\t\treturn \"No\";\n\t}\n\tlet dot_position = file_name.indexOf(\"\
    .\");\n\tif (dot_position == -1) {\n\t\treturn \"No\";\n\t}\n\tlet dot_substring_length\
    \ = dot_position - file_name.indexOf(\".\") + 1;\n\tif (dot_substring_length <\
    \ 1 || dot_substring_length > 3) {\n\t\treturn \"No\";\n\t}\n\tlet dot_substring_char\
    \ = file_name.substring(dot_position + 1, dot_position + dot_substring_length);\n\
    \tif (dot_substring_char != \"\" && dot_substring_char != \"txt\" && dot_substring_char\
    \ != \"exe\" && dot_substring_char != \"dll\") {\n\t\treturn \"No\";\n\t}\n\t\
    return \"Yes\";\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

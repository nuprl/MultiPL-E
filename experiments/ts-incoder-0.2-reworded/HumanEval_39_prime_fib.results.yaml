language: ts
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 17) {\n    return prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7);\n  }\n  return prime_fib(n - 1) * prime_fib(n - 2)\
    \ * prime_fib(n - 3) * prime_fib(n - 5) * prime_fib(n - 7);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsee3w040.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsee3w040.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphs5s1g4b.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphs5s1g4b.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n !== n) {\n    return n;\n  }\n  return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1barp2lv.js:78:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1barp2lv.js:89:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let i:\
    \ number = 0;\n  while (i < n) {\n    fib = fibonacci(i);\n    prime = prime +\
    \ fib;\n    i++;\n  }\n  return prime;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyme2rs_x.ts(17,11): error TS2304: Cannot find name
    ''fibonacci''.

    '
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 5) return prime_fib(n - 3) + prime_fib(n -\
    \ 5);\n  if (n < 7) return prime_fib(n - 7) + prime_fib(n - 9);\n  return prime_fib(n\
    \ - 11) + prime_fib(n - 13);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxakeavzk.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxakeavzk.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n  if (n\
    \ % 3 === 0) {\n    return prime_fib(n - 2) + 1;\n  }\n  if (n % 5 === 0) {\n\
    \    return prime_fib(n - 3) + 1;\n  }\n  return prime_fib(n - 5) + 1;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmr0v2t_h.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmr0v2t_h.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let prime_found:\
    \ boolean = false;\n  let prime_fib: number = 0;\n  while (!prime_found) {\n \
    \   prime_found = true;\n    for (let i = 2; i <= n; i++) {\n      if (fib % i\
    \ === 0) {\n        prime_found = false;\n        break;\n      }\n    }\n   \
    \ if (prime_found) {\n      prime_fib = fib;\n      prime = i;\n    }\n    fib\
    \ = fib + 1;\n  }\n  return prime_fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7bkzg5uh.ts(27,15): error TS2304: Cannot find name
    ''i''.

    '
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n === 11) {\n \
    \   return 11;\n  }\n  if (n === 13) {\n    return 13;\n  }\n  if (n === 17) {\n\
    \    return 17;\n  }\n  if (n === 19) {\n    return 19;\n  }\n  if (n === 23)\
    \ {\n    return 23;\n  }\n  if (n === 29) {\n    return 29;\n  }\n  if (n ===\
    \ 31) {\n    return 31;\n  }\n  if (n === 37) {\n    return 37;\n  }\n  if (n\
    \ === 41) {\n    return 41;\n  }\n  if (n === 43) {\n    return 43;\n  }\n  if\
    \ (n === 47) {\n    return 47;\n  }\n  if (n === 53) {\n    return 53;\n  }\n\
    \  if (n === 59) {\n    return 59;\n  }\n  if (n === 61) {\n    return 61;\n \
    \ }\n  if (n === 67) {\n    return 67;\n  }\n  if (n === 71) {\n    return 71;\n\
    \  }\n  if (n === 79) {\n    return 79;\n  }\n  if (n === 83) {\n    return 83;\n\
    \  }\n  if (n === 89) {\n    return 89;\n  }\n  if (n === 97) {\n    return 97;\n\
    \  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpotne1rz2.js:93:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpotne1rz2.js:104:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number[] = [];\n  let a = 0;\n  let b = 0;\n \
    \ let i = 0;\n  while (i < n) {\n    fib[i] = a + b;\n    a = b;\n    b = fib[i];\n\
    \    i++;\n  }\n  return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvjxbupd2.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvjxbupd2.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 === 0 && n % 3 === 0) {\n    return prime_fib(n / 2);\n\
    \  }\n  if (n % 2 === 0 || n % 3 === 0) {\n    return prime_fib(n / 3);\n  }\n\
    \  if (n % n % 2 === 0) {\n    return prime_fib(n / 2);\n  }\n  if (n % n % 3\
    \ === 0) {\n    return prime_fib(n / 3);\n  }\n  return prime_fib(n / 3); // n\
    \ is prime\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphvqx03ds.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphvqx03ds.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n % 2 == 0) return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  if (n % 3 == 0) return prime_fib(n - 3) + prime_fib(n - 4);\n  if (n\
    \ % 5 == 0) return prime_fib(n - 5) + prime_fib(n - 6);\n  return prime_fib(n\
    \ - 7) + prime_fib(n - 8);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp7p6ahs00.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7p6ahs00.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 3) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgq5199zm.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgq5199zm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx8bhqkf4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx8bhqkf4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 7) return prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n  return prime_fib(n - 7) + prime_fib(n - 9);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1cxt0eou.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1cxt0eou.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n === 73) {\n    return 73;\n  }\n  if (n === 79) {\n    return 79;\n\
    \  }\n  if (n === 83) {\n    return 83;\n  }\n  if (n === 89) {\n    return 89;\n\
    \  }\n  if (n === 97) {\n    return 97;\n  }\n  if (n === 101) {\n    return 101;\n\
    \  }\n  if (n === 103)\n    return 103;\n  if (n === 105)\n    return 105;\n \
    \ if (n === 107)\n    return 107;\n  if (n === 109)\n    return 109;\n  if (n\
    \ === 113)\n    return 113;\n  if (n === 127)\n    return 127;\n  if (n === 131)\n\
    \    return 131;\n  if (n === 137)\n    return 137;\n  if (n === 139)\n    return\
    \ 139;\n  if (n === 149)\n    return 149;\n  if (n === 151)\n    return 151;\n\
    \  if (n === 157)\n    return 157;\n  if (n === 163)\n    return 163;\n  if (n\
    \ === 167)\n    return 167;\n  if (n === 173)\n    return 173;\n  if (n === 179)\n\
    \    return 179;\n  if (n === 181)\n    return 181;\n  if (n === 191)\n    return\
    \ 191;\n  if (n === 193)\n    return 193;\n  if (n === 197)\n    return 197;\n\
    \  if (n === 199)\n    return 199;\n  if (n === 203)\n    return 203;\n  if (n\
    \ === 207)\n    return 207;\n  if (n === 209)\n    return 209;\n  if (n === 211)\n\
    \    return 211;\n  if (n === 213)\n    return 213;\n  if (n === 217)\n    return\
    \ 217;\n  if (n === 223)\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpojknjbcp.ts(162,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 9) return prime_fib(n - 3) + prime_fib(n -\
    \ 5) + prime_fib(n - 7);\n  if (n < 18) return prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 19);\n  return prime_fib(n - 15) + prime_fib(n - 23);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpq_ziuefx.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq_ziuefx.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2);\n  }\n  return\
    \ prime_fib(n - 3) + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdsa10wlo.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdsa10wlo.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1);\n  if (n ===\
    \ 7) return prime_fib(n - 2);\n  if (n % 2 === 1) return prime_fib(n - 3) + prime_fib(n\
    \ - 4);\n  return prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3qgiry27.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qgiry27.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n % 2 == 0) return prime_fib(2 * n - 1);\n  if (n\
    \ % 3 == 0) return prime_fib(3 * n - 2);\n  if (n % 5 == 0) return prime_fib(5\
    \ * n - 4);\n  return prime_fib(5 * n - 6);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpthm6xfo7.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpthm6xfo7.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n === 11) {\n \
    \   return 11;\n  }\n  if (n === 13) {\n    return 13;\n  }\n  if (n === 17) {\n\
    \    return 17;\n  }\n  if (n === 19) {\n    return 19;\n  }\n  if (n === 23)\
    \ {\n    return 23;\n  }\n  if (n === 29) {\n    return 29;\n  }\n  if (n ===\
    \ 31) {\n    return 31;\n  }\n  if (n === 37) {\n    return 37;\n  }\n  if (n\
    \ === 41) {\n    return 41;\n  }\n  if (n === 43) {\n    return 43;\n  }\n  if\
    \ (n === 47) {\n    return 47;\n  }\n  if (n === 53) {\n    return 53;\n  }\n\
    \  if (n === 59) {\n    return 59;\n  }\n  if (n === 61) {\n    return 61;\n \
    \ }\n  if (n === 67) {\n    return 67;\n  }\n  if (n === 71) {\n    return 71;\n\
    \  }\n  if (n === 73) {\n    return 73;\n  }\n  if (n === 79) {\n    return 79;\n\
    \  }\n  if (n === 83) {\n    return 83;\n  }\n  if (n === 89) {\n    return 89;\n\
    \  }\n  if (n === 97) {\n    return 97;\n  }\n  return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp7k0d2mms.js:96:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7k0d2mms.js:107:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let i:\
    \ number;\n  for (i = 2; i <= n; i++) {\n    prime = i;\n    fib = fibonacci(i);\n\
    \    if (fib === prime) {\n      return prime;\n    }\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsj0fb8xg.ts(18,11): error TS2304: Cannot find name
    ''fibonacci''.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let i:\
    \ number;\n  for (i = 2; i <= n; i++) {\n    prime = i;\n    fib = fibonacci(i);\n\
    \    if (fib === prime) {\n      return prime;\n    }\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsj0fb8xg.ts(18,11): error TS2304: Cannot find name
    ''fibonacci''.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 2) + prime_fib(n / 3);\n \
    \ return prime_fib(n / 3) + prime_fib(n / 2) + prime_fib(n / 3);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpl_bdn693.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl_bdn693.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 2 - 3);\n  return prime_fib(n\
    \ / 5) + prime_fib(n / 7) + prime_fib(n / 11) + prime_fib(n / 13);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpersfslth.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpersfslth.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n  if (n === 10) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6);\n  if (n === 15) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8);\n  if (n === 20) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9) + prime_fib(n - 10);\n  if (n === 30) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n\
    \ - 10) + prime_fib(n - 11) + prime_fib(n - 12);\n  if (n === 40) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9) + prime_fib(n - 10) + prime_fib(n - 11) + prime_fib(n - 12) + prime_fib(n\
    \ - 13) + prime_fib(n - 14);\n  if (n === 50) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n\
    \ - 10) + prime_fib(n - 11) + prime_fib(n - 12) + prime_fib(n - 13) + prime_fib(n\
    \ - 14) + prime_fib(n - 15\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpka9cf8kd.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpka9cf8kd.ts(22,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpka9cf8kd.ts(40,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n  if (n === 6) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5);\n  if (n === 7) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6);\n  if (n ===\
    \ 8) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7);\n  if (n ===\
    \ 9) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n\
    \ - 8);\n  if (n === 10) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7) + prime_fib(n - 8) + prime_fib(n - 9);\n  if (n === 11) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9) + prime_fib(n - 10);\n  if (n === 12) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n\
    \ - 10) + prime_fib(n - 11) + prime_fib(n - 12);\n  if (n === 13) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpaw502qi3.ts(24,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpaw502qi3.ts(42,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 1;\n  for (let\
    \ i = 2; i <= n; i++) {\n    fib += prime;\n    prime = fib;\n  }\n  return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxugci_fj.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxugci_fj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2);\n  }\n  return\
    \ prime_fib(n - 3) + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdsa10wlo.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdsa10wlo.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n !== n) {\n    return n;\n  }\n  return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1barp2lv.js:78:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1barp2lv.js:89:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n  }\n  if (n % 5 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 5) +\
    \ prime_fib(n - 7) + prime_fib(n - 9);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp29g_4rld.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp29g_4rld.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let i:\
    \ number;\n  for (i = 2; i <= n; i++) {\n    prime = i;\n    fib = fib + i;\n\
    \    if (fib > n) {\n      prime = fib;\n    }\n    if (prime > n) {\n      prime\
    \ = fib;\n    }\n  }\n  return prime;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpncr5j9gr.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpncr5j9gr.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ prime_fib(n - 1) + 1;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 2)\
    \ + 1;\n  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 3) + 1;\n  }\n  return\
    \ prime_fib(n - 4) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpf0a7jmh3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf0a7jmh3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  return prime_fib(n - 3) + prime_fib(n - 5) + 1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9ri76p39.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ri76p39.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  if (n % 3 == 0) return prime_fib(n - 3) + prime_fib(n - 5);\n  return\
    \ prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpbjqp_r6l.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbjqp_r6l.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number[] = [];\n  let a = 1;\n  let b = 1;\n \
    \ let c;\n  let i;\n  for (i = 2; i <= n; i++) {\n    c = a + b;\n    fib.push(c);\n\
    \    a = b;\n    b = c;\n  }\n  return fib[fib.length - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmp2ug9txwj.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2ug9txwj.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number[] = [];\n  let a = 1;\n  let b = 1;\n \
    \ let c;\n  let i;\n  for (i = 2; i <= n; i++) {\n    c = a + b;\n    a = b;\n\
    \    b = c;\n    fib.push(c);\n  }\n  return fib[n];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmpl1gajcmg.js:29:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl1gajcmg.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyz33ky1e.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz33ky1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 3) + 1;\n  if (n % 5 == 0) return prime_fib(n - 5) + 1;\n  return\
    \ prime_fib(n - 6);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpftndpcqj.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpftndpcqj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 7) return prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7);\n  return prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpi4rbyebw.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi4rbyebw.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n === 11) return prime_fib(11);\n  if (n === 13)\
    \ return prime_fib(13);\n  if (n === 17) return prime_fib(17);\n  if (n === 19)\
    \ return prime_fib(19);\n  if (n === 23) return prime_fib(23);\n  if (n === 29)\
    \ return prime_fib(29);\n  if (n === 31) return prime_fib(31);\n  if (n === 37)\
    \ return prime_fib(37);\n  if (n === 41) return prime_fib(41);\n  if (n === 43)\
    \ return prime_fib(43);\n  if (n === 47) return prime_fib(47);\n  if (n === 53)\
    \ return prime_fib(53);\n  if (n === 59) return prime_fib(59);\n  if (n === 61)\
    \ return prime_fib(61);\n  if (n === 67) return prime_fib(67);\n  if (n === 73)\
    \ return prime_fib(73);\n  if (n === 79) return prime_fib(79);\n  if (n === 83)\
    \ return prime_fib(83);\n  if (n === 89) return prime_fib(89);\n  if (n === 97)\
    \ return prime_fib(97);\n  return prime_fib(97);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpac_soc37.js:66:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpac_soc37.js:77:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n === 5) return prime_fib(5);\n  if (n === 10) return prime_fib(10);\n\
    \  if (n === 15) return prime_fib(15);\n  if (n === 20) return prime_fib(20);\n\
    \  if (n === 25) return prime_fib(25);\n  if (n === 30) return prime_fib(30);\n\
    \  if (n === 35) return prime_fib(35);\n  if (n === 40) return prime_fib(40);\n\
    \  if (n === 45) return prime_fib(45);\n  if (n === 50) return prime_fib(50);\n\
    \  if (n === 55) return prime_fib(55);\n  if (n === 60) return prime_fib(60);\n\
    \  if (n === 65) return prime_fib(65);\n  if (n === 70) return prime_fib(70);\n\
    \  if (n === 75) return prime_fib(75);\n  if (n === 80) return prime_fib(80);\n\
    \  if (n === 85) return prime_fib(85);\n  if (n === 90) return prime_fib(90);\n\
    \  if (n === 95) return prime_fib(95);\n  if (n === 100) return prime_fib(100);\n\
    \  if (n === 105) return prime_fib(105);\n  if (n === 110) return prime_fib(110);\n\
    \  if (n === 115) return prime_fib(115);\n  if (n === 120) return prime_fib(120);\n\
    \  if (n === 125) return prime_fib(125);\n  if (n === 130) return prime_fib(130);\n\
    \  if (n === 135) return prime_fib(135);\n  if (n === 140) return prime_fib(140);\n\
    \  if (n === 145) return prime_fib(145);\n  if (n === 150) return prime_fib(150);\n\
    \  if (n === 155) return prime_fib(155);\n  if (n === 160) return prime_fib(160);\n\
    \  if (n === 165) return prime_fib(165);\n  if (n === 170) return prime_fib(170);\n\
    \  if (n === 175) return prime_fib(175);\n  if (n === 180) return prime_fib(180);\n\
    \  if (n === 185) return prime_fib(185);\n  if (n === 190) return prime_fib(190);\n\
    \  if (n === 195) return prime_fib(195);\n  if (n === 200) return prime_fib(200);\n\
    \  if (n === 205) return prime_fib(205);\n  if (n === 210) return prime_fib(210);\n\
    \  if (n === 215) return prime_fib(215);\n  if (n === 220) return prime_fib(220);\n\
    \  if (n === 225) return prime_fib(\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwy3ori2h.ts(60,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpwy3ori2h.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let prime_found\
    \ = false;\n  for (let i = 2; i <= n; i++) {\n    prime_found = false;\n    for\
    \ (let j = 2; j < i; j++) {\n      if (i % j === 0) {\n        prime_found = true;\n\
    \        break;\n      }\n    }\n    if (!prime_found) {\n      prime = i;\n \
    \     fib = i;\n      break;\n    }\n  }\n  return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_2q3i6ef.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_2q3i6ef.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n % 2 == 0) return prime_fib(2 * n);\n  if (n %\
    \ 3 == 0) return prime_fib(3 * n + 1);\n  if (n % 5 == 0) return prime_fib(5 *\
    \ n + 1);\n  return prime_fib(n / 2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmped1vvrfw.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmped1vvrfw.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n % 2 === 1) {\n\
    \    return prime_fib(n - 1) + 1;\n  }\n  if (n % 2 === 2) {\n    return prime_fib(n\
    \ - 2) + 1;\n  }\n  if (n % 3 === 3) {\n    return prime_fib(n - 3) + 1;\n  }\n\
    \  if (n % 5 === 5) {\n    return prime_fib(n - 5) + 1;\n  }\n  if (n % 7 <= 0)\
    \ {\n    return prime_fib(n - 7) + 1;\n  }\n  return prime_fib(n - 5) + 1;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpj6qsvt3o.js:48:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj6qsvt3o.js:59:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738722
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let i:\
    \ number;\n  for (i = 2; i <= n; i++) {\n    prime = i;\n    fib = fib + i;\n\
    \    if (fib > n) {\n      break;\n    }\n  }\n  return prime;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0a4vvzf0.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0a4vvzf0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n === 11) {\n \
    \   return 11;\n  }\n  if (n === 13) {\n    return 13;\n  }\n  if (n === 17) {\n\
    \    return 17;\n  }\n  if (n === 19) {\n    return 19;\n  }\n  if (n === 23)\
    \ {\n    return 23;\n  }\n  if (n === 29) {\n    return 29;\n  }\n  if (n ===\
    \ 31) {\n    return 31;\n  }\n  if (n === 37) {\n    return 37;\n  }\n  if (n\
    \ === 41) {\n    return 41;\n  }\n  if (n === 43) {\n    return 43;\n  }\n  if\
    \ (n === 47) {\n    return 47;\n  }\n  if (n === 53) {\n    return 53;\n  }\n\
    \  if (n === 59) {\n    return 59;\n  }\n  if (n === 61) {\n    return 61;\n \
    \ }\n  if (n === 67) {\n    return 67;\n  }\n  if (n === 71) {\n    return 71;\n\
    \  }\n  if (n === 79) {\n    return 79;\n  }\n  if (n === 83) {\n    return 83;\n\
    \  }\n  if (n === 89) {\n    return 89;\n  }\n  if (n === 97) {\n    return 97;\n\
    \  }\n  return prime_fib(n - 1);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpttt_8psx.js:93:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpttt_8psx.js:104:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 === 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp5hjlql3v.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5hjlql3v.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \ }\n  return prime_fib(n - 5) + prime_fib(n - 6);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmps0ihkykx.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps0ihkykx.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 3);\n  return prime_fib(n\
    \ / 5) + prime_fib(n / 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppj9g7hkt.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppj9g7hkt.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n === 5) return prime_fib(n - 1) + 1;\n  if (n % 2 === 0) return\
    \ prime_fib(n - 1) + 1;\n  if (n % 5 === 0) return prime_fib(n - 1) + 1;\n  if\
    \ (n % 3 === 0) return prime_fib(n - 1) + 1;\n  return prime_fib(n - 1) + 1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3e_s1rvz.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3e_s1rvz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 3);\n  return prime_fib(n\
    \ / 5) + prime_fib(n / 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppj9g7hkt.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppj9g7hkt.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyz33ky1e.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz33ky1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n === 11) {\n \
    \   return 11;\n  }\n  if (n === 13) {\n    return 13;\n  }\n  if (n === 17) {\n\
    \    return 17;\n  }\n  if (n === 19) {\n    return 19;\n  }\n  if (n === 23)\
    \ {\n    return 23;\n  }\n  if (n === 29) {\n    return 29;\n  }\n  if (n ===\
    \ 31) {\n    return 31;\n  }\n  if (n === 37) {\n    return 37;\n  }\n  if (n\
    \ === 41) {\n    return 41;\n  }\n  if (n === 43) {\n    return 43;\n  }\n  if\
    \ (n === 47) {\n    return 47;\n  }\n  if (n === 53) {\n    return 53;\n  }\n\
    \  if (n === 59) {\n    return 59;\n  }\n  if (n === 61) {\n    return 61;\n \
    \ }\n  if (n === 67) {\n    return 67;\n  }\n  if (n === 71) {\n    return 71;\n\
    \  }\n  if (n === 73) {\n    return 73;\n  }\n  if (n === 79) {\n    return 79;\n\
    \  }\n  if (n === 83) {\n    return 83;\n  }\n  if (n === 89) {\n    return 89;\n\
    \  }\n  if (n === 97) {\n    return 97;\n  }\n  return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp7k0d2mms.js:96:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7k0d2mms.js:107:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 === 0 || n % 3 === 0) {\n    return n;\n  }\n  let i =\
    \ Math.floor(Math.sqrt(n));\n  if (i === 1) {\n    return n;\n  }\n  return prime_fib(i\
    \ - 1) + prime_fib(i - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_ur6yuxl.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ur6yuxl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 3) + 1;\n  if (n % 5 == 0) return prime_fib(n - 5) + 1;\n  return\
    \ prime_fib(n - 1) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx2n2r3y1.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2n2r3y1.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 7) return prime_fib(n - 3) + prime_fib(n\
    \ - 5);\n  return prime_fib(n - 7) + prime_fib(n - 9);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1cxt0eou.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1cxt0eou.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n === 5) return prime_fib(5);\n  if (n % 2 == 0) return prime_fib(3\
    \ * n + 1) - 1;\n  if (n % 3 == 0) return prime_fib(3 * n + 3);\n  if (n % 5 ==\
    \ 0) return prime_fib(5 * n + 5);\n  return prime_fib(n / 5) * prime_fib(n % 5);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpe_r5q7wh.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe_r5q7wh.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n === 73) {\n    return 73;\n  }\n  if (n === 79) {\n    return 79;\n\
    \  }\n  if (n === 83) {\n    return 83;\n  }\n  if (n === 89) {\n    return 89;\n\
    \  }\n  if (n === 97) {\n    return 97;\n  }\n  if (n === 101) {\n    return 101;\n\
    \  }\n  if (n === 103)\n    return 103;\n  if (n === 105)\n    return 105;\n \
    \ if (n === 107)\n    return 107;\n  if (n === 109)\n    return 109;\n  if (n\
    \ === 113)\n    return 113;\n  if (n === 127)\n    return 127;\n  if (n === 131)\n\
    \    return 131;\n  if (n === 137)\n    return 137;\n  if (n === 139)\n    return\
    \ 139;\n  if (n === 149)\n    return 149;\n  if (n === 151)\n    return 151;\n\
    \  if (n === 157)\n    return 157;\n  if (n === 163)\n    return 163;\n  if (n\
    \ === 167)\n    return 167;\n  if (n === 173)\n    return 173;\n  if (n === 179)\n\
    \    return 179;\n  if (n === 181)\n    return 181;\n  if (n === 191)\n    return\
    \ 191;\n  if (n === 193)\n    return 193;\n  if (n === 197)\n    return 197;\n\
    \  if (n === 199)\n    return 199;\n  if (n === 203)\n    return 203;\n  if (n\
    \ === 207)\n    return 207;\n  if (n === 209)\n    return 209;\n  if (n === 211)\n\
    \    return 211;\n  if (n === 213)\n    return 213;\n  if (n === 217)\n    return\
    \ 217;\n  if (n === 223)\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpojknjbcp.ts(162,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n === 11) return prime_fib(11);\n  if (n === 13)\
    \ return prime_fib(13);\n  if (n === 17) return prime_fib(17);\n  if (n === 19)\
    \ return prime_fib(19);\n  if (n === 23) return prime_fib(23);\n  if (n === 29)\
    \ return prime_fib(29);\n  if (n === 31) return prime_fib(31);\n  if (n === 37)\
    \ return prime_fib(37);\n  if (n === 41) return prime_fib(41);\n  if (n === 43)\
    \ return prime_fib(43);\n  if (n === 47) return prime_fib(47);\n  if (n === 53)\
    \ return prime_fib(53);\n  if (n === 59) return prime_fib(59);\n  if (n === 61)\
    \ return prime_fib(61);\n  if (n === 67) return prime_fib(67);\n  if (n === 73)\
    \ return prime_fib(73);\n  if (n === 79) return prime_fib(79);\n  if (n === 83)\
    \ return prime_fib(83);\n  if (n === 89) return prime_fib(89);\n  if (n === 97)\
    \ return prime_fib(97);\n  return prime_fib(97);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpac_soc37.js:66:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpac_soc37.js:77:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let prime_found:\
    \ boolean;\n  let i: number;\n  let j: number;\n  for (i = 2; i <= n; i++) {\n\
    \    prime_found = false;\n    for (j = 2; j <= Math.sqrt(i); j++) {\n      if\
    \ (i % j === 0) {\n        prime_found = true;\n        break;\n      }\n    }\n\
    \    if (prime_found) {\n      prime = i;\n      break;\n    }\n    fib = fib\
    \ + (i - 1);\n  }\n  return prime;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpby1hkv5w.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpby1hkv5w.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  if (n % 2 === 1) {\n    return prime_fib(n - 2) + 1;\n  }\n  return prime_fib(n\
    \ - 3) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp265l0n0b.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp265l0n0b.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 3) + 1;\n  if (n % 5 == 0) return prime_fib(n - 5) + 1;\n  return\
    \ prime_fib(n - 1) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx2n2r3y1.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2n2r3y1.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  if (n % 3 == 0) return prime_fib(n - 3) + prime_fib(n - 4);\n  return\
    \ prime_fib(n - 5) + prime_fib(n - 6);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpra959kjl.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpra959kjl.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  if (n % 3 === 0) {\n    return prime_fib(n - 2) + 1;\n  }\n  if (n % 5 ===\
    \ 0) {\n    return prime_fib(n - 3) + 1;\n  }\n  return prime_fib(n - 5) + 1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphusbk78q.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphusbk78q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 3) + 1;\n  if (n % 5 == 0) return prime_fib(n - 5) + 1;\n  return\
    \ prime_fib(n - 1) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx2n2r3y1.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2n2r3y1.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpb6kwh0e7.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb6kwh0e7.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 5) return prime_fib(n - 3) + prime_fib(n -\
    \ 5);\n  if (n < 7) return prime_fib(n - 7) + prime_fib(n - 9);\n  return prime_fib(n\
    \ - 11) + prime_fib(n - 13);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxakeavzk.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxakeavzk.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpf132d5y0.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf132d5y0.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n === 5) return prime_fib(5);\n  if (n % 2 == 0) return prime_fib(3\
    \ * n + 1) - 1;\n  if (n % 3 == 0) return prime_fib(3 * n + 3);\n  if (n % 5 ==\
    \ 0) return prime_fib(5 * n + 5);\n  return prime_fib(n / 5) * prime_fib(n / 5)\
    \ * prime_fib(n % 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxj7x92ns.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxj7x92ns.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwq2aqgt6.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwq2aqgt6.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 1) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 2) + 1;\n  if (n % 5 == 0) return prime_fib(n - 3) + 1;\n  return\
    \ prime_fib(n - 5) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfsqa76it.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfsqa76it.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  return prime_fib(n - 2) + 1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpuj9a8vjg.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuj9a8vjg.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2) + prime_fib(n\
    \ / 3);\n  if (n % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 5);\n  return\
    \ prime_fib(n / 5) + prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdmbo6ekj.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdmbo6ekj.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  if (n % 2 === 1) {\n    return prime_fib(n - 2) + 1;\n  }\n  return prime_fib(n\
    \ - 3) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp265l0n0b.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp265l0n0b.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyz33ky1e.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz33ky1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  return prime_fib(n - 3) + prime_fib(n - 5);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptoyxmzcc.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptoyxmzcc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 3);\n  return prime_fib(n\
    \ / 5) + prime_fib(n / 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppj9g7hkt.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppj9g7hkt.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: -1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 2;\n  while\
    \ (true) {\n    if (prime > n) {\n      return prime;\n    }\n    if (fib ===\
    \ 0 || fib === 1) {\n      prime = fib;\n      fib = 0;\n    } else {\n      fib\
    \ = fib + (fib - 1) + (prime - 1);\n      prime = fib;\n    }\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659738738
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1);\n  }\n \
    \ if (n % 2 === 1) {\n    return prime_fib(n - 2);\n  }\n  var f = prime_fib(n\
    \ - 1);\n  var r = prime_fib(n - 2);\n  var m = f;\n  while (m % r !== 0) {\n\
    \    m = r;\n    r = f % r;\n  }\n  return m;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy38qbh3b.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy38qbh3b.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 17) {\n    return prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7);\n  }\n  return prime_fib(n - 1) * prime_fib(n - 2)\
    \ * prime_fib(n - 3) * prime_fib(n - 5) * prime_fib(n - 7);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsee3w040.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsee3w040.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 1;\n  for (let\
    \ i = 2; i <= n; i++) {\n    fib += prime;\n    prime = fib;\n  }\n  return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxugci_fj.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxugci_fj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4);\n  }\n  if (n % 5 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5);\n  }\n  if (n\
    \ % 7 === 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n -\
    \ 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n -\
    \ 7);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) +\
    \ prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) +\
    \ prime_fib(n - 8);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_0cejart.js:45:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_0cejart.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2) + 1;\n  if\
    \ (n % 3 == 0) return prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppxs9ddib.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppxs9ddib.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n === 73) {\n    return 73;\n  }\n  if (n === 79) {\n    return 79;\n\
    \  }\n  if (n === 83) {\n    return 83;\n  }\n  if (n === 89) {\n    return 89;\n\
    \  }\n  if (n === 97) {\n    return 97;\n  }\n  return prime_fib(n - 1);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpk3hc8v2j.js:90:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk3hc8v2j.js:101:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx8bhqkf4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx8bhqkf4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2) + 1;\n  if\
    \ (n % 3 == 0) return prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppxs9ddib.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppxs9ddib.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  for (let\
    \ i = 2; i <= n; i++) {\n    prime = i;\n    fib = fib + i;\n    if (fib > n)\
    \ {\n      break;\n    }\n  }\n  return prime;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp99ji8wkq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp99ji8wkq.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpu3y9fw_p.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu3y9fw_p.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 1;\n  let i:\
    \ number = 0;\n  while (i < n) {\n    fib += prime;\n    prime = fib;\n    fib\
    \ += 1;\n    i++;\n  }\n  return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpshaiv99d.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpshaiv99d.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 17) {\n    return prime_fib(n - 7) + prime_fib(n\
    \ - 6) + prime_fib(n - 5) + prime_fib(n - 4) + prime_fib(n - 3) + prime_fib(n\
    \ - 2) + prime_fib(n - 1);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp64gfh93e.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp64gfh93e.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 3) + prime_fib(n - 4);\n \
    \ }\n  return prime_fib(n - 5) + prime_fib(n - 6);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpuzq6cy1l.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuzq6cy1l.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number[] = [];\n  let a = 0;\n  let b = 1;\n \
    \ let i = 0;\n  while (i < n) {\n    fib.push(a);\n    a = b;\n    b = a + b;\n\
    \    i++;\n  }\n  return fib[fib.length - 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp6cn61t1i.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6cn61t1i.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  if (n % 3 == 0) return prime_fib(n - 3) + prime_fib(n - 4);\n  return\
    \ prime_fib(n - 5) + prime_fib(n - 6);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpra959kjl.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpra959kjl.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ prime_fib(n - 1) + 1;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 2)\
    \ + 1;\n  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 3) + 1;\n  }\n  return\
    \ prime_fib(n - 4) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpf0a7jmh3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf0a7jmh3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 9) return prime_fib(n - 3) + prime_fib(n -\
    \ 5) + prime_fib(n - 7);\n  if (n < 18) return prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 19);\n  return prime_fib(n - 15) + prime_fib(n - 23);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpq_ziuefx.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq_ziuefx.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 1;\n  let prime_found:\
    \ boolean = false;\n  for (let i = 1; i <= n; i++) {\n    prime_found = false;\n\
    \    for (let j = 1; j <= prime; j++) {\n      if (i % j === 0) {\n        prime_found\
    \ = true;\n        break;\n      }\n    }\n    if (!prime_found) {\n      prime++;\n\
    \      fib = fib + i;\n    }\n  }\n  return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3m3bstco.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3m3bstco.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx8bhqkf4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx8bhqkf4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n % 2 == 0) return prime_fib(3 * n + 1) / prime_fib(2);\n\
    \  if (n % 3 == 0) return prime_fib(3 * n + 2) / prime_fib(3);\n  return prime_fib(5\
    \ * n + 4) / prime_fib(6);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3aztrpth.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3aztrpth.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n === 5) return prime_fib(5);\n  if (n === 10) return prime_fib(10);\n\
    \  if (n === 15) return prime_fib(15);\n  if (n === 20) return prime_fib(20);\n\
    \  if (n === 25) return prime_fib(25);\n  if (n === 30) return prime_fib(30);\n\
    \  if (n === 35) return prime_fib(35);\n  if (n === 40) return prime_fib(40);\n\
    \  if (n === 45) return prime_fib(45);\n  if (n === 50) return prime_fib(50);\n\
    \  if (n === 55) return prime_fib(55);\n  if (n === 60) return prime_fib(60);\n\
    \  if (n === 65) return prime_fib(65);\n  if (n === 70) return prime_fib(70);\n\
    \  if (n === 75) return prime_fib(75);\n  if (n === 80) return prime_fib(80);\n\
    \  if (n === 85) return prime_fib(85);\n  if (n === 90) return prime_fib(90);\n\
    \  if (n === 95) return prime_fib(95);\n  if (n === 100) return prime_fib(100);\n\
    \  if (n === 105) return prime_fib(105);\n  if (n === 110) return prime_fib(110);\n\
    \  if (n === 115) return prime_fib(115);\n  if (n === 120) return prime_fib(120);\n\
    \  if (n === 125) return prime_fib(125);\n  if (n === 130) return prime_fib(130);\n\
    \  if (n === 135) return prime_fib(135);\n  if (n === 140) return prime_fib(140);\n\
    \  if (n === 145) return prime_fib(145);\n  if (n === 150) return prime_fib(150);\n\
    \  if (n === 155) return prime_fib(155);\n  if (n === 160) return prime_fib(160);\n\
    \  if (n === 165) return prime_fib(165);\n  if (n === 170) return prime_fib(170);\n\
    \  if (n === 175) return prime_fib(175);\n  if (n === 180) return prime_fib(180);\n\
    \  if (n === 185) return prime_fib(185);\n  if (n === 190) return prime_fib(190);\n\
    \  if (n === 195) return prime_fib(195);\n  if (n === 200) return prime_fib(200);\n\
    \  if (n === 205) return prime_fib(205);\n  if (n === 210) return prime_fib(210);\n\
    \  if (n === 215) return prime_fib(215);\n  if (n === 220) return prime_fib(220);\n\
    \  if (n === 225) return prime_fib(\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwy3ori2h.ts(60,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpwy3ori2h.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 1;\n  let prime_found:\
    \ boolean;\n  for (let i: number = 2; i <= n; i++) {\n    prime_found = false;\n\
    \    for (let j: number = 0; j < i; j++) {\n      if (i % j === 0) {\n       \
    \ prime_found = true;\n        break;\n      }\n    }\n    if (!prime_found) {\n\
    \      prime = i;\n      fib = i;\n      break;\n    }\n  }\n  return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpnz3bsw_g.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnz3bsw_g.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 3) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgq5199zm.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgq5199zm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 3) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgq5199zm.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgq5199zm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 1) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 2) + 1;\n  if (n % 5 == 0) return prime_fib(n - 3) + 1;\n  return\
    \ prime_fib(n - 5) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpfsqa76it.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfsqa76it.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + 1;\n  }\n  return\
    \ prime_fib(n - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpum524_ke.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpum524_ke.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number[] = [];\n  let a = 0;\n  let b = 0;\n \
    \ let c = 0;\n  for (let i = 0; i < n; i++) {\n    fib[i] = a + b;\n    a = b;\n\
    \    b = fib[i];\n    if (b === 1) {\n      c = 1;\n    } else {\n      c = 0;\n\
    \    }\n  }\n  return fib[n];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n2\n    at test (/tmp/tmp77vm72v_.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp77vm72v_.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyz33ky1e.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz33ky1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2) + 1;\n  if\
    \ (n % 3 == 0) return prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppxs9ddib.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppxs9ddib.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738725
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n === 5) return prime_fib(5);\n  if (n % 2 == 0) return prime_fib(3\
    \ * n + 1) - 1;\n  if (n % 3 == 0) return prime_fib(5 - n) / prime_fib(6);\n \
    \ return prime_fib(n - 1) + 1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjrap48t9.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjrap48t9.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1_v4hd8g.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_v4hd8g.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx8bhqkf4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx8bhqkf4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 3);\n  if (n % 5 == 0) return\
    \ prime_fib(n / 5) + prime_fib(n / 5);\n  return prime_fib(n / 7);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpit6tb4r0.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpit6tb4r0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 3) + 1;\n  if (n % 5 == 0) return prime_fib(n - 5) + 1;\n  return\
    \ prime_fib(n - 1) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx2n2r3y1.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2n2r3y1.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 9) return prime_fib(n - 3) + prime_fib(n -\
    \ 5) + prime_fib(n - 7);\n  if (n < 18) return prime_fib(n - 7) + prime_fib(n\
    \ - 11) + prime_fib(n - 19);\n  return prime_fib(n - 15) + prime_fib(n - 23);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpq_ziuefx.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq_ziuefx.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx3xdvg92.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx3xdvg92.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: boolean;\n  for (let\
    \ i = 2; i <= n; i++) {\n    prime = true;\n    for (let j = 2; j < i; j++) {\n\
    \      if (i % j === 0) {\n        prime = false;\n        break;\n      }\n \
    \   }\n    if (prime) {\n      fib = fib + (i - 1);\n    }\n  }\n  return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpaet54o2r.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaet54o2r.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpf132d5y0.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf132d5y0.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  if (n % 2 === 1) {\n    return prime_fib(n - 2) + 1;\n  }\n  return prime_fib(n\
    \ - 3) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp2qmcvlb7.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2qmcvlb7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4);\n  }\n  if (n % 5 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) +\
    \ prime_fib(n - 5) + prime_fib(n - 6);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpo1fgh7k3.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo1fgh7k3.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 0;\n  let i:\
    \ number;\n  for (i = 2; i <= n; i++) {\n    if (n % i === 0) {\n      prime =\
    \ i;\n      fib = fib + (prime - 1);\n    }\n  }\n  return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpc_5bhkl0.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc_5bhkl0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyk0tj6wa.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyk0tj6wa.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 3) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgq5199zm.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgq5199zm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx8bhqkf4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx8bhqkf4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n % 2 == 0) return prime_fib(2 * n);\n  if (n %\
    \ 3 == 0) return prime_fib(3 * n + 1);\n  if (n % 5 == 0) return prime_fib(5 *\
    \ n + 1);\n  return prime_fib(n / 2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmped1vvrfw.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmped1vvrfw.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmphs5s1g4b.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphs5s1g4b.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ 2;\n  }\n  if (n % 2 === 0 || n % 3 === 0) {\n    return n;\n  }\n  let i =\
    \ Math.floor(Math.sqrt(n));\n  if (i === 1) {\n    return n;\n  }\n  return prime_fib(i\
    \ - 1) + prime_fib(i - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_ur6yuxl.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ur6yuxl.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n !== n) {\n    return n;\n  }\n  return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1barp2lv.js:78:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1barp2lv.js:89:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 3);\n  return prime_fib(n\
    \ / 5) + prime_fib(n / 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmppj9g7hkt.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppj9g7hkt.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 === 0 || n % 3 === 0) {\n    return n;\n  }\n  if (n %\
    \ 5 === 0) {\n    return n;\n  }\n  if (n % 7 === 0 && n % 10 === 0 || n % 10\
    \ === 6) {\n    return n;\n  }\n  if (n % 10 === 1) {\n    return n + 1;\n  }\n\
    \  if (n % 10 === 2) {\n    return n + 2;\n  }\n  if (n % 10 === 5) {\n    return\
    \ n + 5;\n  }\n  if (n % 10 === 7) {\n    return n + 7;\n  }\n  if (n % 10 ===\
    \ 11) {\n    return n + 11;\n  }\n  if (n % 10 === 12) {\n    return n + 12;\n\
    \  }\n  if (n % 10 === 15) {\n    return n + 15;\n  }\n  if (n % 10 === 17) {\n\
    \    return n + 17;\n  }\n  if (n % 10 === 19) {\n    return n + 19;\n  }\n  if\
    \ (n % 10 === 20) {\n    return n + 20;\n  }\n  if (n % 10 === 23) {\n    return\
    \ n + 23;\n  }\n  if (n % 10 === 24) {\n    return n + 24;\n  }\n  if (n % 10\
    \ === 25) {\n    return n + 25;\n  }\n  if (n % 10 === 26) {\n    return n + 26;\n\
    \  }\n  if (n % 10 === 28) {\n    return n + 28;\n  }\n  if (n % 10 === 29) {\n\
    \    return n + 29;\n  }\n  if (n % 10 === 30) {\n    return n + 30;\n  }\n  if\
    \ (n % 10 === 31) {\n    return n + 31;\n  }\n  if (n % 10 === 32) {\n    return\
    \ n + 32;\n  }\n  if (n % 10 === 33) {\n    return n + 33;\n  }\n  if (n % 10\
    \ === 34) {\n    return n + 34;\n  }\n  if (n % 10 === 35) {\n    return n + 35;\n\
    \  }\n  if (n % 10 === 36) {\n    return n + 36;\n  }\n  if (n % 10 === 37) {\n\
    \    return n + 37;\n  }\n  if (n % 10 === 38) {\n    return n + 38;\n  }\n  if\
    \ (n % 10 === 39) {\n    return n + 39;\n  }\n  if (n % 10 === 40) {\n    return\
    \ n + 40;\n  }\n  if (n % 10 === 41) {\n    return n + 41;\n  }\n  if (n % 10\
    \ === 42) {\n    return n + 42;\n  }\n  if (n % 10 === 43) {\n    return n + 43;\n\
    \  }\n  if (n % 10 === 44) {\n    return n + 44;\n  }\n  if (n % 10 === 45) {\n\
    \    return n + 45;\n  }\n  if (n % 10 === 46) {\n    return n + 46;\n  }\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv3robu06.ts(146,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  if (n % 3 == 0) return prime_fib(n - 2) + prime_fib(n - 3);\n  return\
    \ prime_fib(n - 3) + prime_fib(n - 2);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmdb81tdx.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmdb81tdx.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n  return prime_fib(n - 3) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgq5199zm.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgq5199zm.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: number = 1;\n  for (let\
    \ i = 2; i <= n; i++) {\n    fib += prime;\n    prime = fib;\n  }\n  return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxugci_fj.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxugci_fj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n - 2) + 1;\n  if (n % 3 == 0) return\
    \ prime_fib(n - 3) + 1;\n  if (n % 5 == 0) return prime_fib(n - 5) + 1;\n  return\
    \ prime_fib(n - 1) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx2n2r3y1.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2n2r3y1.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n  if (n === 7) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6);\n  if (n === 8) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7);\n  if (n === 9) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8);\n  if (n === 10) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9);\n  if (n === 11) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n - 10);\n  if (n ===\
    \ 12) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n\
    \ - 8) + prime_fib(n - 9) + prime_fib(n - 10) + prime_fib(n - 11);\n  if (n ===\
    \ 13) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n\
    \ - 8) + prime_fib(n - 9) + prime_fib(n - 10) + prime_fib(n - 11) + prime_fib(n\
    \ - 12);\n  if (n === 14) return prime_fib(n - 1) + prime_\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp36hr5c7y.ts(42,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n === 11) return prime_fib(11);\n  if (n === 13)\
    \ return prime_fib(13);\n  if (n === 17) return prime_fib(17);\n  if (n === 19)\
    \ return prime_fib(19);\n  if (n === 23) return prime_fib(23);\n  if (n === 29)\
    \ return prime_fib(29);\n  if (n === 31) return prime_fib(31);\n  if (n === 37)\
    \ return prime_fib(37);\n  if (n === 41) return prime_fib(41);\n  if (n === 43)\
    \ return prime_fib(43);\n  if (n === 47) return prime_fib(47);\n  if (n === 53)\
    \ return prime_fib(53);\n  if (n === 59) return prime_fib(59);\n  if (n === 61)\
    \ return prime_fib(61);\n  if (n === 67) return prime_fib(67);\n  if (n === 73)\
    \ return prime_fib(73);\n  if (n === 79) return prime_fib(79);\n  if (n === 83)\
    \ return prime_fib(83);\n  if (n === 89) return prime_fib(89);\n  if (n === 97)\
    \ return prime_fib(97);\n  return prime_fib(97);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpac_soc37.js:66:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpac_soc37.js:77:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 2) + prime_fib(n / 5);\n \
    \ return prime_fib(n / 5) + prime_fib(n / 3) + prime_fib(n / 2) + prime_fib(n\
    \ / 5);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0ix48n4_.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ix48n4_.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  if (n % 3 == 0) return prime_fib(n - 3) + prime_fib(n - 4);\n  return\
    \ prime_fib(n - 5) + prime_fib(n - 6);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpra959kjl.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpra959kjl.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n >= 17) {\n    return prime_fib(n - 3) + prime_fib(n\
    \ - 5) + prime_fib(n - 7);\n  }\n  return prime_fib(n - 1) * prime_fib(n - 2)\
    \ * prime_fib(n - 3) * prime_fib(n - 5) * prime_fib(n - 7);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsee3w040.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsee3w040.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  if (n % 2 === 1) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx8bhqkf4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx8bhqkf4.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  return prime_fib(n - 3) + prime_fib(n - 5);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptoyxmzcc.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptoyxmzcc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n === 3) {\n    return 3;\n  }\n  if (n === 5) {\n  \
    \  return 5;\n  }\n  if (n === 7) {\n    return 7;\n  }\n  if (n === 11) {\n \
    \   return 11;\n  }\n  if (n === 13) {\n    return 13;\n  }\n  if (n === 17) {\n\
    \    return 17;\n  }\n  if (n === 19) {\n    return 19;\n  }\n  if (n === 23)\
    \ {\n    return 23;\n  }\n  if (n === 29) {\n    return 29;\n  }\n  if (n ===\
    \ 31) {\n    return 31;\n  }\n  if (n === 37) {\n    return 37;\n  }\n  if (n\
    \ === 41) {\n    return 41;\n  }\n  if (n === 43) {\n    return 43;\n  }\n  if\
    \ (n === 47) {\n    return 47;\n  }\n  if (n === 53) {\n    return 53;\n  }\n\
    \  if (n === 59) {\n    return 59;\n  }\n  if (n === 61) {\n    return 61;\n \
    \ }\n  if (n === 67) {\n    return 67;\n  }\n  if (n === 71) {\n    return 71;\n\
    \  }\n  if (n === 79) {\n    return 79;\n  }\n  if (n === 83) {\n    return 83;\n\
    \  }\n  if (n === 89) {\n    return 89;\n  }\n  if (n === 97) {\n    return 97;\n\
    \  }\n  if (n === 101) {\n    return 101;\n  }\n  if (n === 103)\_{\n    return\
    \ 103;\n  }\n  if (n === 107) {\n    return 107;\n  }\n  if (n === 109) {\n  \
    \  return 109;\n  }\n  if (n === 113) {\n    return 113;\n  }\n  if (n === 127)\
    \ {\n    return 127;\n  }\n  if (n === 131) {\n    return 131;\n  }\n  if (n ===\
    \ 137) {\n    return 137;\n  }\n  if (n === 139) {\n    return 139;\n  }\n  if\
    \ (n === 141) {\n    return 141;\n  }\n  if (n === 147) {\n    return 147;\n \
    \ }\n  if (n === 149) {\n    return 149;\n  }\n  if (n === 151) {\n    return\
    \ 151;\n  }\n  if (n === 157) {\n    return 157;\n  }\n  if (n === 161) {\n  \
    \  return 161;\n  }\n  if (n === 163) {\n    return 163;\n  }\n  if (n === 167)\
    \ {\n    return 167;\n  }\n  if (n === 173) {\n    return 173;\n  }\n  if (n ===\
    \ 179) {\n    return 179;\n  }\n  if (n === 181) {\n    return 181;\n  }\n  if\
    \ (n === 191) {\n    return 191;\n  }\n  if (n === 193) {\n    return 193;\n \
    \ }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3propqig.ts(173,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: boolean;\n  for (let\
    \ i = 2; i <= n; i++) {\n    prime = true;\n    for (let j = 2; j < i; j++) {\n\
    \      if (i % j === 0) {\n        prime = false;\n        break;\n      }\n \
    \   }\n    if (prime) {\n      fib = fib + (i - 1);\n    }\n  }\n  return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpaet54o2r.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaet54o2r.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  if (n % 5 == 0) return prime_fib(n / 5) + 1;\n  return\
    \ prime_fib(n / 7);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpn89vcgwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn89vcgwm.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 9) return prime_fib(n - 3) + prime_fib(n -\
    \ 5) + prime_fib(n - 7);\n  return prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n\
    \ - 7) + prime_fib(n - 9);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp1ddwq_0z.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ddwq_0z.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738727

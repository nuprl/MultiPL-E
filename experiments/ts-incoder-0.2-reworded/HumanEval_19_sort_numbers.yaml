name: HumanEval_19_sort_numbers
language: ts
prompt: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to\
  \ largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\nfunction\
  \ sort_numbers(numbers: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\
  \");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
  three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five zero\
  \ four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
  six five four three two one zero\"),\"zero one two three four five six\");\n}\n\n\
  test();"
completions: ["  let numbers_array = numbers.split(\" \");\n  let numbers_sorted =\
    \ [];\n  numbers_array.sort((a, b) => {\n    if (a < b) {\n      return -1;\n\
    \    } else if (a > b) {\n      return 1;\n    } else {\n      return 0;\n   \
    \ }\n  });\n  for (let i = 0; i < numbers_array.length; i++) {\n    numbers_sorted.push(numbers_array[i]);\n\
    \  }\n  return numbers_sorted.join(\" \");\n}\n", "  return numbers.split(\" \"\
    ).sort().join(\" \");\n}\n", "  let numbers_array = numbers.split(\" \");\n  numbers_array.sort();\n\
    \  return numbers_array.join(\" \");\n}\n", "  let numbers_array = numbers.split(\"\
    \ \");\n  numbers_array.sort();\n  return numbers_array.join(\" \");\n}\n", " \
    \ return numbers.split(' ')\n    .sort((a, b) => a - b)\n    .join(' ');\n}\n",
  "  let numbers_array = numbers.split(\" \");\n  let sorted_numbers = numbers_array.sort();\n\
    \  return sorted_numbers.join(\" \");\n}\n", "\tlet numbers_array = numbers.split(\"\
    \ \");\n\tnumbers_array.sort();\n\treturn numbers_array.join(\" \");\n}\n", " \
    \ return numbers.split(' ')\n    .map(n => parseInt(n, 10))\n    .sort((a, b)\
    \ => a - b)\n    .map(n => n < 10 ? '0' + n : n)\n    .join(' ');\n}\n", "  let\
    \ numbers_array = numbers.split(\" \");\n  let sorted_numbers = numbers_array.sort();\n\
    \  return sorted_numbers.join(\" \");\n}\n", "  let numbers_array = numbers.split(\"\
    \ \");\n  numbers_array.sort((a, b) => a - b);\n  return numbers_array.join(\"\
    \ \");\n}\n", "  let numbers_array = numbers.split(\" \");\n  let numbers_sorted\
    \ = [];\n  for (let i = 0; i < numbers_array.length; i++) {\n    numbers_sorted.push(parseInt(numbers_array[i]));\n\
    \  }\n  numbers_sorted.sort((a, b) => a - b);\n  return numbers_sorted.join(\"\
    \ \");\n}\n", "  return numbers.split(' ').sort().join(' ');\n}\n", "\tlet numbers_array\
    \ = numbers.split(\" \");\n\tnumbers_array.sort();\n\tlet sorted_numbers = \"\"\
    ;\n\tfor (let i = 0; i < numbers_array.length; i++) {\n\t\tsorted_numbers += numbers_array[i]\
    \ + \" \";\n\t}\n\treturn sorted_numbers;\n}\n", "  let numbers_array = numbers.split(\"\
    \ \");\n  numbers_array.sort();\n  return numbers_array.join(\" \");\n}\n", "\t\
    let numbers_array = numbers.split(\" \");\n\tnumbers_array.sort();\n\treturn numbers_array.join(\"\
    \ \");\n}\n", "  return numbers.replace(/\\s+/g, ' ').split(' ')\n    .sort((a,\
    \ b) => a - b)\n    .join(' ');\n}\n", "  return numbers.split(' ')\n    .map(function\
    \ (num) {\n      return Number(num);\n    })\n    .sort(function (a, b) {\n  \
    \    return a - b;\n    })\n    .join(' ');\n}\n", "  let numbers_array = numbers.split(\"\
    \ \");\n  numbers_array.sort();\n  return numbers_array.join(\" \");\n}\n", " \
    \ let numbers_array = numbers.split(\" \");\n  let sorted_numbers = \"\";\n  for\
    \ (let i = 0; i < numbers_array.length; i++) {\n    let number = numbers_array[i];\n\
    \    if (number === \"zero\") {\n      sorted_numbers += \"zero\";\n    } else\
    \ if (number === \"one\") {\n      sorted_numbers += \"one\";\n    } else if (number\
    \ === \"two\") {\n      sorted_numbers += \"two\";\n    } else if (number ===\
    \ \"three\") {\n      sorted_numbers += \"three\";\n    } else if (number ===\
    \ \"four\") {\n      sorted_numbers += \"four\";\n    } else if (number === \"\
    five\") {\n      sorted_numbers += \"five\";\n    } else if (number === \"six\"\
    ) {\n      sorted_numbers += \"six\";\n    } else if (number === \"seven\") {\n\
    \      sorted_numbers += \"seven\";\n    } else if (number === \"eight\") {\n\
    \      sorted_numbers += \"eight\";\n    } else if (number === \"nine\") {\n \
    \     sorted_numbers += \"nine\";\n    }\n  }\n  return sorted_numbers;\n}\n",
  "  const numbers_array = numbers.split(\" \");\n  const sorted_numbers = numbers_array.sort((a,\
    \ b) => a - b);\n  return sorted_numbers.join(\" \");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area\
    \ = 0;\n    if (a + b > c) {\n        area = -1;\n    } else {\n        area =\
    \ ((a + b) * (c + a)) / (b + c);\n    }\n    return Math.round(area * 100) / 100;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpn1qmfmfy.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn1qmfmfy.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 && b === 0 && c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    const area: number = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpwilhlt7m.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwilhlt7m.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow((a\
    \ + b + c), 2) / (2 * a * b));\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmphfqn_khv.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphfqn_khv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0)\n\t\treturn area;\n\telse\n\t\t\
    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpwwof849m.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwwof849m.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b\
    \ - a) * (c - a) / 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmplo10u564.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplo10u564.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s =\
    \ a + b + c;\n    if (s > a * a + b * b + c * c) {\n        return -1;\n    }\n\
    \    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpkq1izv6u.js:21:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpkq1izv6u.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0\
    \ || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet s = (a + b + c) / 2;\n\treturn\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp_jfqnn4e.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_jfqnn4e.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || a < c + b || a > c + b) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsqwnq515.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsqwnq515.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsyo5ean7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyo5ean7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0)\n\t\treturn area;\n\treturn -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpb708moi3.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb708moi3.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuhy_cfxb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuhy_cfxb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79hwb89j.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79hwb89j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (a < c) {\n            return a * c / 2\n        } else {\n\
    \            return b * c / 2\n        }\n    } else {\n        if (b < c) {\n\
    \            return b * c / 2\n        } else {\n            return c * c / 2\n\
    \        }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp3tm1fa46.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3tm1fa46.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area\
    \ * 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcacxgc2n.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcacxgc2n.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b + c || b > a + c || c > a + b) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpcyu_qf5n.js:20:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpcyu_qf5n.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b && a > c) {\n        return a * b * Math.sqrt(3) / 2;\n    }\n    if (b >\
    \ c && b > a) {\n        return b * c * Math.sqrt(3) / 2;\n    }\n    if (c >\
    \ a && c > b) {\n        return c * a * Math.sqrt(3) / 2;\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n12.990381056766578\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpz1q05v_d.js:26:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpz1q05v_d.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 12.990381056766578,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79hwb89j.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79hwb89j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a ===\
    \ 0 || b === 0 || c === 0) {\n\t\treturn -1;\n\t}\n\tlet s = (a + b + c) / 2;\n\
    \treturn Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpjb0tfgri.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjb0tfgri.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (a * b) / c;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c<b) {\n   \
    \         return -1;\n        } else {\n            return (a * c) / b;\n    \
    \    }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp4az3laoa.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4az3laoa.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0) {\n        return area;\n    }\n\
    \    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp56yoodyo.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp56yoodyo.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b) return -1;\n  if (b < a + c || b < c + a) return -1;\n  if\
    \ (c < a + b || c < b + a) return -1;\n  return Math.sqrt(a * a + b * b + c *\
    \ c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpy7326vfl.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy7326vfl.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b) return -1;\n  if (b < a + c || b < c + a) return -1;\n  if\
    \ (c < a + b || c < b + a) return -1;\n  return (b - a) * (c - a) / 2 + a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjnfxz88e.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjnfxz88e.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area >= 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpc8obshdg.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpc8obshdg.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b && a > c) {\n        return Math.sqrt(a * a + b * b + c * c)\n    } else if\
    \ (b > a && b > c) {\n        return Math.sqrt(b * b + c * c + a * a)\n    } else\
    \ if (c > a && c > b) {\n        return Math.sqrt(c * c + a * a * b + b * b)\n\
    \    } else {\n        return -1\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.774964387392123\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpe6o6ylr2.js:28:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpe6o6ylr2.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.774964387392123,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    let area = 0;\n    area += a * b * c;\n    area\
    \ -= a * c * b;\n    area += b * c * a;\n    area -= b * c * c;\n    area += c\
    \ * c * a;\n    area -= c * c * b;\n    return Math.round(area / 2) / 2;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpoihmlg1l.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpoihmlg1l.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || a < c + b || a > c + b) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp16npi0mu.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp16npi0mu.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area > 0)\n        return Math.round(area\
    \ * 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpe06qr7tu.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe06qr7tu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b + c || b > a + c || c > a + b) {\n        return -1;\n    }\n    return (b\
    \ - a) * (c - b) * (a - c) / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpkcmrv9ez.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkcmrv9ez.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a ===\
    \ 0 || b === 0 || c === 0) {\n    return -1;\n  }\n  const s = (a + b + c) / 2;\n\
    \  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpfjlikmbm.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfjlikmbm.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    const s = (a + b + c)\
    \ / 2;\n    if (s > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp25xqgfee.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp25xqgfee.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || a > b + c || a > c + b) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpz5bs5_o4.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz5bs5_o4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = Math.abs(a * b * c);\n\tlet sides: number = Math.abs(a + b + c);\n\t\
    if (sides > area) {\n\t\treturn -1;\n\t}\n\treturn Math.round(area / sides * 100)\
    \ / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmptl6wggcl.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptl6wggcl.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n\
    \    return (b + c) * 0.5;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1qagzaeb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1qagzaeb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < b\
    \ + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\t\t\
    return -1;\n\t}\n\treturn Math.sqrt(a * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpe922o3g8.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe922o3g8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a + b > c) {\n\t\ts = c - (a\
    \ + b);\n\t\tt = b - a;\n\t\tarea = s / t;\n\t} else {\n\t\ts = a + b;\n\t\tt\
    \ = c - a;\n\t\tarea = s / t;\n\t}\n\t\n\treturn Math.round(area * 100) / 100;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-2\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpd2t2cyi3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd2t2cyi3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -2,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a > b && a > c) {\n\t\ts = a;\n\
    \t\tt = b;\n\t\tarea = s / t;\n\t} else if (b > a && b > c) {\n\t\ts = b;\n\t\t\
    t = a;\n\t\tarea = s / t;\n\t} else if (c > a && c > b) {\n\t\ts = c;\n\t\tt =\
    \ a;\n\t\tarea = s / t;\n\t} else {\n\t\tarea = -1;\n\t}\n\t\n\treturn area;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.6666666666666667\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3ajuuzak.js:38:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp3ajuuzak.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.6666666666666667,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area\
    \ * 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcacxgc2n.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcacxgc2n.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b\
    \ - a) * (c - b) * (a - c) / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpwa9b6p1i.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwa9b6p1i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < b\
    \ + c || b < a + c || c < a + b) {\n\t\treturn -1;\n\t}\n\treturn Math.sqrt(Math.pow((a\
    \ + b + c), 0.5));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4pu3652j.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4pu3652j.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprvwioc_x.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprvwioc_x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0) {\n\t\treturn area;\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfnhyceoe.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfnhyceoe.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuhy_cfxb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuhy_cfxb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1rd5o7pd.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1rd5o7pd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1rd5o7pd.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1rd5o7pd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0)\n        return area;\n    else\n\
    \        return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpkwhbnyps.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkwhbnyps.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b < c) {\n  \
    \      return -1;\n    }\n    if (a + c < b) {\n        return -1;\n    }\n  \
    \  if (b + c < a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppei256_2.js:29:12)\n  \
    \  at Object.<anonymous> (/tmp/tmppei256_2.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b) return -1;\n    if (b < a + c || b < c + a) return -1;\n\
    \    if (c < a + b || c < b + a) return -1;\n    return Math.sqrt(a * a + b *\
    \ b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpmilon1k0.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmilon1k0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\ts = a + b + c;\n\tt = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\tarea = t * (t + a) * (t + b) * (t + c);\n\
    \t\n\treturn Math.round(area / 2) / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10627845\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp24u62te9.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp24u62te9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10627845,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area\
    \ * 100) / 100;\n    else\n        return -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcacxgc2n.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcacxgc2n.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b) / 2;\n\tif (area > c) {\n\t\tarea = c;\n\t}\n\treturn area;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp8m3olniq.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8m3olniq.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a ===\
    \ 0 || b === 0 || c === 0) {\n\t\treturn 0;\n\t}\n\tlet s = (a + b + c) / 2;\n\
    \treturn Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmplhbvoxq5.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplhbvoxq5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333738
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqtqwqshq.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqtqwqshq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < b\
    \ + c || a < c + b || b < a + c || b < c + a) {\n\t\treturn -1;\n\t}\n\treturn\
    \ (b + c) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0monznjt.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0monznjt.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333738
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0 && area <= 1) {\n\t\treturn area;\n\
    \t}\n\treturn -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpzu0id4b3.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzu0id4b3.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tif (a + b > c) {\n\t\ts = a + b - c;\n\t} else if (a + c > b) {\n\t\ts = a +\
    \ c - b;\n\t} else if (b + c > a) {\n\t\ts = b + c - a;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n\treturn Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpquvrqzp3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpquvrqzp3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b) / c;\n\tif (area > 1) {\n\t\tarea = Math.round(area * 100)\
    \ / 100;\n\t}\n\treturn area;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpsxezg7_2.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsxezg7_2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0\
    \ || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet s = (a + b + c) / 2;\n\treturn\
    \ Math.abs(Math.sqrt(s * (s - a) * (s - b) * (s - c)));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpaimrxzaz.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaimrxzaz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333738
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b && a > c && b > c) {\n        return Math.sqrt(a * a + b * b + c * c);\n \
    \   }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpk8tjj01e.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk8tjj01e.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n\
    \  }\n  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpreuxibhq.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpreuxibhq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || b < a + c || c < a + b) {\n    return -1;\n  }\n  return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqin7167r.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqin7167r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (a < c) {\n            return (a * a + b * b + c * c) / 2;\n\
    \        } else {\n            return (b * b + c * c) / 2;\n        }\n    } else\
    \ {\n        if (b < c) {\n            return (b * b + c * c) / 2;\n        }\
    \ else {\n            return (c * c + a * a) / 2;\n        }\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n25\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpi3q0qlnt.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi3q0qlnt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 25,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b + c || b > a + c || c > a + b) {\n        return -1;\n    }\n    return Math.abs((a\
    \ * b + c) - ((a * a + b * b + c * c) / 2));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmput6ocfvb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmput6ocfvb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || a < b + c || b < c + a) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0w2rvilh.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0w2rvilh.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b) / c;\n\tif (area < 0) {\n\t\treturn -1;\n\t}\n\treturn Math.round(area\
    \ * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpcuo8hncs.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcuo8hncs.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpkhuohmyu.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkhuohmyu.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || b < a + c || c < a + b) {\n    return -1;\n  }\n  return (b + c) * 0.5;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1sqfab29.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1sqfab29.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n  \
    \  return -1;\n  }\n  return (b - a) * (c - a) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcr4jncex.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcr4jncex.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n  \
    \  return -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpmlgqekbi.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmlgqekbi.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79hwb89j.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79hwb89j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprvwioc_x.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprvwioc_x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a > b && a > c) {\n\t\ts = a;\n\
    \t\tt = b;\n\t\tarea = s * (t - b);\n\t} else if (b > c && b > a) {\n\t\ts = b;\n\
    \t\tt = c;\n\t\tarea = s * (t - c);\n\t} else {\n\t\ts = c;\n\t\tt = a;\n\t\t\
    area = s * (t - a);\n\t}\n\t\n\treturn Math.round(area * 100) / 100;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjum_dn03.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjum_dn03.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area > 0 && area < 1) {\n\t\treturn area;\n\
    \t}\n\treturn -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprqq2dhmf.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprqq2dhmf.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprvwioc_x.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprvwioc_x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    let area = 0;\n    area += a * b * c;\n    area\
    \ -= a * c * b;\n    area -= b * c * a;\n    area /= 2;\n    return Math.round(area\
    \ * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfoq1e_8k.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfoq1e_8k.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b && a > c) {\n        return (a * b) / 2;\n    }\n    if (b > c && b > a) {\n\
    \        return (b * c) / 2;\n    }\n    if (c > a && c > b) {\n        return\
    \ (c * a) / 2;\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp20ygaom6.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp20ygaom6.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b) / c;\n    if (area > 1) {\n        area = Math.round(area *\
    \ 100) / 100;\n    }\n    return area;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmppefx6ef_.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppefx6ef_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b || b < a + c || b < c + a) {\n    return -1;\n  }\n  return\
    \ (b - a) * (c - a) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpk3p9e64f.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk3p9e64f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return Math.sqrt(a * a + b * b + c *\
    \ c);\n        } else {\n            return -1;\n        }\n    } else {\n   \
    \     if (c < a) {\n            return Math.sqrt(a * a + c * c + b * b);\n   \
    \     } else {\n            return -1;\n        }\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmph3qc0_hv.js:32:12)\n  \
    \  at Object.<anonymous> (/tmp/tmph3qc0_hv.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b\
    \ - a) * (c - a) / 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmplo10u564.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplo10u564.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c || a +\
    \ c > b || b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpzbeq9w1t.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbeq9w1t.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuhy_cfxb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuhy_cfxb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = Math.abs(a * b);\n\tarea += Math.abs(a * c);\n\tarea += Math.abs(b\
    \ * c);\n\treturn area / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmparma_tib.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmparma_tib.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) return 0;\n    const s = (a + b + c) / 2;\n    const\
    \ area: number = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area\
    \ > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpcr1rlh0t.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcr1rlh0t.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0) {\n\t\treturn area;\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfnhyceoe.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfnhyceoe.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < b\
    \ + c || b < a + c || c < a + b) {\n\t\treturn -1;\n\t}\n\treturn Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpmjrfxrot.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmjrfxrot.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (b + c) / 2;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c < a) {\n \
    \           return (b + c) / 2;\n        } else {\n            return -1;\n  \
    \      }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp2ksz3z__.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ksz3z__.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    const area: number = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpost8hcab.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpost8hcab.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0\
    \ || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet s: number;\n\tlet t: number;\n\
    \tlet u: number;\n\tlet v: number;\n\tlet w: number;\n\tlet area: number;\n\t\
    s = a + b + c;\n\tt = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\tu = a + b;\n\
    \tv = a + c;\n\tw = b + c;\n\tarea = t * (u - v) * (w - u);\n\treturn area > 0\
    \ ? Math.round(area / 2) : -1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp2tkk3s42.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2tkk3s42.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) return -1;\n    const s = (a + b + c) / 2;\n    return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmptbodwm7e.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptbodwm7e.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (a * b) / c;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c < a) {\n \
    \           return -1\n        } else {\n            return (b * c) / a;\n   \
    \     }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp5vevqb8f.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vevqb8f.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n\
    \  }\n  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpreuxibhq.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpreuxibhq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a < b) {\n\t\ts = a;\n\t\tt =\
    \ b;\n\t} else {\n\t\ts = b;\n\t\tt = a;\n\t}\n\t\n\tif (t < c) {\n\t\tarea =\
    \ s * t;\n\t} else {\n\t\tarea = s * (t - c);\n\t}\n\t\n\treturn Math.round(area\
    \ * 100) / 100;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n12\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfdbqkk90.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfdbqkk90.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0\
    \ || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet area = 0;\n\tlet s = a + b\
    \ + c;\n\tif (s > 0) {\n\t\tarea = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \t}\n\treturn area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppip45iqj.js:25:12)\n  \
    \  at Object.<anonymous> (/tmp/tmppip45iqj.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > 1) {\n        area = Math.round(area * 100) / 100;\n\
    \    }\n    return area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp_y2ipcse.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_y2ipcse.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b) / c;\n    if (area >= 0) {\n        return area;\n    } else\
    \ {\n        return -1;\n    }\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpae45ykyj.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpae45ykyj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (a < c) {\n            return (a * a + b * b + c * c) / 2;\n\
    \        } else {\n            return (b * b + c * c) / 2;\n        }\n    } else\
    \ {\n        if (b < c) {\n            return (b * b + c * c) / 2;\n        }\
    \ else {\n            return (c * c + a * a) / 2;\n        }\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n25\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpi3q0qlnt.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi3q0qlnt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 25,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n\
    \  }\n  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpreuxibhq.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpreuxibhq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n\
    \  }\n  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpreuxibhq.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpreuxibhq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let s: number;\n    if\
    \ (a + b > c) {\n        s = a + b - c;\n    } else {\n        s = b - c;\n  \
    \  }\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpovsjnt4d.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpovsjnt4d.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s:\
    \ number;\n    if (a + b > c) {\n        s = a + b - c;\n    } else {\n      \
    \  s = b - c;\n    }\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpy5t_dage.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy5t_dage.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprvwioc_x.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprvwioc_x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tif (a + b > c) {\n\t\ts = (b + c) / 2;\n\t} else {\n\t\ts = (a * b) / 2;\n\t\
    }\n\treturn Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpl4abbnvq.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl4abbnvq.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    let area:\
    \ number = Math.abs(a * b * c) / Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n    return area >= 0.0 ? area : -1;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpq8vlwnxh.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq8vlwnxh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area > 0 && area < 1) {\n\t\treturn Math.round(area\
    \ * 100) / 100;\n\t}\n\treturn -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsoded_d4.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsoded_d4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    let area = 0;\n    area += a * b; //area of triangle\n\
    \    area += a * c; //area of triangle\n    area += b * c; //area of triangle\n\
    \    return Math.round(area / 2); //area of triangle\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp8mdn3eit.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8mdn3eit.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b) return -1;\n    if (b < a + c || b < c + a) return -1;\n\
    \    if (c < a + b || c < b + a) return -1;\n    return (b - a) * (c - a) / 2\
    \ + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnqhra3l_.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnqhra3l_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b) return -1;\n    if (b < a + c || b < c + a) return -1;\n\
    \    if (c < a + b || c < b + a) return -1;\n    return Math.abs((a + b + c) /\
    \ 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpag8e7dzj.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpag8e7dzj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333745
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\
    \ {\n        return -1;\n    }\n    return Math.round(area * 100) / 100;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgjf441dk.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgjf441dk.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333745
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tif (a + b > c) {\n\t\ts = a + b - c;\n\t} else {\n\t\ts = b - c;\n\t}\n\treturn\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp8gio_jo4.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8gio_jo4.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333745
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\ts = a + b + c;\n\tt = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\t\n\tif (t < 1) {\n\t\tarea = t * 0.5;\n\t\
    } else {\n\t\tarea = -1;\n\t}\n\t\n\treturn area;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcd0_gc8n.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcd0_gc8n.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333745
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (a * b) / c;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c < a) {\n \
    \           return -1\n        } else {\n            return (b * c) / a;\n   \
    \     }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp5vevqb8f.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vevqb8f.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b)\
    \ {\n    if (b < c) {\n      return (a + b + c) / 2;\n    } else {\n      return\
    \ -1;\n    }\n  } else {\n    if (c < a) {\n      return (a + b + c) / 2;\n  \
    \  } else {\n      return -1;\n    }\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6.5\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpdw4cfwjo.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdw4cfwjo.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6.5,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b\
    \ - a) * (c - a) / 2 + a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmplo10u564.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplo10u564.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n  \
    \  return -1;\n  }\n  return (b - a) * (c - b) * (a - c) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpamt5g0w_.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpamt5g0w_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0) {\n\t\treturn area;\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfnhyceoe.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfnhyceoe.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0)\n        return area;\n    else\n\
    \        return -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpkwhbnyps.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkwhbnyps.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (a * b) / c;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c < a) {\n \
    \           return (a * c) / b;\n        } else {\n            return -1;\n  \
    \      }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpc_hzoctv.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc_hzoctv.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area > 0)\n\t\treturn Math.round(area);\n\t\
    else\n\t\treturn -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp3iir97mz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3iir97mz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a < b) {\n\t\ts = a;\n\t\tt =\
    \ b;\n\t} else {\n\t\ts = b;\n\t\tt = a;\n\t}\n\t\n\tarea = Math.abs((s * t) -\
    \ (t * s));\n\t\n\tif (area > c) {\n\t\tarea = c;\n\t}\n\t\n\treturn area;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpg7xrj9re.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg7xrj9re.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b) / c;\n\tif (area < 0) {\n\t\tarea = area + 0.5;\n\t}\n\treturn\
    \ area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpnpfog67z.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnpfog67z.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area > 0 && area < 1) {\n        return Math.round(area\
    \ * 100) / 100;\n    } else {\n        return -1;\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpgskovkpn.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgskovkpn.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return Math.sqrt(a * a + b * b + c *\
    \ c);\n        } else {\n            return -1;\n        }\n    } else {\n   \
    \     if (c < a) {\n            return Math.sqrt(a * a + c * c + b * b);\n   \
    \     } else {\n            return -1;\n        }\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.0710678118654755\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmph3qc0_hv.js:32:12)\n  \
    \  at Object.<anonymous> (/tmp/tmph3qc0_hv.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.0710678118654755,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333742
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (a * b) / c;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c < a) {\n \
    \           return -1\n        } else {\n            return (b * c) / a;\n   \
    \     }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp5vevqb8f.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vevqb8f.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = Math.abs(a * b * c);\n\tif (area > 0){\n\t\treturn Math.round(area\
    \ * 100) / 100;\n\t}\n\treturn -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1xabrftb.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xabrftb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuhy_cfxb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuhy_cfxb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || a < b + c || b < c + a) return -1;\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpidsem24r.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpidsem24r.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = ((b * b) - (4 * a * c));\n    if (area < 0) {\n        area = -1;\n\
    \    }\n    return Math.round(area / 2) / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp4lz1l1ch.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4lz1l1ch.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b + c * c) - (a * a + b * b + c * c);\n    if (area < 0) {\n \
    \       area = area + Math.pow(area, 0.5);\n    }\n    return Math.round(area\
    \ / 2) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqapjj968.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqapjj968.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let area: number = Math.abs(a\
    \ * b * c);\n    if (area > 1) {\n        area = Math.round(area * 100) / 100;\n\
    \    }\n    return area;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp_y2ipcse.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_y2ipcse.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1rd5o7pd.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1rd5o7pd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    let s = (a\
    \ + b + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpbnb2gke9.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbnb2gke9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsyo5ean7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsyo5ean7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    const area = (s*(s-a)*(s-b)*(s-c)) / (Math.pow(a, 2) * Math.pow(b,\
    \ 2) * Math.pow(c, 2));\n    return Math.round(area * 100) / 100;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.01\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqw3hio2n.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqw3hio2n.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.01,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a + b > c) {\n\t\ts = c - (a\
    \ + b);\n\t\tt = b - a;\n\t\tarea = Math.abs(Math.sqrt(s * (s - t) * (s - t) +\
    \ t * t));\n\t} else {\n\t\ts = a + b;\n\t\tt = c - a;\n\t\tarea = Math.abs(Math.sqrt(s\
    \ * (s - t) * (s - t) + t * t));\n\t}\n\t\n\treturn area;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpen8jmkm4.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpen8jmkm4.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    const s = (a + b + c)\
    \ / 2;\n    if (s > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmprbx400am.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprbx400am.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n  \
    \  return -1;\n  }\n  return (b - a) * (c - a) / 2;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpcr4jncex.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcr4jncex.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < b\
    \ + c || b < a + c || c < a + b) {\n\t\treturn -1;\n\t}\n\treturn Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpmjrfxrot.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmjrfxrot.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a ===\
    \ 0 || b === 0 || c === 0) {\n\t\treturn 0;\n\t}\n\tif (a + b > c) {\n\t\treturn\
    \ -1;\n\t}\n\tif (a + c > b) {\n\t\treturn -1;\n\t}\n\tif (b + c > a) {\n\t\t\
    return -1;\n\t}\n\treturn (a + b + c) / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpb55n8gbt.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb55n8gbt.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333747
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    let area = 0;\n    if\
    \ (a + b > c) {\n        area = Math.sqrt(Math.pow((a + b), 2) / (Math.pow(c,\
    \ 2)));\n    } else {\n        area = Math.sqrt(Math.pow((b - c), 2) / (Math.pow(a,\
    \ 2)));\n    }\n    return Math.round(area * 100) / 100;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpdp_pz8wf.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdp_pz8wf.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0\
    \ || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet s: number;\n\ts = a + b + c;\n\
    \tif (s > 18) {\n\t\treturn -1;\n\t}\n\treturn Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphupbsqsm.js:25:12)\n  \
    \  at Object.<anonymous> (/tmp/tmphupbsqsm.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (b < c) {\n            return (a * b) / c;\n        } else\
    \ {\n            return -1;\n        }\n    } else {\n        if (c < a) {\n \
    \           return -1\n        } else {\n            return (b * c) / a;\n   \
    \     }\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp5vevqb8f.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5vevqb8f.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333743
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a) {\n        return -1;\n    }\n\
    \    return (b - a) * (c - a) / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0_9djicz.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0_9djicz.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333747
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1rd5o7pd.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1rd5o7pd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79hwb89j.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79hwb89j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79hwb89j.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79hwb89j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return (b\
    \ - a) * (c - b) * (a - c) / 2;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpwa9b6p1i.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwa9b6p1i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    let s = (a\
    \ + b + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpbnb2gke9.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbnb2gke9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = Math.abs(a * b * c);\n\tif (area > 0)\n\t\treturn Math.round(area *\
    \ 100) / 100;\n\treturn -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n60\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmps9styi6b.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps9styi6b.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 60,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333748
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < b\
    \ + c || a < c + b || b < a + c || b < c + a) {\n\t\treturn -1;\n\t}\n\treturn\
    \ Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpha0tkcem.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpha0tkcem.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333748
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b) return -1;\n    if (b < a + c || b < c + a) return -1;\n\
    \    if (c < a + b || c < b + a) return -1;\n    return Math.sqrt(a * a + b *\
    \ b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpmilon1k0.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmilon1k0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a < 0\
    \ || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet area: number = Math.abs(a *\
    \ b * c);\n\tlet sides: number = a + b + c;\n\tif (sides > 0) {\n\t\tarea = Math.round(area\
    \ / sides * 100) / 100;\n\t}\n\treturn area;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0r7bajh3.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0r7bajh3.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333748
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a ===\
    \ 0 || b === 0 || c === 0) {\n    return 0;\n  }\n  const s = (a + b + c) / 2;\n\
    \  return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpiffsvzx6.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiffsvzx6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333748
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || a < b + c || b < c + a) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp0w2rvilh.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0w2rvilh.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || a < b + c || b < a + c || b < c + a || c < a + b) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpu8w313q_.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu8w313q_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333749
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    const s = (a + b + c)\
    \ / 2;\n    if (s > a) {\n        return -1;\n    }\n    if (s > b) {\n      \
    \  return -1;\n    }\n    if (s > c) {\n        return -1;\n    }\n    return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp97e4a_w8.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp97e4a_w8.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = Math.abs(a * b * c);\n\tlet isValid: boolean = (area >= c);\n\tif (isValid)\
    \ {\n\t\treturn Math.round(Math.sqrt(area / Math.pow(a, 2)));\n\t} else {\n\t\t\
    return -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpvdsk9tns.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvdsk9tns.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  const s = (a + b + c) / 2;\n  return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpur1eg4so.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpur1eg4so.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tif (a ===\
    \ 0 || b === 0 || c === 0) return -1;\n\tlet s = (a + b + c) / 2;\n\treturn Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpn5j5cyxj.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpn5j5cyxj.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let s:\
    \ number;\n    if (a + b > c) {\n        s = (a * a + b * b - c * c) / (2.0 *\
    \ c);\n    } else if (a + c > b) {\n        s = (a * a + c * c - b * b) / (2.0\
    \ * b);\n    } else {\n        s = (a * b + c * c - a * a) / (2.0 * a);\n    }\n\
    \    return Math.sqrt(s);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpwcl206qc.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwcl206qc.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet d: number;\n\tlet area: number;\n\t\n\ts = a + b + c;\n\
    \tt = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\td = b - c;\n\tarea = t /\
    \ d;\n\t\n\treturn Math.round(area * 100) / 100;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-77.77\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp1pafa6o8.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1pafa6o8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -77.77,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b)\
    \ {\n    if (b < c) {\n      return (a + b + c) / 2;\n    } else {\n      return\
    \ (a + b + c) / 2;\n    }\n  } else {\n    if (b < c) {\n      return (a + b +\
    \ c) / 2;\n    } else {\n      return (a + b + c) / 2;\n    }\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6.5\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmplvm4nfic.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplvm4nfic.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6.5,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    return Math.abs(Math.sqrt(s * (s - a) * (s - b) * (s - c)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp5skwjmia.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5skwjmia.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b) return -1\n    if (a + b > c) return -1\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2))\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpjdm84_i5.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjdm84_i5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s = a\
    \ + b + c;\n\tif (s > a * a + b * b + c * c) {\n\t\treturn -1;\n\t}\n\treturn\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n77.76888838089432\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwcuszw5v.js:21:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpwcuszw5v.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 77.76888838089432,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || a < c + b || b < a + c || b < c + a) {\n    return -1;\n  }\n  return\
    \ Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp393_dvkz.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp393_dvkz.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n\
    \    return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp1rd5o7pd.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1rd5o7pd.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp108uat25.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp108uat25.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333732
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b + c || b > a + c || c > a + b) {\n        return -1;\n    }\n    return Math.abs((a\
    \ * b + c * a - b * c + a * c - b * b - a * b - c * b + b * c) / 2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp3uhvkz75.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3uhvkz75.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    const s = (a + b + c)\
    \ / 2;\n    if (s > 0) {\n        return Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmprbx400am.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprbx400am.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < 0\
    \ || b < 0 || c < 0) {\n    return -1;\n  }\n  if (a + b > c) {\n    return -1;\n\
    \  }\n  if (a + c > b) {\n    return -1;\n  }\n  if (b + c > a) {\n    return\
    \ -1;\n  }\n  return Math.sqrt(a * a + b * b + c * c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpreuxibhq.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpreuxibhq.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a > b + c || a < c + b) return -1;\n    if (a === b + c) return 0;\n\
    \    return Math.sqrt(a * b + c * c);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpsti3xlgb.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsti3xlgb.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || b < a + c || c < a + b) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpuhy_cfxb.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuhy_cfxb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp79hwb89j.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp79hwb89j.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333731
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b < c) {\n  \
    \      return 0;\n    }\n    if (a + c < b) {\n        return 0;\n    }\n    if\
    \ (b + c < a) {\n        return 0;\n    }\n    return Math.sqrt(Math.pow((a +\
    \ b), 2) + Math.pow((a + c), 2) + Math.pow((b + c), 2));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13.92838827718412\n\
    \nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpk4uly4x_.js:29:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpk4uly4x_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13.92838827718412,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tlet t: number;\n\tlet area: number;\n\t\n\tif (a < b) {\n\t\ts = a;\n\t\tt =\
    \ b;\n\t} else {\n\t\ts = b;\n\t\tt = a;\n\t}\n\t\n\tarea = Math.abs((s * t) -\
    \ (t * s));\n\t\n\tif (area > c) {\n\t\tarea = c;\n\t}\n\t\n\treturn area;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpg7xrj9re.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg7xrj9re.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333746
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area > 0 && area <= Math.sqrt(area)) {\n\t\t\
    return area;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpz23o0zo7.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz23o0zo7.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a >\
    \ b && a > c) {\n        return a * b * 0.5;\n    }\n    if (b > c && b > a) {\n\
    \        return b * c * 0.5;\n    }\n    if (c > a && c > b) {\n        return\
    \ c * a * 0.5;\n    }\n    return -1;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpqhcsd9yv.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqhcsd9yv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ 0 || b < 0 || c < 0) {\n        return -1;\n    }\n    if (a + b > c) {\n  \
    \      return -1;\n    }\n    if (a + c > b) {\n        return -1;\n    }\n  \
    \  if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b\
    \ * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpnoufqcdb.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnoufqcdb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b) {\n        if (a < c) {\n            return (a * b) / Math.sqrt(a * a + b\
    \ * b);\n        } else {\n            return -1\n        }\n    } else {\n  \
    \      if (b < c) {\n            return (b * c) / Math.sqrt(b * b + c * c);\n\
    \        } else {\n            return -1\n        }\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.4\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp1_u8nrbt.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_u8nrbt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.4,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a <\
    \ b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b + a) {\n\
    \        return -1;\n    }\n    let area: number = (a * b + c * a - a * c - b\
    \ * c) / 2;\n    return Math.round(area * 100) / 100;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpdk7kv7jr.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdk7kv7jr.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333750
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    if (a ===\
    \ 0 || b === 0 || c === 0) {\n        return 0;\n    }\n    const s = (a + b +\
    \ c) / 2;\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ area > 0 ? area : -1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpkhuohmyu.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkhuohmyu.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || b < a + c || c < a + b) {\n    return -1;\n  }\n  return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqin7167r.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqin7167r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet s: number;\n\
    \tif (a + b > c) {\n\t\ts = (a * b) / c;\n\t} else {\n\t\ts = (b * c) / a;\n\t\
    }\n\treturn Math.round((s * 100) / 100) / 100;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.02\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp7_uxi8eo.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7_uxi8eo.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.02,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333751
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n\tlet area:\
    \ number = (a * b * c) / 2;\n\tif (area >= 0) {\n\t\treturn area;\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpfnhyceoe.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfnhyceoe.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333735
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n  if (a < b\
    \ + c || b < a + c || c < a + b) {\n    return -1;\n  }\n  return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpqin7167r.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqin7167r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333739
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a: number, b: number, c: number): number {\n    let area:\
    \ number = (a * b * c) / 2;\n    if (area >= 0)\n        return Math.round(area);\n\
    \    else\n        return -1;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n30\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmprgw3tmtt.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprgw3tmtt.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 30,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660333751

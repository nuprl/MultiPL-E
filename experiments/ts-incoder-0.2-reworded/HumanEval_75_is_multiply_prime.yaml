name: HumanEval_75_is_multiply_prime
language: ts
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  function is_multiply_prime(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n\
  \  assert.deepEqual(candidate(30),true);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(125),true);\n\
  \  assert.deepEqual(candidate(105),true);\n  assert.deepEqual(candidate(126),false);\n\
  \  assert.deepEqual(candidate(729),false);\n  assert.deepEqual(candidate(891),false);\n\
  \  assert.deepEqual(candidate(1001),true);\n}\n\ntest();"
completions: ["\tlet prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\tlet is_prime = true;\n\
    \tfor (let i = 0; i < prime_numbers.length; i++) {\n\t\tif (a % prime_numbers[i]\
    \ === 0) {\n\t\t\tis_prime = false;\n\t\t}\n\t}\n\treturn is_prime;\n}\n", " \
    \   let prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for (let i = 0; i < prime_numbers.length;\
    \ i++) {\n        if (a%prime_numbers[i] === 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "  let prime_numbers = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n  let prime_numbers_length = prime_numbers.length;\n  let counter\
    \ = 0;\n  \n  for (let i = 0; i < prime_numbers_length; i++) {\n    if (a % prime_numbers[i]\
    \ == 0) {\n      counter++;\n    }\n  }\n  \n  if (counter == prime_numbers_length)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n", "    let prime_numbers:\
    \ number[] = [];\n    let is_multiply_prime: boolean = false;\n    for (let i\
    \ = 2; i <= a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i = 0; i < prime_numbers.length; i++) {\n    \
    \    if (prime_numbers[i] * prime_numbers[i + 1] == a) {\n            is_multiply_prime\
    \ = true;\n        }\n    }\n    return is_multiply_prime;\n}\n", "    let prime_numbers\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    for (let i = 0; i < prime_numbers.length; i++) {\n\
    \        if (a%prime_numbers[i] === 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    if (a < 100) {\n        return false;\n \
    \   }\n    let prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length\
    \ = prime_numbers.length;\n    let counter = 0;\n    for (let i = 0; i < prime_numbers_length;\
    \ i++) {\n        if (a * prime_numbers[i] === a) {\n            counter++;\n\
    \        }\n    }\n    if (counter === prime_numbers_length) {\n        return\
    \ true;\n    }\n    return false;\n}\n", "  if(a<100){\n    return false;\n  }\n\
    \  \n  let prime_numbers = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \  \n  for(let i=0;i<prime_numbers.length;i++){\n    if(a%prime_numbers[i]==0){\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "    let prime_numbers\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    for (let i = 0; i < prime_numbers.length; i++) {\n\
    \        if (a%prime_numbers[i] === 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    let primes = [2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    for\
    \ (let i = 0; i < primes.length; i++) {\n        if (a%primes[i] === 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n", "    let primes\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    for (let i = 0; i < primes.length; i++) {\n      \
    \  if (a%primes[i] === 0) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n", "  let b = 2;\n  let c = 2;\n  let d = 2;\n  let e = 2;\n\
    \  let f = 3;\n  let g = 3;\n  let h = 3;\n  let i = 0;\n  let j = 0;\n  let k\
    \ = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n\
    \  let q = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n  let u = 0;\n  let v\
    \ = 0;\n  let w = 0;\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  let A = 0;\n\
    \  let B = 0;\n  let C = 0;\n  let D = 0;\n  let E = 0;\n  let F = 0;\n  let G\
    \ = 0;\n  let H = 0;\n  let I = 0;\n  let J = 0;\n  let K = 0;\n  let L = 0;\n\
    \  let M = 0;\n  let N = 0;\n  let O = 0;\n  let P = 0;\n  let Q = 0;\n  let R\
    \ = 0;\n  let S = 0;\n  let T = 0;\n  let U = 0;\n  let V = 0;\n  let W = 0;\n\
    \  let X = 0;\n  let Y = 0;\n  let Z = 0;\n  let a = 0;\n  let b = 0;\n  let c\
    \ = 0;\n  let d = 0;\n  let e = 0;\n  let f = 0;\n  let g = 0;\n  let h = 0;\n\
    \  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n\
    \ = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n\
    \  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n  let y\
    \ = 0;\n  let z = 0;\n  let A = 0;\n  let B = 0;\n  let C = 0;\n  let D = 0;\n\
    \  let E = 0;\n  let F = 0;\n  let G = 0;\n  let H = 0;\n  let I = 0;\n  let J\
    \ = 0;\n  let K = 0;\n  let L = 0;\n  let M = 0;\n  let N = 0;\n  let O = 0;\n\
    \  let P = 0;\n  let Q = 0;\n  let R = 0;\n  let S = 0;\n  let T = 0;\n  let U\
    \ = 0;\n  let V = 0;\n  let W = 0;\n  let X = 0;\n  let Y = 0;\n  let Z = 0;\n\
    \  let a = 0;\n  let b = 0;\n  let c = 0;\n  let d = 0;\n  let e = 0;\n  let f\
    \ = 0;\n  let g = 0;\n  let h = 0;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\
    \  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q\
    \ = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n\
    \  let w = 0;\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  let A = 0;\n  let ",
  "    let prime_numbers: number[] = [];\n    for (let i = 2; i <= Math.sqrt(a); i++)\
    \ {\n        if (a % i === 0) {\n            prime_numbers.push(i);\n        }\n\
    \    }\n    if (prime_numbers.length < 3) {\n        return false;\n    }\n  \
    \  for (let i = 0; i < prime_numbers.length; i++) {\n        if (prime_numbers[i]\
    \ === prime_numbers[i - 1] && prime_numbers[i] === prime_numbers[i + 1]) {\n \
    \           return true;\n        }\n    }\n    return false;\n}\n", "    let\
    \ primes: number[] = [];\n    for (let i = 2; i <= Math.sqrt(a); i++) {\n    \
    \    if (a % i === 0) {\n            primes.push(i);\n        }\n    }\n    return\
    \ primes.some(p => a % p === 0);\n}\n", "\tlet prime_numbers = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n\tlet is_multiply = false;\n\tfor (let i = 0; i < prime_numbers.length;\
    \ i++) {\n\t\tif (a % prime_numbers[i] === 0) {\n\t\t\tis_multiply = true;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\treturn is_multiply;\n}\n", "    let prime_numbers: number[]\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    for (let i = 0; i < prime_numbers.length; i++) {\n\
    \        if (a%prime_numbers[i] === 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n", "    let prime_numbers = [2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let prime_numbers_length = prime_numbers.length;\n    for (let i = 0; i <\
    \ prime_numbers_length; i++) {\n        if (a % prime_numbers[i] == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n", "    let prime_numbers\
    \ = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    let is_prime = true;\n    for (let i = 0; i < prime_numbers.length; i++)\
    \ {\n        if (a % prime_numbers[i] === 0) {\n            is_prime = false;\n\
    \            break;\n        }\n    }\n    return is_prime;\n}\n", "    let prime_numbers\
    \ = prime_numbers_array;\n    let prime_numbers_length = prime_numbers.length;\n\
    \    let is_multiply_prime = false;\n    for (let i = 0; i < prime_numbers_length;\
    \ i++) {\n        let prime_number = prime_numbers[i];\n        if (a % prime_number\
    \ === 0) {\n            is_multiply_prime = true;\n            break;\n      \
    \  }\n    }\n    return is_multiply_prime;\n}\n", "    let prime_numbers = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \    let is_multiply = false;\n    for (let i = 0; i < prime_numbers.length; i++)\
    \ {\n        if (a % prime_numbers[i] == 0) {\n            is_multiply = true;\n\
    \            break;\n        }\n    }\n    return is_multiply;\n}\n", "    let\
    \ prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let is_multiply_prime: boolean\
    \ = false;\n    for (let i = 0; i < prime_numbers.length; i++) {\n        if (a%prime_numbers[i]\
    \ == 0) {\n            is_multiply_prime = true;\n            break;\n       \
    \ }\n    }\n    return is_multiply_prime;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"
